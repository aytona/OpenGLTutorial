// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		42FB6CA8663D46C082F0FEBD /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = E305D58BA58649B6ABA5B91F /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				EE51BB84599843ACB4B1C931 /* CMake PostBuild Rules */,
			);
			dependencies = (
				E96E4EF3A3C74C4B9CBF360E /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		540EEAD33B164800949C3369 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 8EABF21273B849679AF3BDDE /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				C894500C21DC43918A3FAE3D /* CMake Rules */,
			);
			dependencies = (
				514283AF46374C929C16B472 /* PBXTargetDependency */,
				AD56AA19C469462DAC54E0BB /* PBXTargetDependency */,
				E3DA03728EED4DE7BC8DB04A /* PBXTargetDependency */,
				8226D5FEC3934497B0E4681B /* PBXTargetDependency */,
				67DCD6E2ED2B4244926AA914 /* PBXTargetDependency */,
				0C227815585D4D10B869244D /* PBXTargetDependency */,
				324561C065A549E281EA4983 /* PBXTargetDependency */,
				ADB9736707834F9ABD6293F8 /* PBXTargetDependency */,
				B7A86B5AB1AB4F4794CC3CAB /* PBXTargetDependency */,
				3502BA164F6E49EA913E8EF8 /* PBXTargetDependency */,
				9951CF2E70724134947F0B2E /* PBXTargetDependency */,
				F261F98C333E4174842FEE5F /* PBXTargetDependency */,
				CCB3DFEF5C5A42CE969B9DD9 /* PBXTargetDependency */,
				D114438AF8814421A4C2033F /* PBXTargetDependency */,
				AD963CE26742471C85332A83 /* PBXTargetDependency */,
				8471C47DC30B4A96906D44AF /* PBXTargetDependency */,
				182C6B97C3A840E7AA3F06CE /* PBXTargetDependency */,
				C4237E944F254DE4A2EDB10A /* PBXTargetDependency */,
				0CCB599590384ACE811EDFBD /* PBXTargetDependency */,
				4363B02DF7D74936A327D65C /* PBXTargetDependency */,
				1DFCA228F2874F6B8D3D9F79 /* PBXTargetDependency */,
				AE88CFC1F6094120B352D6AA /* PBXTargetDependency */,
				37347834224C468D8F664E71 /* PBXTargetDependency */,
				96FB4383848147C2840B0117 /* PBXTargetDependency */,
				0AB097B3E0074ED985CA883A /* PBXTargetDependency */,
				3005C24AB8DB444FA9BC7DA7 /* PBXTargetDependency */,
				50A300746B03453890F5A18E /* PBXTargetDependency */,
				6D3102A3B2C94A7D947767EB /* PBXTargetDependency */,
				A75286E99F1642DEA42E6C41 /* PBXTargetDependency */,
				E3A96E594BFC464585E7A87D /* PBXTargetDependency */,
				6991472C3799421290A4952A /* PBXTargetDependency */,
				1E45443AF6974EFDA3FD9C78 /* PBXTargetDependency */,
				E900A1CF2CD74877BACEFFF8 /* PBXTargetDependency */,
				DD05315FCBFC40E7A4FE6688 /* PBXTargetDependency */,
				37BBBAF12D9043A4A62A4815 /* PBXTargetDependency */,
				246F47709DE9406783CC9121 /* PBXTargetDependency */,
				450C3223121B409990424877 /* PBXTargetDependency */,
				7587ADC11DB34A0784DF515F /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		80F6DFCB60FF4FB0A2472F7D /* uninstall */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = BC62A9832CB646D085BC56ED /* Build configuration list for PBXAggregateTarget "uninstall" */;
			buildPhases = (
				BC73D2C54A84449B8BF59A6C /* CMake Rules */,
			);
			dependencies = (
			);
			name = uninstall;
			productName = uninstall;
		};
		D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = DDE596C1B84C47F5973AF6F2 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				5F66369A444346BEBC52A0D1 /* CMake Rules */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		0E2B999016B74D8BA1FEA4A2 /* ModelView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1AD39818182C447A9C94E546 /* ModelView.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		1475F6FA1D7D47C7AFEC86DF /* LightingAndTexture.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 37FCABDA1AC2472BA1EF795C /* LightingAndTexture.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		18E9C9C13BFE4AFB93AD8E7A /* TriangleColorBuffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 8D4F04733FC24815BA56E03A /* TriangleColorBuffer.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		20D867EF629A4EC3A7DD569A /* reopen.c in Sources */ = {isa = PBXBuildFile; fileRef = 552AC845ACB34DEFBBB6F918 /* reopen.c */; settings = {COMPILER_FLAGS = ""; }; };
		260BB208CF20400BBA606492 /* cocoa_clipboard.m in Sources */ = {isa = PBXBuildFile; fileRef = F5D80311CF464EABB914BF7F /* cocoa_clipboard.m */; settings = {COMPILER_FLAGS = ""; }; };
		33642B15F48D4C11B29C2EFA /* cocoa_monitor.m in Sources */ = {isa = PBXBuildFile; fileRef = EB71478ED915469D9084BE86 /* cocoa_monitor.m */; settings = {COMPILER_FLAGS = ""; }; };
		33A21674A374441EB47BB8FC /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 627FED21AFA64A4286D3D530 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		39E1D6414B37429C92A00579 /* Mouse.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 7D6A9E4C367749FE96732A24 /* Mouse.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		3A26755FA3E04F8EA76ED622 /* title.c in Sources */ = {isa = PBXBuildFile; fileRef = B6DBD071E0B1431F92C6640E /* title.c */; settings = {COMPILER_FLAGS = ""; }; };
		3AA9EDD8A82D436A8D32F868 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = F7CEAEAA04E9450B868D6416 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		3C62B8B4AD4449DAAAABFA41 /* Texture.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2BEEA4B28D624BBAB2BAE98B /* Texture.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		3E73A18A7EEC45388702C1F7 /* iconify.c in Sources */ = {isa = PBXBuildFile; fileRef = BD34D0F032EF4F96844FE9A4 /* iconify.c */; settings = {COMPILER_FLAGS = ""; }; };
		44D5D6C45BC547C8B7B9DBB4 /* time.c in Sources */ = {isa = PBXBuildFile; fileRef = 0B42C8BA290649EAB462E9D1 /* time.c */; settings = {COMPILER_FLAGS = ""; }; };
		465CD1D58F5149E89671C520 /* TriangleBuffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 42887356836E4B94B19DCD06 /* TriangleBuffer.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		4E4D69668D5C4CE884B06580 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 6E3D3A5FC8F54BDEAF4A2D68 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		503A4F522CF94E69AF9C29D4 /* clipboard.c in Sources */ = {isa = PBXBuildFile; fileRef = 63204DAF15904333B2D6BEC7 /* clipboard.c */; settings = {COMPILER_FLAGS = ""; }; };
		568F9C61952C4256A657A86C /* gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = 4046C460D9884B60B81531FF /* gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		582289E16147498DB16275A0 /* GLFWApp.cpp in Sources */ = {isa = PBXBuildFile; fileRef = FD0EED1C3F544B0D88B9A031 /* GLFWApp.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		5C2D3B2E956C4937BD93D575 /* clipboard.c in Sources */ = {isa = PBXBuildFile; fileRef = B65BCFB0D95C46A28EC1FCE4 /* clipboard.c */; settings = {COMPILER_FLAGS = ""; }; };
		61D1332F202642ACB0A40BF5 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = D0809B2012A34DA1A02F9CB5 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		627D5FE650CD46F2ADD08D0D /* TriangleOrtho.cpp in Sources */ = {isa = PBXBuildFile; fileRef = B1579AFE9CF043638B049DAE /* TriangleOrtho.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		6B9D79C5F7444BFCB98CB691 /* accuracy.c in Sources */ = {isa = PBXBuildFile; fileRef = F3026892BB8F480283E4109D /* accuracy.c */; settings = {COMPILER_FLAGS = ""; }; };
		6D8972E33F724408A37D6924 /* window.c in Sources */ = {isa = PBXBuildFile; fileRef = 41285D33446340C09B417344 /* window.c */; settings = {COMPILER_FLAGS = ""; }; };
		73A65FD4722F4A8D86BDBBF8 /* joystick.c in Sources */ = {isa = PBXBuildFile; fileRef = B0672604A2084A7CA7BD9E82 /* joystick.c */; settings = {COMPILER_FLAGS = ""; }; };
		75254241B11A40039FC78814 /* context.c in Sources */ = {isa = PBXBuildFile; fileRef = EA239CF4D9294B2AB25E4EDD /* context.c */; settings = {COMPILER_FLAGS = ""; }; };
		86FF40A2DEFB45A88040F61E /* cocoa_gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = 0524653A419F439FB6F68F16 /* cocoa_gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		9203159E33504DEEBEEE426E /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 18E6368A85E44C0487870B55 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		92657F53F8E44FC9814DCE89 /* ImmediateTriangles.cpp in Sources */ = {isa = PBXBuildFile; fileRef = CEB5FE824B4A4CDAAF78236D /* ImmediateTriangles.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		983306961C87F8770028B36A /* GL_Version.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 983306951C87F8770028B36A /* GL_Version.cpp */; };
		983306981C8932C60028B36A /* GLFW_Window.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 983306971C8932C60028B36A /* GLFW_Window.cpp */; };
		9A84135AA5504FDD9126130C /* cocoa_time.c in Sources */ = {isa = PBXBuildFile; fileRef = A1FF441295D0469BB45D385B /* cocoa_time.c */; settings = {COMPILER_FLAGS = ""; }; };
		9D739ADA83814DE595A5458E /* TextureLoader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 55E75D4C0F0D461A91F57903 /* TextureLoader.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		9DC88B609AF64704B0D7F0E3 /* threads.c in Sources */ = {isa = PBXBuildFile; fileRef = 063C986A7FF64DD1AF45D024 /* threads.c */; settings = {COMPILER_FLAGS = ""; }; };
		9FB9A2CB9F4B4FF58EB1C80A /* Extensions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2D59268AFBFE4220B71C1310 /* Extensions.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		A168ED9319594D86BF64C223 /* windows.c in Sources */ = {isa = PBXBuildFile; fileRef = 306DFBA4FBEC464DB1ADA03B /* windows.c */; settings = {COMPILER_FLAGS = ""; }; };
		AAE8A1053C8346C98B2DC1B5 /* defaults.c in Sources */ = {isa = PBXBuildFile; fileRef = AEA749AF3875429D84335EEF /* defaults.c */; settings = {COMPILER_FLAGS = ""; }; };
		ACC17DAC6E33444A914D16E6 /* Immediate.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22CDAE243D0443F5BFCCA2FE /* Immediate.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		AD987CF4DF2946698AEF6874 /* tinycthread.c in Sources */ = {isa = PBXBuildFile; fileRef = E1122FEFE9E1476BB1606AED /* tinycthread.c */; settings = {COMPILER_FLAGS = ""; }; };
		B2DDBA2B8859436198C735B3 /* joysticks.c in Sources */ = {isa = PBXBuildFile; fileRef = A3DCB6D30F514448B72A098E /* joysticks.c */; settings = {COMPILER_FLAGS = ""; }; };
		B4C1E099A8D7402391177C78 /* nsgl_context.m in Sources */ = {isa = PBXBuildFile; fileRef = C760AB21AFB24D188BB0E3B4 /* nsgl_context.m */; settings = {COMPILER_FLAGS = ""; }; };
		B7CD0DBDC7844C63A7635913 /* Cube.cpp in Sources */ = {isa = PBXBuildFile; fileRef = DD19910BCB0747569E9EFCA1 /* Cube.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		B86FB916DE6E4AE29C264669 /* cocoa_window.m in Sources */ = {isa = PBXBuildFile; fileRef = 4484F9F4A7F641CDBEA52906 /* cocoa_window.m */; settings = {COMPILER_FLAGS = ""; }; };
		BD4881FEA9454F4497A544F0 /* monitor.c in Sources */ = {isa = PBXBuildFile; fileRef = 9094C551C5D44761AFA8BA3A /* monitor.c */; settings = {COMPILER_FLAGS = ""; }; };
		C17C0FBBC344443FBD282F05 /* tearing.c in Sources */ = {isa = PBXBuildFile; fileRef = C746D43E67644AF592F5B97E /* tearing.c */; settings = {COMPILER_FLAGS = ""; }; };
		C2EC25258A944F1889B44377 /* Lighting.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 4DFE81A847A3485FA7F698E0 /* Lighting.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		C5EAD881EB8C41EE829F3FA7 /* sharing.c in Sources */ = {isa = PBXBuildFile; fileRef = 428AD6685DFD491E94977603 /* sharing.c */; settings = {COMPILER_FLAGS = ""; }; };
		C8EE3CDCC2514255A9180C26 /* modes.c in Sources */ = {isa = PBXBuildFile; fileRef = 742BABB479804559B46F9055 /* modes.c */; settings = {COMPILER_FLAGS = ""; }; };
		CA35E4A5407440469A217DCF /* Model.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 749C6D0B744D4C34AC62284D /* Model.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		CDD038604C2045CDACB3C409 /* cocoa_init.m in Sources */ = {isa = PBXBuildFile; fileRef = 5FCFA6847B3C4C799CB3D8EE /* cocoa_init.m */; settings = {COMPILER_FLAGS = ""; }; };
		CE367C3F53F54CFAACB1B896 /* input.c in Sources */ = {isa = PBXBuildFile; fileRef = 1458926967DA4D48A261FA2A /* input.c */; settings = {COMPILER_FLAGS = ""; }; };
		DC0F3F8831CF4D3D8412BADD /* peter.c in Sources */ = {isa = PBXBuildFile; fileRef = 1555E7CCF3DA43DD88BB9FB8 /* peter.c */; settings = {COMPILER_FLAGS = ""; }; };
		DCE0ABC914444276ADD8B67D /* events.c in Sources */ = {isa = PBXBuildFile; fileRef = 6D13B553FB94420AB0061373 /* events.c */; settings = {COMPILER_FLAGS = ""; }; };
		E4F888083E9D4381B596426F /* cocoa_joystick.m in Sources */ = {isa = PBXBuildFile; fileRef = 767FBC3B97B64C0CAF89B1D7 /* cocoa_joystick.m */; settings = {COMPILER_FLAGS = ""; }; };
		E531F049D44B4D4AB82B3A17 /* fsaa.c in Sources */ = {isa = PBXBuildFile; fileRef = EBBBDD4D4512429C963CBD53 /* fsaa.c */; settings = {COMPILER_FLAGS = ""; }; };
		E69E26B947BC4C2BB5D21040 /* Keyboard.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 0A62A7899AC647499F26CDF8 /* Keyboard.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		EBEC64A2EF3443E29A04732A /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = D31C2C92E62848489D3528AC /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		F47EB3903E3D4B438DDB87AA /* gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = 779C216490A444AEB678296C /* gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		FAD7DFAB1E5B491382135F7D /* init.c in Sources */ = {isa = PBXBuildFile; fileRef = 88273C51297F45A9A3EB99F9 /* init.c */; settings = {COMPILER_FLAGS = ""; }; };
		FD892FED92C44E9CA742C030 /* glfwinfo.c in Sources */ = {isa = PBXBuildFile; fileRef = 5D07DAA9AD0144A48167040D /* glfwinfo.c */; settings = {COMPILER_FLAGS = ""; }; };
		FDE7EEDB36D74E9B807EC69B /* DynamicMesh.cpp in Sources */ = {isa = PBXBuildFile; fileRef = F3B826E7312640C18B27CC5F /* DynamicMesh.cpp */; settings = {COMPILER_FLAGS = ""; }; };
		FEDA4BB9959A4C2B8B279295 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = DCBB336B25094E6AA914A8F6 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		00FC529B844944AAB433C18E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		01B8ACC3DF5449B8B2035B7E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 07F419B34E5E40D697D84C67;
			remoteInfo = accuracy;
		};
		043A616D610F450D8EF364D7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		04A7A9A4DB994FD0ABEA10DC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		08EBC9588B0A48E9864F4553 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D528548224E446E490444F2B;
			remoteInfo = Keyboard;
		};
		09A2F6077C4F4FF79ABA0C94 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		0B7B2B5018F44391B60A930D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C5C77BE636C74891BE9038CA;
			remoteInfo = reopen;
		};
		0BB57850B4234FC299FFCA80 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F2960284CC214E6FA74D2895;
			remoteInfo = events;
		};
		0EE2C0621BB742D8A2E06078 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 4C823DD32658444AAA87BD05;
			remoteInfo = GLFWwindow;
		};
		0F2B7B3B258A4FFC879BE782 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		113990F0D0F5412884683A95 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		123558B9D79046A883855206 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 540EEAD33B164800949C3369;
			remoteInfo = ALL_BUILD;
		};
		1645E459FF034B2AAA7DA8F7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		187E5D1EE95E4346BC5C0D9E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		197124891EC0459A8807A276 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		1A9817F1BEA14E55A93A2A4B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		20F645FEBE9441F9B602C287 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		2272C797C3C74F0097054FC2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		2946D92279DC4189B522AF6B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		2A044C9E3515434A9DACB377 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 92A04CC5F59949BBB2F84464;
			remoteInfo = tearing;
		};
		2B7C80D4047040DBB654472A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		33A3E9656B5D4C73AF630A40 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		348E80D493874BF7AB8C8378 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BAA1DF3478D542CDB04D621B;
			remoteInfo = sharing;
		};
		34CACE1BCFED42FDBD9A3811 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		365CA5128A0D406F89DA462D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CC9BE52F7C794F929F0648E8;
			remoteInfo = modes;
		};
		3ACBC769A977445E9854F824 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		3B074DF31CFD49AD90855DAE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F0E968FF5F6A400C93A8E72B;
			remoteInfo = Lighting;
		};
		3BAB9EC9321646BAA354A546 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		3E199E7EFD984004A14EC77F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 258920027618482CAA01DAD1;
			remoteInfo = defaults;
		};
		4100D7ED7D6E4C97A972E1E7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D72B40DD089A43C8A0F9F133;
			remoteInfo = Model;
		};
		421DB9DFB0B942B3A3CA123B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2B75701E8E4643D28427358B;
			remoteInfo = joysticks;
		};
		46356E1BA4D343038840BD0C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		49B87E0D4AC846D79D9918ED /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		4C51202347BF47F3A4FBD186 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		4E92FA1970944D20B1A0C5AB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 306523A0D00D40CEA9A7BBB5;
			remoteInfo = ModelView;
		};
		50A5F80357094054BF6393FA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CDCFD9CA4AAD418798FE8412;
			remoteInfo = fsaa;
		};
		52EC178F678A4C1DAFBD870F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		53BC09DD2E5747AAA4CF432D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		5CDC0B6C6D6545C8A9D82BB8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		5D259AE381EF436B87A4CDDE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		65C1A57B735C4046B6612A79 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0DCCE783ED554631B226CF9E;
			remoteInfo = iconify;
		};
		680EBADFDFA24165AA16C48D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		6B60FF7763684BF89ABFBE2E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		6F6DF7DF535349478918AFC5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		72F28882948C497F92CB30C3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		74517775476B46CBB44E5E4A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0AA5D91BC651441D83A26F54;
			remoteInfo = DynamicMesh;
		};
		761413768E5542FE9842A649 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CE714EE188274C6D90A13ABA;
			remoteInfo = ImmediateTriangles;
		};
		7C134EB6995D47669301E1CB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		7C16B61F54874D10AEA0BCF9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		7CF84FCF25DF4B53AB5074DA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		7DD3F121A49A46A8823EB16E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		7E64976BD69C4C919FB20667 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		84227DF9FF914795A5EC8C60 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 462688FEC7574BEC9D774299;
			remoteInfo = GLFWApp;
		};
		8B1733B9C8A342BA9DFDDF98 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		8DE8E04FFC5A40938783E08E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		8F135EB1C09D46A8BD357BB9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 53AC840926C944AEAE34BDC6;
			remoteInfo = TriangleOrtho;
		};
		8F494B1E1A5D4AABBC2641F1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		8F8CCECCA9AA465DADB1551F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		906D0681BA344FC6BAA191EC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		92EDFC6C9E0745EAAEC3A535 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F2D973EA403452A92D8CF96;
			remoteInfo = Texture;
		};
		95360ADB83B04A6D8D4DFFCA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		972E064BDCC74AEFAC94A312 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		997BC971603847A3A93D8262 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		9B63B15A28BF46A1B5586011 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 887D767DDEED465EA8EC3563;
			remoteInfo = TriangleColorBuffer;
		};
		9C5E29A305B44119A2E5C1B4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		9E095790B8BF4A3EB49BF243 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		A1907F49B8B6420BA8966BDD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		A2C9A14CE3274F78B03A0302 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		A534DFCDDAD342FB9D7FCB2F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		A61AD19BD97D445B99182327 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 00F8E7479BEF43C9A68AC4C4;
			remoteInfo = windows;
		};
		A923C36D7DEF470195579DB4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		AF77094316B0416991231FC2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		B2A158DAF43C4CB583E3B7D5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		B338600CFF2B4637BDE42E65 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		B570D2CD926B4FBCB93D08EB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		B6EBE7C3377D479CB7274C07 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		BBE993961FAB4CEA8342DCFB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		BC22F45BFFF74462B6F70F2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 575184B04B8E426FB53EE1C8;
			remoteInfo = Extensions;
		};
		BCA1F39A5D754FBC9E8FDB4F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 773401E4812F4EBD9BAA845D;
			remoteInfo = Immediate;
		};
		BD2796482AF84DBCACA6AFDF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		BF0E39E1C2074804BE9F8BCD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		C20BE560528D411696D2887E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		C28DC9FE6175479BB81C4DB6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 18AC027805BB4EACADA687D2;
			remoteInfo = gamma;
		};
		C409E47CB8854A66ADB051A3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		C5864AD23F0C4344A49DE9BC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A0373984878B47669B504246;
			remoteInfo = peter;
		};
		C67A0A993AA449BEB8DCFA26 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		C6D00D6D612E4ADE88352EA2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		C6D4014C6398489BB886D237 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		C7AE869ED7BD43F7A17A325B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20A6A4B9E84F4C26B6F56868;
			remoteInfo = Version;
		};
		C7B7124F7C174128B93BDD6D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		CCF229B9E63E4274AC260D16 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 300BB1EAB7DE4C7E8C74BDA2;
			remoteInfo = TriangleBuffer;
		};
		CD7DF2EF77D1404396B852C9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		CEAB8E7D174C467182178914 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		CF8256C9F26A4AD0A44E2A56 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		CF87D7216428412FBFCB8ABF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		D1C7937E67914C36AD1F8452 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		D653B828F44C48908FDFDE96 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		DBECF0C2C1A5444392985D70 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		DCAA09A426F14A0AB835310E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B416FA1947CD45819BE187C7;
			remoteInfo = TextureLoader;
		};
		DD8C8B1DDF6B4D47B62F9E7A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		DDD8D5C06DEF4A5E857245B4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		E35BE41492AA4113995C16B2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 9C8BEF81A08C4A4BBB324FE5;
			remoteInfo = LightingAndTexture;
		};
		E91283871D0E446980386C30 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2950D2C06FAD436695D73408;
			remoteInfo = glfwinfo;
		};
		E9FC29FA4D6A4B459EDA2444 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 9E5FBCDDCB1B4205B505D1D0;
			remoteInfo = threads;
		};
		ED688B38B28240D2B62E7A0E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		ED761DC05A8241C1A9A28777 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		EEE514C4E59B4509B5E5A0FC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 898BAF8FB54D4006A5F0534D;
			remoteInfo = title;
		};
		F3A520437C604EDE8386A5F4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 471EB8EF9B5A4177BCE746FC;
			remoteInfo = glfw;
		};
		F3EBCB8046C94687A75D52B6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 59D5425F920B480393573315;
			remoteInfo = Cube;
		};
		F71A9DD5BFFA4C7D93EE453F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D58D78FD40DB4D1FA92F7F54;
			remoteInfo = ZERO_CHECK;
		};
		FA8FDD8F7B29483DA7AB44A1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25CEB733B5954EFEAEF6A24B;
			remoteInfo = Mouse;
		};
		FBFB31080C114AD4BA4F2146 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 5F244C22DB7F4AC8BBE81452 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 96888DDCDB5F4E139220BF14;
			remoteInfo = clipboard;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		0524653A419F439FB6F68F16 /* cocoa_gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cocoa_gamma.c; path = glfw/src/cocoa_gamma.c; sourceTree = SOURCE_ROOT; };
		063C986A7FF64DD1AF45D024 /* threads.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = threads.c; path = glfw/tests/threads.c; sourceTree = SOURCE_ROOT; };
		081D13D45A0B41BCB3C88D4D /* cocoa_platform.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = cocoa_platform.h; path = glfw/src/cocoa_platform.h; sourceTree = SOURCE_ROOT; };
		0A62A7899AC647499F26CDF8 /* Keyboard.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Keyboard.cpp; path = examples/Keyboard.cpp; sourceTree = SOURCE_ROOT; };
		0B2F024493C441E4828F5FB0 /* joysticks */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = joysticks; sourceTree = BUILT_PRODUCTS_DIR; };
		0B42C8BA290649EAB462E9D1 /* time.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = time.c; path = glfw/src/time.c; sourceTree = SOURCE_ROOT; };
		0CEE3EC75DF7414EA8259733 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		108DED8E971A430785D9B10B /* peter */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = peter; sourceTree = BUILT_PRODUCTS_DIR; };
		117933C08CFD44C89ABA54A2 /* Immediate */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Immediate; sourceTree = BUILT_PRODUCTS_DIR; };
		1458926967DA4D48A261FA2A /* input.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = input.c; path = glfw/src/input.c; sourceTree = SOURCE_ROOT; };
		1555E7CCF3DA43DD88BB9FB8 /* peter.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = peter.c; path = glfw/tests/peter.c; sourceTree = SOURCE_ROOT; };
		16E960CC4C3D4620BCC2F0B6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		18E6368A85E44C0487870B55 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		199A0FB92E724F5F89BFF9CA /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		1AD39818182C447A9C94E546 /* ModelView.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ModelView.cpp; path = examples/ModelView.cpp; sourceTree = SOURCE_ROOT; };
		1BC418DD124C4AE280A01930 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1DC7071544ED4C718EF1D04D /* sharing.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = sharing.app; sourceTree = BUILT_PRODUCTS_DIR; };
		1DEC4AA12C6B443E9052F5D2 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		22CDAE243D0443F5BFCCA2FE /* Immediate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Immediate.cpp; path = examples/Immediate.cpp; sourceTree = SOURCE_ROOT; };
		26122C804DA04970ADE49873 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		26F557B35FD047C69DC0E09A /* defaults */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = defaults; sourceTree = BUILT_PRODUCTS_DIR; };
		28637885AD6040E58BF83DAD /* Version */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Version; sourceTree = BUILT_PRODUCTS_DIR; };
		2AA6E9616DF94CFF8805A3E8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2BEEA4B28D624BBAB2BAE98B /* Texture.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Texture.cpp; path = examples/Texture.cpp; sourceTree = SOURCE_ROOT; };
		2D150ADEA35D4EA196ECE2B6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2D59268AFBFE4220B71C1310 /* Extensions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Extensions.cpp; path = examples/Extensions.cpp; sourceTree = SOURCE_ROOT; };
		2EC72F0E711F41A38A80B512 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		302009A3F09C4B51AC8BA99C /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		3037BD2D53854CAA9E755FF5 /* Model */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Model; sourceTree = BUILT_PRODUCTS_DIR; };
		306DFBA4FBEC464DB1ADA03B /* windows.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = windows.c; path = glfw/tests/windows.c; sourceTree = SOURCE_ROOT; };
		3581D3254F1E4E679A7CC361 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		37FCABDA1AC2472BA1EF795C /* LightingAndTexture.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = LightingAndTexture.cpp; path = examples/LightingAndTexture.cpp; sourceTree = SOURCE_ROOT; };
		389E25DA419B4F208FA5173A /* TriangleBuffer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleBuffer; sourceTree = BUILT_PRODUCTS_DIR; };
		3ABF183DA6C24C9EABD8125B /* tearing.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = tearing.app; sourceTree = BUILT_PRODUCTS_DIR; };
		3E89BDC90D544949A57AA213 /* title.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = title.app; sourceTree = BUILT_PRODUCTS_DIR; };
		3EF8D5FC0BFF4B6C807BD496 /* clipboard */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = clipboard; sourceTree = BUILT_PRODUCTS_DIR; };
		4046C460D9884B60B81531FF /* gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gamma.c; path = glfw/tests/gamma.c; sourceTree = SOURCE_ROOT; };
		41285D33446340C09B417344 /* window.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = window.c; path = glfw/src/window.c; sourceTree = SOURCE_ROOT; };
		41E54217FD9C4751854F19BA /* iconify */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = iconify; sourceTree = BUILT_PRODUCTS_DIR; };
		42887356836E4B94B19DCD06 /* TriangleBuffer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleBuffer.cpp; path = examples/TriangleBuffer.cpp; sourceTree = SOURCE_ROOT; };
		428AD6685DFD491E94977603 /* sharing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = sharing.c; path = glfw/tests/sharing.c; sourceTree = SOURCE_ROOT; };
		43F005A349C946ECBB2F31F3 /* Texture */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Texture; sourceTree = BUILT_PRODUCTS_DIR; };
		445971C7539542F88C82047C /* GLFWwindow */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = GLFWwindow; sourceTree = BUILT_PRODUCTS_DIR; };
		4484F9F4A7F641CDBEA52906 /* cocoa_window.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_window.m; path = glfw/src/cocoa_window.m; sourceTree = SOURCE_ROOT; };
		458F37C1ACA24D29AB8C7B1E /* TriangleOrtho */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleOrtho; sourceTree = BUILT_PRODUCTS_DIR; };
		45F8502E667D4AC79C36E9E5 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		46922BA6B1C643E7A459BCDB /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		4826844B24094A3F9593DDC5 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		492912810F464B4B96E541DF /* glfw3native.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw3native.h; path = glfw/include/GLFW/glfw3native.h; sourceTree = SOURCE_ROOT; };
		49A06380CEDC4048B101C553 /* reopen */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = reopen; sourceTree = BUILT_PRODUCTS_DIR; };
		4B989E5A60AD44DB87641534 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		4DD7AA16E45A4E6992EDFB52 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		4DFE81A847A3485FA7F698E0 /* Lighting.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Lighting.cpp; path = examples/Lighting.cpp; sourceTree = SOURCE_ROOT; };
		4EEE53F4E5064430A113AF11 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		50BC41F22A98405380EDF672 /* accuracy.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = accuracy.app; sourceTree = BUILT_PRODUCTS_DIR; };
		519FD03CE7FC488389163B75 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		54145027A58E4DB8AF5F7183 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		544AD867F1F44E9485834F49 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		54914CABD5924A30BE8726E6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		551A016344BA4D8BB1E5D9C0 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		552AC845ACB34DEFBBB6F918 /* reopen.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = reopen.c; path = glfw/tests/reopen.c; sourceTree = SOURCE_ROOT; };
		55E75D4C0F0D461A91F57903 /* TextureLoader.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TextureLoader.cpp; path = examples/TextureLoader.cpp; sourceTree = SOURCE_ROOT; };
		571B753A108746B89A81D9D4 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		57A6154D744849369C31979A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		599132282DDC47F79B572AC4 /* Mouse */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Mouse; sourceTree = BUILT_PRODUCTS_DIR; };
		5D07DAA9AD0144A48167040D /* glfwinfo.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = glfwinfo.c; path = glfw/tests/glfwinfo.c; sourceTree = SOURCE_ROOT; };
		5DB9F57878BC404E846E08DA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5EEA16F3C4B14B099E52DD59 /* glfw_config.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw_config.h; path = xcode/glfw/src/glfw_config.h; sourceTree = SOURCE_ROOT; };
		5F9C309A75CD43B4AB865F05 /* ImmediateTriangles */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ImmediateTriangles; sourceTree = BUILT_PRODUCTS_DIR; };
		5FCFA6847B3C4C799CB3D8EE /* cocoa_init.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_init.m; path = glfw/src/cocoa_init.m; sourceTree = SOURCE_ROOT; };
		616E395A18D7477D88E960FE /* DynamicMesh */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = DynamicMesh; sourceTree = BUILT_PRODUCTS_DIR; };
		627FED21AFA64A4286D3D530 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		62925023FDE94F7BB7C0AF9E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		63204DAF15904333B2D6BEC7 /* clipboard.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = clipboard.c; path = glfw/src/clipboard.c; sourceTree = SOURCE_ROOT; };
		662CED94685E471E81163F3A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6A4AC04C588F4D078DD8FD51 /* GLFWApp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = GLFWApp; sourceTree = BUILT_PRODUCTS_DIR; };
		6D13B553FB94420AB0061373 /* events.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = events.c; path = glfw/tests/events.c; sourceTree = SOURCE_ROOT; };
		6D1CC3D897B5497E9A3FC8AD /* TriangleColorBuffer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TriangleColorBuffer; sourceTree = BUILT_PRODUCTS_DIR; };
		6E3D3A5FC8F54BDEAF4A2D68 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		742BABB479804559B46F9055 /* modes.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = modes.c; path = glfw/tests/modes.c; sourceTree = SOURCE_ROOT; };
		749C6D0B744D4C34AC62284D /* Model.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Model.cpp; path = examples/Model.cpp; sourceTree = SOURCE_ROOT; };
		767FBC3B97B64C0CAF89B1D7 /* cocoa_joystick.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_joystick.m; path = glfw/src/cocoa_joystick.m; sourceTree = SOURCE_ROOT; };
		779C216490A444AEB678296C /* gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gamma.c; path = glfw/src/gamma.c; sourceTree = SOURCE_ROOT; };
		7805BBE1E7F14E5EBA27883E /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		791251E4A34F47B498585951 /* tinycthread.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = tinycthread.h; path = glfw/deps/tinycthread.h; sourceTree = SOURCE_ROOT; };
		7946C4A0F79A4A53AA90BFDE /* glfwinfo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = glfwinfo; sourceTree = BUILT_PRODUCTS_DIR; };
		79708B54ACB44574BD568CB1 /* Cube */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Cube; sourceTree = BUILT_PRODUCTS_DIR; };
		7CB833817C2F4E2AA9A9C062 /* libglfw3.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libglfw3.a; sourceTree = BUILT_PRODUCTS_DIR; };
		7CC57A4F67D7474E957B33F1 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		7D6A9E4C367749FE96732A24 /* Mouse.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Mouse.cpp; path = examples/Mouse.cpp; sourceTree = SOURCE_ROOT; };
		7FA44008E9074306B3E4972B /* Lighting */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Lighting; sourceTree = BUILT_PRODUCTS_DIR; };
		8461EB668A434396BAD89124 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		88273C51297F45A9A3EB99F9 /* init.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = init.c; path = glfw/src/init.c; sourceTree = SOURCE_ROOT; };
		8A25E1C327784CA1AC4AB945 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		8D4F04733FC24815BA56E03A /* TriangleColorBuffer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleColorBuffer.cpp; path = examples/TriangleColorBuffer.cpp; sourceTree = SOURCE_ROOT; };
		9094C551C5D44761AFA8BA3A /* monitor.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = monitor.c; path = glfw/src/monitor.c; sourceTree = SOURCE_ROOT; };
		91AD12C8EA114FD495DAC29A /* windows.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = windows.app; sourceTree = BUILT_PRODUCTS_DIR; };
		957B51A672E04229B827777E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		983306951C87F8770028B36A /* GL_Version.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = GL_Version.cpp; path = examples/GL_Version.cpp; sourceTree = SOURCE_ROOT; };
		983306971C8932C60028B36A /* GLFW_Window.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = GLFW_Window.cpp; path = examples/GLFW_Window.cpp; sourceTree = SOURCE_ROOT; };
		98A9BD8CA1E54CD386C9EBDD /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		9DC5CE779C6F43C680994621 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/title.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		9E80A7DAEA834B1DA23C14AA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9EA3584136A04B38AE16B82D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A1FF441295D0469BB45D385B /* cocoa_time.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cocoa_time.c; path = glfw/src/cocoa_time.c; sourceTree = SOURCE_ROOT; };
		A26FD09C3AD3497F8FAD98E9 /* gamma */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gamma; sourceTree = BUILT_PRODUCTS_DIR; };
		A272D075D51F4E5AAB08FB21 /* LightingAndTexture */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = LightingAndTexture; sourceTree = BUILT_PRODUCTS_DIR; };
		A3DCB6D30F514448B72A098E /* joysticks.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = joysticks.c; path = glfw/tests/joysticks.c; sourceTree = SOURCE_ROOT; };
		A4E8C0B00FCF4760B308BCDE /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A6659F514F6D4EEC91FCDC04 /* ModelView */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ModelView; sourceTree = BUILT_PRODUCTS_DIR; };
		A6B04B40C6AF44FFA57A6B85 /* Keyboard */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Keyboard; sourceTree = BUILT_PRODUCTS_DIR; };
		A936772DA9DD4B46BCC30DCA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AEA749AF3875429D84335EEF /* defaults.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = defaults.c; path = glfw/tests/defaults.c; sourceTree = SOURCE_ROOT; };
		B0559FFFB4284500967741F8 /* modes */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = modes; sourceTree = BUILT_PRODUCTS_DIR; };
		B0672604A2084A7CA7BD9E82 /* joystick.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = joystick.c; path = glfw/src/joystick.c; sourceTree = SOURCE_ROOT; };
		B1579AFE9CF043638B049DAE /* TriangleOrtho.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = TriangleOrtho.cpp; path = examples/TriangleOrtho.cpp; sourceTree = SOURCE_ROOT; };
		B307EF8912804D5A87D8AE55 /* glfw3.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw3.h; path = glfw/include/GLFW/glfw3.h; sourceTree = SOURCE_ROOT; };
		B35FFAC72DE647AB8D8B8FA5 /* TextureLoader */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = TextureLoader; sourceTree = BUILT_PRODUCTS_DIR; };
		B585E15390AF4ED89D70A41F /* internal.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = internal.h; path = glfw/src/internal.h; sourceTree = SOURCE_ROOT; };
		B5ECC075A0E64609B35C7265 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		B65BCFB0D95C46A28EC1FCE4 /* clipboard.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = clipboard.c; path = glfw/tests/clipboard.c; sourceTree = SOURCE_ROOT; };
		B6DBD071E0B1431F92C6640E /* title.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = title.c; path = glfw/tests/title.c; sourceTree = SOURCE_ROOT; };
		B8542C9548A74B6D8FE5ABE8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B995142C3F344B5781DC1BB9 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		BD34D0F032EF4F96844FE9A4 /* iconify.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = iconify.c; path = glfw/tests/iconify.c; sourceTree = SOURCE_ROOT; };
		C4D49A55AA094A77B068BC42 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		C5690E9699454F1FBE4C8C8C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C746D43E67644AF592F5B97E /* tearing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tearing.c; path = glfw/tests/tearing.c; sourceTree = SOURCE_ROOT; };
		C760AB21AFB24D188BB0E3B4 /* nsgl_context.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = nsgl_context.m; path = glfw/src/nsgl_context.m; sourceTree = SOURCE_ROOT; };
		C982FB5D68E34D18B7948754 /* events */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = events; sourceTree = BUILT_PRODUCTS_DIR; };
		CBC6EDA9DCD44BF88B86FDEF /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		CEB5FE824B4A4CDAAF78236D /* ImmediateTriangles.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ImmediateTriangles.cpp; path = examples/ImmediateTriangles.cpp; sourceTree = SOURCE_ROOT; };
		D0809B2012A34DA1A02F9CB5 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		D0E8D8DF11FE44C9B687CA70 /* nsgl_platform.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = nsgl_platform.h; path = glfw/src/nsgl_platform.h; sourceTree = SOURCE_ROOT; };
		D31C2C92E62848489D3528AC /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		D56CC7CD967E477592EE53EF /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		D6A6E7FFA34F4BE48C83DCAA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DAD4CA8662434BB789C74905 /* threads.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = threads.app; sourceTree = BUILT_PRODUCTS_DIR; };
		DB99CF54378A4484A263F430 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DCBB336B25094E6AA914A8F6 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		DD19910BCB0747569E9EFCA1 /* Cube.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Cube.cpp; path = examples/Cube.cpp; sourceTree = SOURCE_ROOT; };
		E1122FEFE9E1476BB1606AED /* tinycthread.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tinycthread.c; path = glfw/deps/tinycthread.c; sourceTree = SOURCE_ROOT; };
		E453C1EA48FA4577BB840959 /* Extensions */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Extensions; sourceTree = BUILT_PRODUCTS_DIR; };
		EA239CF4D9294B2AB25E4EDD /* context.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = context.c; path = glfw/src/context.c; sourceTree = SOURCE_ROOT; };
		EB71478ED915469D9084BE86 /* cocoa_monitor.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_monitor.m; path = glfw/src/cocoa_monitor.m; sourceTree = SOURCE_ROOT; };
		EBBBDD4D4512429C963CBD53 /* fsaa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = fsaa.c; path = glfw/tests/fsaa.c; sourceTree = SOURCE_ROOT; };
		EDDDD77ACE3C44AB992170EC /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EF8F1370EC2A4D9486282155 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F3026892BB8F480283E4109D /* accuracy.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = accuracy.c; path = glfw/tests/accuracy.c; sourceTree = SOURCE_ROOT; };
		F3B826E7312640C18B27CC5F /* DynamicMesh.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = DynamicMesh.cpp; path = examples/DynamicMesh.cpp; sourceTree = SOURCE_ROOT; };
		F4BBED4639F54A9CA68B666D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F5D80311CF464EABB914BF7F /* cocoa_clipboard.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_clipboard.m; path = glfw/src/cocoa_clipboard.m; sourceTree = SOURCE_ROOT; };
		F7CEAEAA04E9450B868D6416 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		F90AFA70C6604E64BA0B7D38 /* fsaa */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = fsaa; sourceTree = BUILT_PRODUCTS_DIR; };
		F97E88941551434BBDEA4104 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F9B870B483664222AA642D8A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		FD0EED1C3F544B0D88B9A031 /* GLFWApp.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = GLFWApp.cpp; path = examples/GLFWApp.cpp; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		012879DC50D94B1085D55FB0 /* DynamicMesh */ = {
			isa = PBXGroup;
			children = (
				41DA5D0A40E4483B8FCEA5AC /* Source Files */,
				16E960CC4C3D4620BCC2F0B6 /* CMakeLists.txt */,
			);
			name = DynamicMesh;
			sourceTree = "<group>";
		};
		0479B75F50754760AF0638C0 /* glfw */ = {
			isa = PBXGroup;
			children = (
				959F49F2C4FD4B3FBEA58BB1 /* Source Files */,
				74A227B469D64A95ACE57FB9 /* Header Files */,
				CBC6EDA9DCD44BF88B86FDEF /* CMakeLists.txt */,
			);
			name = glfw;
			sourceTree = "<group>";
		};
		04F8CD73ED854A47AD2FD68E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				DCBB336B25094E6AA914A8F6 /* getopt.c */,
				BD34D0F032EF4F96844FE9A4 /* iconify.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		06FD3F21F4D3491DA7D057FC /* clipboard */ = {
			isa = PBXGroup;
			children = (
				6294A24266444122B784D3DE /* Source Files */,
				C761A13AC9E444A8A19C5772 /* Header Files */,
				C5690E9699454F1FBE4C8C8C /* CMakeLists.txt */,
			);
			name = clipboard;
			sourceTree = "<group>";
		};
		0CDC371BCE8F4B1699EBCE84 /* glfwinfo */ = {
			isa = PBXGroup;
			children = (
				D58CEA14807140E4B72FB96C /* Source Files */,
				B2277419AE364F6DAFFD0570 /* Header Files */,
				5DB9F57878BC404E846E08DA /* CMakeLists.txt */,
			);
			name = glfwinfo;
			sourceTree = "<group>";
		};
		0FC2190BAECC4A748926E997 /* uninstall */ = {
			isa = PBXGroup;
			children = (
				A0CDF11A444F442FAA5162D1 /* CMake Rules */,
				9E80A7DAEA834B1DA23C14AA /* CMakeLists.txt */,
			);
			name = uninstall;
			sourceTree = "<group>";
		};
		11E378BE5A79447A84E0ABC5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				749C6D0B744D4C34AC62284D /* Model.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		11E9F3144BFB43F2A80F212B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D31C2C92E62848489D3528AC /* getopt.c */,
				742BABB479804559B46F9055 /* modes.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		17FD1C336D414730BE632C59 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				552AC845ACB34DEFBBB6F918 /* reopen.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1947257BB6E242BEA95F225C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				18E6368A85E44C0487870B55 /* getopt.c */,
				EBBBDD4D4512429C963CBD53 /* fsaa.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1A8BE7BC3DD649358AA2B23B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				42887356836E4B94B19DCD06 /* TriangleBuffer.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1D97BABAC73842E7AD34BD8C /* Resources */ = {
			isa = PBXGroup;
			children = (
				9DC5CE779C6F43C680994621 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		227D4BD4C18F4EA899AFB975 /* title */ = {
			isa = PBXGroup;
			children = (
				B65BA1080D9D4DB9ABE1C193 /* Source Files */,
				1D97BABAC73842E7AD34BD8C /* Resources */,
				F4BBED4639F54A9CA68B666D /* CMakeLists.txt */,
			);
			name = title;
			sourceTree = "<group>";
		};
		26542346F19B4536B7E3AF4E /* Header Files */ = {
			isa = PBXGroup;
			children = (
				C4D49A55AA094A77B068BC42 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		276F9DF2C36F466FB3EA9B8B /* Immediate */ = {
			isa = PBXGroup;
			children = (
				A1E90471B29147DC94D8C0FE /* Source Files */,
				F9B870B483664222AA642D8A /* CMakeLists.txt */,
			);
			name = Immediate;
			sourceTree = "<group>";
		};
		28FE15B77CCE4E379FADB2A4 /* defaults */ = {
			isa = PBXGroup;
			children = (
				E97A8E166007426EBBD442D7 /* Source Files */,
				7CC57A4F67D7474E957B33F1 /* CMakeLists.txt */,
			);
			name = defaults;
			sourceTree = "<group>";
		};
		2D8D49838A4C48DE9913A8D4 /* ImmediateTriangles */ = {
			isa = PBXGroup;
			children = (
				3E070BE958DF40238A1B4DBB /* Source Files */,
				2AA6E9616DF94CFF8805A3E8 /* CMakeLists.txt */,
			);
			name = ImmediateTriangles;
			sourceTree = "<group>";
		};
		2D9D733FD295498397FF8BFE /* sharing */ = {
			isa = PBXGroup;
			children = (
				7F04838A666F4F2289AA123A /* Source Files */,
				F014721E9C53472C95901016 /* Resources */,
				DB99CF54378A4484A263F430 /* CMakeLists.txt */,
			);
			name = sharing;
			sourceTree = "<group>";
		};
		2EF6562D63984246B2C4D6C8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E1122FEFE9E1476BB1606AED /* tinycthread.c */,
				063C986A7FF64DD1AF45D024 /* threads.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2EFB34B090EB406BA94F0814 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				37FCABDA1AC2472BA1EF795C /* LightingAndTexture.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2F4979E68AC445F58DB70746 /* accuracy */ = {
			isa = PBXGroup;
			children = (
				AA0CB0078A774BF49682BFB8 /* Source Files */,
				672347EA1F6342C0B7E0C0A9 /* Resources */,
				551A016344BA4D8BB1E5D9C0 /* CMakeLists.txt */,
			);
			name = accuracy;
			sourceTree = "<group>";
		};
		2FD9FEBB314445C9957D7ACF /* Model */ = {
			isa = PBXGroup;
			children = (
				11E378BE5A79447A84E0ABC5 /* Source Files */,
				EF8F1370EC2A4D9486282155 /* CMakeLists.txt */,
			);
			name = Model;
			sourceTree = "<group>";
		};
		356C6D2C89A6457E98A6CF20 /* GLFWwindow */ = {
			isa = PBXGroup;
			children = (
				C0DA6A4313CF4BC3BB315111 /* Source Files */,
				544AD867F1F44E9485834F49 /* CMakeLists.txt */,
			);
			name = GLFWwindow;
			sourceTree = "<group>";
		};
		3722A1BD52824EEEB64E7034 /* TriangleBuffer */ = {
			isa = PBXGroup;
			children = (
				1A8BE7BC3DD649358AA2B23B /* Source Files */,
				EDDDD77ACE3C44AB992170EC /* CMakeLists.txt */,
			);
			name = TriangleBuffer;
			sourceTree = "<group>";
		};
		38418BA8CD4E4646A8AB978B /* fsaa */ = {
			isa = PBXGroup;
			children = (
				1947257BB6E242BEA95F225C /* Source Files */,
				AD24BECF158248FD83DC9873 /* Header Files */,
				B8542C9548A74B6D8FE5ABE8 /* CMakeLists.txt */,
			);
			name = fsaa;
			sourceTree = "<group>";
		};
		3C94C74E301743C8A05297F6 /* Texture */ = {
			isa = PBXGroup;
			children = (
				F458F0508C0346BEB48D344F /* Source Files */,
				D56CC7CD967E477592EE53EF /* CMakeLists.txt */,
			);
			name = Texture;
			sourceTree = "<group>";
		};
		3E070BE958DF40238A1B4DBB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				CEB5FE824B4A4CDAAF78236D /* ImmediateTriangles.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		418A7D05F3644E1AA2A37C44 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				791251E4A34F47B498585951 /* tinycthread.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		41DA5D0A40E4483B8FCEA5AC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F3B826E7312640C18B27CC5F /* DynamicMesh.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4318A64C51AE4FCB99D6599E /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				B6A4C314AC63440EA3E39DCA /* CMake Rules */,
				0CEE3EC75DF7414EA8259733 /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		452C7C9F0FED445493A19BF1 /* ZERO_CHECK */ = {
			isa = PBXGroup;
			children = (
				4AED10E174744D94A7496072 /* CMake Rules */,
				2EC72F0E711F41A38A80B512 /* CMakeLists.txt */,
			);
			name = ZERO_CHECK;
			sourceTree = "<group>";
		};
		4AED10E174744D94A7496072 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		4B171B39D70D475E9874BC41 /* threads */ = {
			isa = PBXGroup;
			children = (
				2EF6562D63984246B2C4D6C8 /* Source Files */,
				418A7D05F3644E1AA2A37C44 /* Header Files */,
				8D85E1EC986D47B998B46C1A /* Resources */,
				45F8502E667D4AC79C36E9E5 /* CMakeLists.txt */,
			);
			name = threads;
			sourceTree = "<group>";
		};
		50379361FA5B4856A6A61BBD /* Header Files */ = {
			isa = PBXGroup;
			children = (
				98A9BD8CA1E54CD386C9EBDD /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		54C9B865697B4575BF51637F /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		5DA6CFE7AFEA4AFCADB1B3FC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				8D4F04733FC24815BA56E03A /* TriangleColorBuffer.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5F120DABC39B468D9C47415C /* gamma */ = {
			isa = PBXGroup;
			children = (
				7B79B01A83F94892BA740A84 /* Source Files */,
				EB5DACECC52F4351B084D094 /* Header Files */,
				662CED94685E471E81163F3A /* CMakeLists.txt */,
			);
			name = gamma;
			sourceTree = "<group>";
		};
		5FCB69E6444746C5BE8B4D95 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1AD39818182C447A9C94E546 /* ModelView.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6173432B29F3445B9F998D5F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4DFE81A847A3485FA7F698E0 /* Lighting.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6294A24266444122B784D3DE /* Source Files */ = {
			isa = PBXGroup;
			children = (
				6E3D3A5FC8F54BDEAF4A2D68 /* getopt.c */,
				B65BCFB0D95C46A28EC1FCE4 /* clipboard.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		666338794C5444ED885FC92D /* GLFWApp */ = {
			isa = PBXGroup;
			children = (
				A43C097D2A4148B18E083C68 /* Source Files */,
				57A6154D744849369C31979A /* CMakeLists.txt */,
			);
			name = GLFWApp;
			sourceTree = "<group>";
		};
		672347EA1F6342C0B7E0C0A9 /* Resources */ = {
			isa = PBXGroup;
			children = (
				571B753A108746B89A81D9D4 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		6DF2F37D22CA49448404396C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C746D43E67644AF592F5B97E /* tearing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6FBB53AB868F49B5B5BEF29C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B1579AFE9CF043638B049DAE /* TriangleOrtho.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		708C6621B8C1464D8BDEF86F /* reopen */ = {
			isa = PBXGroup;
			children = (
				17FD1C336D414730BE632C59 /* Source Files */,
				4B989E5A60AD44DB87641534 /* CMakeLists.txt */,
			);
			name = reopen;
			sourceTree = "<group>";
		};
		71B37AAA9A124043BFD8B8FB /* windows */ = {
			isa = PBXGroup;
			children = (
				85F91D49A20144AA89298B70 /* Source Files */,
				A62B2B1A084045C79489918A /* Resources */,
				8461EB668A434396BAD89124 /* CMakeLists.txt */,
			);
			name = windows;
			sourceTree = "<group>";
		};
		732366CD08B947FFAD42B727 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A3DCB6D30F514448B72A098E /* joysticks.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		74A227B469D64A95ACE57FB9 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				B307EF8912804D5A87D8AE55 /* glfw3.h */,
				492912810F464B4B96E541DF /* glfw3native.h */,
				081D13D45A0B41BCB3C88D4D /* cocoa_platform.h */,
				B585E15390AF4ED89D70A41F /* internal.h */,
				D0E8D8DF11FE44C9B687CA70 /* nsgl_platform.h */,
				5EEA16F3C4B14B099E52DD59 /* glfw_config.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		7A84A53B5E9A441F94EF8D70 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1555E7CCF3DA43DD88BB9FB8 /* peter.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7B79B01A83F94892BA740A84 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D0809B2012A34DA1A02F9CB5 /* getopt.c */,
				4046C460D9884B60B81531FF /* gamma.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7F04838A666F4F2289AA123A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				428AD6685DFD491E94977603 /* sharing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		80CA04A811A4421CB76B87B4 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				B5ECC075A0E64609B35C7265 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		83F2727986704E56BB1B28E3 /* Extensions */ = {
			isa = PBXGroup;
			children = (
				986BBB1743864C12ABA99EF3 /* Source Files */,
				A936772DA9DD4B46BCC30DCA /* CMakeLists.txt */,
			);
			name = Extensions;
			sourceTree = "<group>";
		};
		8502CBE269074B12B4FCA438 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				55E75D4C0F0D461A91F57903 /* TextureLoader.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		85F91D49A20144AA89298B70 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				306DFBA4FBEC464DB1ADA03B /* windows.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8D85E1EC986D47B998B46C1A /* Resources */ = {
			isa = PBXGroup;
			children = (
				B995142C3F344B5781DC1BB9 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		9450DCFDA37E47CD9B691CCB /* TriangleColorBuffer */ = {
			isa = PBXGroup;
			children = (
				5DA6CFE7AFEA4AFCADB1B3FC /* Source Files */,
				4DD7AA16E45A4E6992EDFB52 /* CMakeLists.txt */,
			);
			name = TriangleColorBuffer;
			sourceTree = "<group>";
		};
		94B46870CC3944E4B26AE2F4 /* Cube */ = {
			isa = PBXGroup;
			children = (
				E7A95B475A414C18AE6C2B3A /* Source Files */,
				1BC418DD124C4AE280A01930 /* CMakeLists.txt */,
			);
			name = Cube;
			sourceTree = "<group>";
		};
		959F49F2C4FD4B3FBEA58BB1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				63204DAF15904333B2D6BEC7 /* clipboard.c */,
				F5D80311CF464EABB914BF7F /* cocoa_clipboard.m */,
				0524653A419F439FB6F68F16 /* cocoa_gamma.c */,
				5FCFA6847B3C4C799CB3D8EE /* cocoa_init.m */,
				767FBC3B97B64C0CAF89B1D7 /* cocoa_joystick.m */,
				EB71478ED915469D9084BE86 /* cocoa_monitor.m */,
				A1FF441295D0469BB45D385B /* cocoa_time.c */,
				4484F9F4A7F641CDBEA52906 /* cocoa_window.m */,
				EA239CF4D9294B2AB25E4EDD /* context.c */,
				779C216490A444AEB678296C /* gamma.c */,
				88273C51297F45A9A3EB99F9 /* init.c */,
				1458926967DA4D48A261FA2A /* input.c */,
				B0672604A2084A7CA7BD9E82 /* joystick.c */,
				9094C551C5D44761AFA8BA3A /* monitor.c */,
				C760AB21AFB24D188BB0E3B4 /* nsgl_context.m */,
				0B42C8BA290649EAB462E9D1 /* time.c */,
				41285D33446340C09B417344 /* window.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		96DE8DE0EDBA489685210650 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F7CEAEAA04E9450B868D6416 /* getopt.c */,
				6D13B553FB94420AB0061373 /* events.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		986BBB1743864C12ABA99EF3 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2D59268AFBFE4220B71C1310 /* Extensions.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A0CDF11A444F442FAA5162D1 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		A1E90471B29147DC94D8C0FE /* Source Files */ = {
			isa = PBXGroup;
			children = (
				22CDAE243D0443F5BFCCA2FE /* Immediate.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A2DABA4E68AC48A99CFA541B /* Version */ = {
			isa = PBXGroup;
			children = (
				EAEC9CEAC89D4FAD8EE30088 /* Source Files */,
			);
			name = Version;
			sourceTree = "<group>";
		};
		A43C097D2A4148B18E083C68 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FD0EED1C3F544B0D88B9A031 /* GLFWApp.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A4900E2A47DE4B488C6FA267 /* events */ = {
			isa = PBXGroup;
			children = (
				96DE8DE0EDBA489685210650 /* Source Files */,
				26542346F19B4536B7E3AF4E /* Header Files */,
				62925023FDE94F7BB7C0AF9E /* CMakeLists.txt */,
			);
			name = events;
			sourceTree = "<group>";
		};
		A62B2B1A084045C79489918A /* Resources */ = {
			isa = PBXGroup;
			children = (
				7805BBE1E7F14E5EBA27883E /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		A87D5D62CDD8440C9A958590 /* Lighting */ = {
			isa = PBXGroup;
			children = (
				6173432B29F3445B9F998D5F /* Source Files */,
				4826844B24094A3F9593DDC5 /* CMakeLists.txt */,
			);
			name = Lighting;
			sourceTree = "<group>";
		};
		AA0CB0078A774BF49682BFB8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F3026892BB8F480283E4109D /* accuracy.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		AB7C51137A8B457F98C11724 /* iconify */ = {
			isa = PBXGroup;
			children = (
				04F8CD73ED854A47AD2FD68E /* Source Files */,
				50379361FA5B4856A6A61BBD /* Header Files */,
				D6A6E7FFA34F4BE48C83DCAA /* CMakeLists.txt */,
			);
			name = iconify;
			sourceTree = "<group>";
		};
		AD24BECF158248FD83DC9873 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				8A25E1C327784CA1AC4AB945 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		B2277419AE364F6DAFFD0570 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				54145027A58E4DB8AF5F7183 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		B50514708B114B378C69B63F /* tearing */ = {
			isa = PBXGroup;
			children = (
				6DF2F37D22CA49448404396C /* Source Files */,
				D68B2B78A8284FF1A79615C6 /* Resources */,
				519FD03CE7FC488389163B75 /* CMakeLists.txt */,
			);
			name = tearing;
			sourceTree = "<group>";
		};
		B65BA1080D9D4DB9ABE1C193 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B6DBD071E0B1431F92C6640E /* title.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B6A4C314AC63440EA3E39DCA /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		BEDDF094C7AC479DA94A7E98 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0A62A7899AC647499F26CDF8 /* Keyboard.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C0DA6A4313CF4BC3BB315111 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				983306971C8932C60028B36A /* GLFW_Window.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C72F083419F64FD1A7B977D9 /* Sources */ = {
			isa = PBXGroup;
			children = (
				E02B7B187D244C0C9940D4D8 /* TextureLoader */,
				3C94C74E301743C8A05297F6 /* Texture */,
				DE7FB42ED19C4B2F95478903 /* Mouse */,
				DEC3A0FF112040C489CBCE28 /* ModelView */,
				3722A1BD52824EEEB64E7034 /* TriangleBuffer */,
				2FD9FEBB314445C9957D7ACF /* Model */,
				E0B2204272E54B4182DF01F0 /* TriangleOrtho */,
				666338794C5444ED885FC92D /* GLFWApp */,
				276F9DF2C36F466FB3EA9B8B /* Immediate */,
				F0ECD13AD17F4CF7AAD7EE42 /* LightingAndTexture */,
				9450DCFDA37E47CD9B691CCB /* TriangleColorBuffer */,
				94B46870CC3944E4B26AE2F4 /* Cube */,
				A87D5D62CDD8440C9A958590 /* Lighting */,
				A2DABA4E68AC48A99CFA541B /* Version */,
				D92EAD14AAD94978B60A8485 /* Keyboard */,
				2D8D49838A4C48DE9913A8D4 /* ImmediateTriangles */,
				83F2727986704E56BB1B28E3 /* Extensions */,
				356C6D2C89A6457E98A6CF20 /* GLFWwindow */,
				012879DC50D94B1085D55FB0 /* DynamicMesh */,
				4318A64C51AE4FCB99D6599E /* ALL_BUILD */,
				452C7C9F0FED445493A19BF1 /* ZERO_CHECK */,
				0FC2190BAECC4A748926E997 /* uninstall */,
				0479B75F50754760AF0638C0 /* glfw */,
				71B37AAA9A124043BFD8B8FB /* windows */,
				227D4BD4C18F4EA899AFB975 /* title */,
				4B171B39D70D475E9874BC41 /* threads */,
				B50514708B114B378C69B63F /* tearing */,
				2D9D733FD295498397FF8BFE /* sharing */,
				EEE3FE00757F4C9A9B1265E2 /* peter */,
				0CDC371BCE8F4B1699EBCE84 /* glfwinfo */,
				708C6621B8C1464D8BDEF86F /* reopen */,
				06FD3F21F4D3491DA7D057FC /* clipboard */,
				FB9205B1345441A99A768D35 /* modes */,
				E3BF6996A85F4BAA9EAFC0D3 /* joysticks */,
				A4900E2A47DE4B488C6FA267 /* events */,
				AB7C51137A8B457F98C11724 /* iconify */,
				2F4979E68AC445F58DB70746 /* accuracy */,
				5F120DABC39B468D9C47415C /* gamma */,
				38418BA8CD4E4646A8AB978B /* fsaa */,
				28FE15B77CCE4E379FADB2A4 /* defaults */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		C761A13AC9E444A8A19C5772 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				3581D3254F1E4E679A7CC361 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		CEE18CBEE5194C1BB9C93BA1 /* Products */ = {
			isa = PBXGroup;
			children = (
				79708B54ACB44574BD568CB1 /* Cube */,
				616E395A18D7477D88E960FE /* DynamicMesh */,
				E453C1EA48FA4577BB840959 /* Extensions */,
				6A4AC04C588F4D078DD8FD51 /* GLFWApp */,
				445971C7539542F88C82047C /* GLFWwindow */,
				117933C08CFD44C89ABA54A2 /* Immediate */,
				5F9C309A75CD43B4AB865F05 /* ImmediateTriangles */,
				A6B04B40C6AF44FFA57A6B85 /* Keyboard */,
				7FA44008E9074306B3E4972B /* Lighting */,
				A272D075D51F4E5AAB08FB21 /* LightingAndTexture */,
				3037BD2D53854CAA9E755FF5 /* Model */,
				A6659F514F6D4EEC91FCDC04 /* ModelView */,
				599132282DDC47F79B572AC4 /* Mouse */,
				43F005A349C946ECBB2F31F3 /* Texture */,
				B35FFAC72DE647AB8D8B8FA5 /* TextureLoader */,
				389E25DA419B4F208FA5173A /* TriangleBuffer */,
				6D1CC3D897B5497E9A3FC8AD /* TriangleColorBuffer */,
				458F37C1ACA24D29AB8C7B1E /* TriangleOrtho */,
				28637885AD6040E58BF83DAD /* Version */,
				7CB833817C2F4E2AA9A9C062 /* libglfw3.a */,
				50BC41F22A98405380EDF672 /* accuracy.app */,
				3EF8D5FC0BFF4B6C807BD496 /* clipboard */,
				26F557B35FD047C69DC0E09A /* defaults */,
				C982FB5D68E34D18B7948754 /* events */,
				F90AFA70C6604E64BA0B7D38 /* fsaa */,
				A26FD09C3AD3497F8FAD98E9 /* gamma */,
				7946C4A0F79A4A53AA90BFDE /* glfwinfo */,
				41E54217FD9C4751854F19BA /* iconify */,
				0B2F024493C441E4828F5FB0 /* joysticks */,
				B0559FFFB4284500967741F8 /* modes */,
				108DED8E971A430785D9B10B /* peter */,
				49A06380CEDC4048B101C553 /* reopen */,
				1DC7071544ED4C718EF1D04D /* sharing.app */,
				3ABF183DA6C24C9EABD8125B /* tearing.app */,
				DAD4CA8662434BB789C74905 /* threads.app */,
				3E89BDC90D544949A57AA213 /* title.app */,
				91AD12C8EA114FD495DAC29A /* windows.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		D58CEA14807140E4B72FB96C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				627FED21AFA64A4286D3D530 /* getopt.c */,
				5D07DAA9AD0144A48167040D /* glfwinfo.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D68B2B78A8284FF1A79615C6 /* Resources */ = {
			isa = PBXGroup;
			children = (
				302009A3F09C4B51AC8BA99C /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		D92EAD14AAD94978B60A8485 /* Keyboard */ = {
			isa = PBXGroup;
			children = (
				BEDDF094C7AC479DA94A7E98 /* Source Files */,
				26122C804DA04970ADE49873 /* CMakeLists.txt */,
			);
			name = Keyboard;
			sourceTree = "<group>";
		};
		DE7FB42ED19C4B2F95478903 /* Mouse */ = {
			isa = PBXGroup;
			children = (
				E167DEFC24F5479198B62896 /* Source Files */,
				F97E88941551434BBDEA4104 /* CMakeLists.txt */,
			);
			name = Mouse;
			sourceTree = "<group>";
		};
		DEC3A0FF112040C489CBCE28 /* ModelView */ = {
			isa = PBXGroup;
			children = (
				5FCB69E6444746C5BE8B4D95 /* Source Files */,
				1DEC4AA12C6B443E9052F5D2 /* CMakeLists.txt */,
			);
			name = ModelView;
			sourceTree = "<group>";
		};
		E02B7B187D244C0C9940D4D8 /* TextureLoader */ = {
			isa = PBXGroup;
			children = (
				8502CBE269074B12B4FCA438 /* Source Files */,
				4EEE53F4E5064430A113AF11 /* CMakeLists.txt */,
			);
			name = TextureLoader;
			sourceTree = "<group>";
		};
		E0B2204272E54B4182DF01F0 /* TriangleOrtho */ = {
			isa = PBXGroup;
			children = (
				6FBB53AB868F49B5B5BEF29C /* Source Files */,
				9EA3584136A04B38AE16B82D /* CMakeLists.txt */,
			);
			name = TriangleOrtho;
			sourceTree = "<group>";
		};
		E167DEFC24F5479198B62896 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7D6A9E4C367749FE96732A24 /* Mouse.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E3BF6996A85F4BAA9EAFC0D3 /* joysticks */ = {
			isa = PBXGroup;
			children = (
				732366CD08B947FFAD42B727 /* Source Files */,
				957B51A672E04229B827777E /* CMakeLists.txt */,
			);
			name = joysticks;
			sourceTree = "<group>";
		};
		E7A95B475A414C18AE6C2B3A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				DD19910BCB0747569E9EFCA1 /* Cube.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E97A8E166007426EBBD442D7 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				AEA749AF3875429D84335EEF /* defaults.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EAEC9CEAC89D4FAD8EE30088 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				983306951C87F8770028B36A /* GL_Version.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EB5DACECC52F4351B084D094 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				199A0FB92E724F5F89BFF9CA /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		EEE3FE00757F4C9A9B1265E2 /* peter */ = {
			isa = PBXGroup;
			children = (
				7A84A53B5E9A441F94EF8D70 /* Source Files */,
				2D150ADEA35D4EA196ECE2B6 /* CMakeLists.txt */,
			);
			name = peter;
			sourceTree = "<group>";
		};
		F014721E9C53472C95901016 /* Resources */ = {
			isa = PBXGroup;
			children = (
				46922BA6B1C643E7A459BCDB /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		F0ECD13AD17F4CF7AAD7EE42 /* LightingAndTexture */ = {
			isa = PBXGroup;
			children = (
				2EFB34B090EB406BA94F0814 /* Source Files */,
				54914CABD5924A30BE8726E6 /* CMakeLists.txt */,
			);
			name = LightingAndTexture;
			sourceTree = "<group>";
		};
		F458F0508C0346BEB48D344F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2BEEA4B28D624BBAB2BAE98B /* Texture.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FB628FCF77DA41E3B00A5692 = {
			isa = PBXGroup;
			children = (
				C72F083419F64FD1A7B977D9 /* Sources */,
				54C9B865697B4575BF51637F /* Resources */,
				CEE18CBEE5194C1BB9C93BA1 /* Products */,
			);
			sourceTree = "<group>";
		};
		FB9205B1345441A99A768D35 /* modes */ = {
			isa = PBXGroup;
			children = (
				11E9F3144BFB43F2A80F212B /* Source Files */,
				80CA04A811A4421CB76B87B4 /* Header Files */,
				A4E8C0B00FCF4760B308BCDE /* CMakeLists.txt */,
			);
			name = modes;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		00F8E7479BEF43C9A68AC4C4 /* windows */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3F73924A69B64DF4BF471D8B /* Build configuration list for PBXNativeTarget "windows" */;
			buildPhases = (
				42B1AE3A5E0B4BCFA707D900 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				B53800CF24E145DB86B68805 /* PBXTargetDependency */,
				C69CD1738769410B890CE444 /* PBXTargetDependency */,
			);
			name = windows;
			productName = windows;
			productReference = 91AD12C8EA114FD495DAC29A /* windows.app */;
			productType = "com.apple.product-type.application";
		};
		07F419B34E5E40D697D84C67 /* accuracy */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E58B1BD96C6249E5BDB11747 /* Build configuration list for PBXNativeTarget "accuracy" */;
			buildPhases = (
				8351E34E3680424CABE70358 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				3F2FC7351B634551960AA13B /* PBXTargetDependency */,
				4363A1DCE50242B08DB88D5D /* PBXTargetDependency */,
			);
			name = accuracy;
			productName = accuracy;
			productReference = 50BC41F22A98405380EDF672 /* accuracy.app */;
			productType = "com.apple.product-type.application";
		};
		0AA5D91BC651441D83A26F54 /* DynamicMesh */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 34594DABE74A4B11B3778A25 /* Build configuration list for PBXNativeTarget "DynamicMesh" */;
			buildPhases = (
				54515CEA8EC74681B5E685F9 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				4E7E212838A44CCCAD1B8F13 /* PBXTargetDependency */,
				5C49161D7E9A4BC385577F30 /* PBXTargetDependency */,
			);
			name = DynamicMesh;
			productName = DynamicMesh;
			productReference = 616E395A18D7477D88E960FE /* DynamicMesh */;
			productType = "com.apple.product-type.tool";
		};
		0DCCE783ED554631B226CF9E /* iconify */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 44A7F74C218048E6B459784E /* Build configuration list for PBXNativeTarget "iconify" */;
			buildPhases = (
				5A9FF988FD304E938CD51FE6 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				F1C96917AE3B424F8E7B3B2A /* PBXTargetDependency */,
				17CFF0A62A784B14A61C9895 /* PBXTargetDependency */,
			);
			name = iconify;
			productName = iconify;
			productReference = 41E54217FD9C4751854F19BA /* iconify */;
			productType = "com.apple.product-type.tool";
		};
		18AC027805BB4EACADA687D2 /* gamma */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DC26520C7430449DA6994FCF /* Build configuration list for PBXNativeTarget "gamma" */;
			buildPhases = (
				A6C68CCDEC074B4D81FC3FD4 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				1BD69E4BEC124113AC081765 /* PBXTargetDependency */,
				DFA2A31743F343CBB25D4109 /* PBXTargetDependency */,
			);
			name = gamma;
			productName = gamma;
			productReference = A26FD09C3AD3497F8FAD98E9 /* gamma */;
			productType = "com.apple.product-type.tool";
		};
		20A6A4B9E84F4C26B6F56868 /* Version */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1409F34C7A144663AA185CEF /* Build configuration list for PBXNativeTarget "Version" */;
			buildPhases = (
				85DB893B19C6465BBAF2B9D5 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				849A290E970943F3878F263D /* PBXTargetDependency */,
				C6ED47AEC0644E0E9406D68C /* PBXTargetDependency */,
			);
			name = Version;
			productName = Version;
			productReference = 28637885AD6040E58BF83DAD /* Version */;
			productType = "com.apple.product-type.tool";
		};
		258920027618482CAA01DAD1 /* defaults */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3E83A8094EC04D979C315FA0 /* Build configuration list for PBXNativeTarget "defaults" */;
			buildPhases = (
				EE2166B870D240B085740BEF /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				CB1E3F89F5F748BEBC565342 /* PBXTargetDependency */,
				8CFFD9FBBE044C8CB8F168B9 /* PBXTargetDependency */,
			);
			name = defaults;
			productName = defaults;
			productReference = 26F557B35FD047C69DC0E09A /* defaults */;
			productType = "com.apple.product-type.tool";
		};
		25CEB733B5954EFEAEF6A24B /* Mouse */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 782E336770FD4879BA405F2C /* Build configuration list for PBXNativeTarget "Mouse" */;
			buildPhases = (
				96D503D72B804EDEBE2665AD /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				B84294D8A5AD4C1FB74397DB /* PBXTargetDependency */,
				295AAE5908814A08BD34E0A0 /* PBXTargetDependency */,
			);
			name = Mouse;
			productName = Mouse;
			productReference = 599132282DDC47F79B572AC4 /* Mouse */;
			productType = "com.apple.product-type.tool";
		};
		2950D2C06FAD436695D73408 /* glfwinfo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F39CC8D675F241FBBD24F357 /* Build configuration list for PBXNativeTarget "glfwinfo" */;
			buildPhases = (
				44F5AEDEF632461A968429D1 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				43441390A4534416ABBB15C8 /* PBXTargetDependency */,
				8C606F396FDF44F1B8D73105 /* PBXTargetDependency */,
			);
			name = glfwinfo;
			productName = glfwinfo;
			productReference = 7946C4A0F79A4A53AA90BFDE /* glfwinfo */;
			productType = "com.apple.product-type.tool";
		};
		2B75701E8E4643D28427358B /* joysticks */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E59272588DB24AE584F7B62D /* Build configuration list for PBXNativeTarget "joysticks" */;
			buildPhases = (
				18EF8563F98444C9B4C62800 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				5352F7CCDDB34DB5BEABC684 /* PBXTargetDependency */,
				6CC4D74A6BD545D497D992DE /* PBXTargetDependency */,
			);
			name = joysticks;
			productName = joysticks;
			productReference = 0B2F024493C441E4828F5FB0 /* joysticks */;
			productType = "com.apple.product-type.tool";
		};
		300BB1EAB7DE4C7E8C74BDA2 /* TriangleBuffer */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9E927C9AEEDE441592DF695F /* Build configuration list for PBXNativeTarget "TriangleBuffer" */;
			buildPhases = (
				AC8B9CE01EE24656BE564D4D /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				DB9C0A3D0837496C9E26DF4C /* PBXTargetDependency */,
				F5188333D1004599837EBDF8 /* PBXTargetDependency */,
			);
			name = TriangleBuffer;
			productName = TriangleBuffer;
			productReference = 389E25DA419B4F208FA5173A /* TriangleBuffer */;
			productType = "com.apple.product-type.tool";
		};
		306523A0D00D40CEA9A7BBB5 /* ModelView */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D8F92662A509427EAF8AC99C /* Build configuration list for PBXNativeTarget "ModelView" */;
			buildPhases = (
				F13AD83BB20D4322B47620AB /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				D0FC4A5B11DA46C19BEAAF1F /* PBXTargetDependency */,
				2A27E1EAE7D84A1ABEFAE2EA /* PBXTargetDependency */,
			);
			name = ModelView;
			productName = ModelView;
			productReference = A6659F514F6D4EEC91FCDC04 /* ModelView */;
			productType = "com.apple.product-type.tool";
		};
		462688FEC7574BEC9D774299 /* GLFWApp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 57C9E3982892413C8C2AC188 /* Build configuration list for PBXNativeTarget "GLFWApp" */;
			buildPhases = (
				89E7C5F75DA54B0BB51B1F92 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A8DDA24A7339407F943CA7CF /* PBXTargetDependency */,
				4A2C14ABF6D94E75B5EBFDE2 /* PBXTargetDependency */,
			);
			name = GLFWApp;
			productName = GLFWApp;
			productReference = 6A4AC04C588F4D078DD8FD51 /* GLFWApp */;
			productType = "com.apple.product-type.tool";
		};
		471EB8EF9B5A4177BCE746FC /* glfw */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6395D6151AEC497EBB430111 /* Build configuration list for PBXNativeTarget "glfw" */;
			buildPhases = (
				1CEDCF40A4ED4CD183B625BC /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				973C257296D34EA2B7A05AE3 /* PBXTargetDependency */,
			);
			name = glfw;
			productName = glfw;
			productReference = 7CB833817C2F4E2AA9A9C062 /* libglfw3.a */;
			productType = "com.apple.product-type.library.static";
		};
		4C823DD32658444AAA87BD05 /* GLFWwindow */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CFAE38EC039A47398BE983C2 /* Build configuration list for PBXNativeTarget "GLFWwindow" */;
			buildPhases = (
				38E40A5A50A744CF8AED2206 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				E3FF25751D534CA08B7A1B7B /* PBXTargetDependency */,
				4A4FC26FAEF343FFBFD98BBA /* PBXTargetDependency */,
			);
			name = GLFWwindow;
			productName = GLFWwindow;
			productReference = 445971C7539542F88C82047C /* GLFWwindow */;
			productType = "com.apple.product-type.tool";
		};
		53AC840926C944AEAE34BDC6 /* TriangleOrtho */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 687F18E77F76469BBF15D9F7 /* Build configuration list for PBXNativeTarget "TriangleOrtho" */;
			buildPhases = (
				C6E2EBF77750404B9566B1AE /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				EFFE5C28DA764EDBAE29018A /* PBXTargetDependency */,
				FEE547DDE7A848008327CF40 /* PBXTargetDependency */,
			);
			name = TriangleOrtho;
			productName = TriangleOrtho;
			productReference = 458F37C1ACA24D29AB8C7B1E /* TriangleOrtho */;
			productType = "com.apple.product-type.tool";
		};
		575184B04B8E426FB53EE1C8 /* Extensions */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5414886560DB462CB3A6268A /* Build configuration list for PBXNativeTarget "Extensions" */;
			buildPhases = (
				31E8675E676A4A13B2DDD8CC /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				E1B8BBDFAEA14CBAA9C78F61 /* PBXTargetDependency */,
				AA5A1337890F4274B334402A /* PBXTargetDependency */,
			);
			name = Extensions;
			productName = Extensions;
			productReference = E453C1EA48FA4577BB840959 /* Extensions */;
			productType = "com.apple.product-type.tool";
		};
		59D5425F920B480393573315 /* Cube */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B2A434C292FD483FB8E16153 /* Build configuration list for PBXNativeTarget "Cube" */;
			buildPhases = (
				266B4DFEF69B402BABD1829A /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				680DB9D3327846EBAB78C33A /* PBXTargetDependency */,
				4608A171C2C24BBABC412D7F /* PBXTargetDependency */,
			);
			name = Cube;
			productName = Cube;
			productReference = 79708B54ACB44574BD568CB1 /* Cube */;
			productType = "com.apple.product-type.tool";
		};
		6F2D973EA403452A92D8CF96 /* Texture */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D74FA98B9317486586ABDD23 /* Build configuration list for PBXNativeTarget "Texture" */;
			buildPhases = (
				44D0E821210F4FC6ADCD9846 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				1627716C2E4A423BB5AC0541 /* PBXTargetDependency */,
				7DDADED849B645FEB039B1E8 /* PBXTargetDependency */,
			);
			name = Texture;
			productName = Texture;
			productReference = 43F005A349C946ECBB2F31F3 /* Texture */;
			productType = "com.apple.product-type.tool";
		};
		773401E4812F4EBD9BAA845D /* Immediate */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1E1A207F534D45C7A8A14BC6 /* Build configuration list for PBXNativeTarget "Immediate" */;
			buildPhases = (
				4B6B1FFBF1524697BEED3368 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				02784360ECD549C8B0D9F741 /* PBXTargetDependency */,
				7549A1B5C816416494F4B3B3 /* PBXTargetDependency */,
			);
			name = Immediate;
			productName = Immediate;
			productReference = 117933C08CFD44C89ABA54A2 /* Immediate */;
			productType = "com.apple.product-type.tool";
		};
		887D767DDEED465EA8EC3563 /* TriangleColorBuffer */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E50EDACC51EC41CCA4F1970A /* Build configuration list for PBXNativeTarget "TriangleColorBuffer" */;
			buildPhases = (
				2029682B346D43D9A4DB3F2D /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				4F4334FFD1B74F10B8ECD832 /* PBXTargetDependency */,
				85B23E1F699646EB86582B29 /* PBXTargetDependency */,
			);
			name = TriangleColorBuffer;
			productName = TriangleColorBuffer;
			productReference = 6D1CC3D897B5497E9A3FC8AD /* TriangleColorBuffer */;
			productType = "com.apple.product-type.tool";
		};
		898BAF8FB54D4006A5F0534D /* title */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5A63ACFAE36644618792A40A /* Build configuration list for PBXNativeTarget "title" */;
			buildPhases = (
				1F00A50E054849478A0152E0 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				BAB934CD4B9446A092F153D0 /* PBXTargetDependency */,
				80DD4868E13049EABF71BD72 /* PBXTargetDependency */,
			);
			name = title;
			productName = title;
			productReference = 3E89BDC90D544949A57AA213 /* title.app */;
			productType = "com.apple.product-type.application";
		};
		92A04CC5F59949BBB2F84464 /* tearing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 72F2628CCF3B44829C342B84 /* Build configuration list for PBXNativeTarget "tearing" */;
			buildPhases = (
				B28CF540C8EB483980FF6E9F /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				BCA2813B195E4296B99BA320 /* PBXTargetDependency */,
				939A66D96C2E45A09E96F554 /* PBXTargetDependency */,
			);
			name = tearing;
			productName = tearing;
			productReference = 3ABF183DA6C24C9EABD8125B /* tearing.app */;
			productType = "com.apple.product-type.application";
		};
		96888DDCDB5F4E139220BF14 /* clipboard */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0C5B29F60CED4F3589D8CEB5 /* Build configuration list for PBXNativeTarget "clipboard" */;
			buildPhases = (
				358BD83440F3422DA3AE8251 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A9EC1EB658E5424DBAEA75E1 /* PBXTargetDependency */,
				F1339CE4DA6C4EBBA437A8A5 /* PBXTargetDependency */,
			);
			name = clipboard;
			productName = clipboard;
			productReference = 3EF8D5FC0BFF4B6C807BD496 /* clipboard */;
			productType = "com.apple.product-type.tool";
		};
		9C8BEF81A08C4A4BBB324FE5 /* LightingAndTexture */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = EE0BA2105C174C3CBC863B7F /* Build configuration list for PBXNativeTarget "LightingAndTexture" */;
			buildPhases = (
				D7D78F31B8CC45979DAA005E /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				3EC668AB3E394F839447E2E0 /* PBXTargetDependency */,
				E95B5CFC8D604E42BFD6F127 /* PBXTargetDependency */,
			);
			name = LightingAndTexture;
			productName = LightingAndTexture;
			productReference = A272D075D51F4E5AAB08FB21 /* LightingAndTexture */;
			productType = "com.apple.product-type.tool";
		};
		9E5FBCDDCB1B4205B505D1D0 /* threads */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = BA8D208BC72D4AF4B1BD9319 /* Build configuration list for PBXNativeTarget "threads" */;
			buildPhases = (
				CF7B946917D043FE8C84FCAD /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				F193B181607040669B545FDB /* PBXTargetDependency */,
				D382FA3ED1A0498C91D47B20 /* PBXTargetDependency */,
			);
			name = threads;
			productName = threads;
			productReference = DAD4CA8662434BB789C74905 /* threads.app */;
			productType = "com.apple.product-type.application";
		};
		A0373984878B47669B504246 /* peter */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E06EC8D832F94681A65577B8 /* Build configuration list for PBXNativeTarget "peter" */;
			buildPhases = (
				5E64A953FC4746E99E320389 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				E319CE407C6B4CCDBC7E3E05 /* PBXTargetDependency */,
				2B9631602B8D4F59BC2A8616 /* PBXTargetDependency */,
			);
			name = peter;
			productName = peter;
			productReference = 108DED8E971A430785D9B10B /* peter */;
			productType = "com.apple.product-type.tool";
		};
		B416FA1947CD45819BE187C7 /* TextureLoader */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 670444B51FB842969BAB2D23 /* Build configuration list for PBXNativeTarget "TextureLoader" */;
			buildPhases = (
				55DD89D6FFA34388B6C6F25C /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				2CD28DFD376B4D9CA778C775 /* PBXTargetDependency */,
				1BD61538420D4BE28BC1A84D /* PBXTargetDependency */,
			);
			name = TextureLoader;
			productName = TextureLoader;
			productReference = B35FFAC72DE647AB8D8B8FA5 /* TextureLoader */;
			productType = "com.apple.product-type.tool";
		};
		BAA1DF3478D542CDB04D621B /* sharing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 24EF0364F1D04EFB885AABA1 /* Build configuration list for PBXNativeTarget "sharing" */;
			buildPhases = (
				A66A7966A6FD4B87A18D99CD /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				76089CFDE57A455692E05D2E /* PBXTargetDependency */,
				8E5B0B2B905445399397ED2D /* PBXTargetDependency */,
			);
			name = sharing;
			productName = sharing;
			productReference = 1DC7071544ED4C718EF1D04D /* sharing.app */;
			productType = "com.apple.product-type.application";
		};
		C5C77BE636C74891BE9038CA /* reopen */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 914D752CA36F4C32BDF4F6B4 /* Build configuration list for PBXNativeTarget "reopen" */;
			buildPhases = (
				A43DE42B4BB24C808739ADE4 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				86E14C22B6B44A59BAB7211D /* PBXTargetDependency */,
				16F5A0FA5BB049A88A0189AF /* PBXTargetDependency */,
			);
			name = reopen;
			productName = reopen;
			productReference = 49A06380CEDC4048B101C553 /* reopen */;
			productType = "com.apple.product-type.tool";
		};
		CC9BE52F7C794F929F0648E8 /* modes */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A6BDA0CA7DE84DAFBBD8A909 /* Build configuration list for PBXNativeTarget "modes" */;
			buildPhases = (
				B2F4C883356840FAA0A63983 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				078988FDA3744CA09E085B4B /* PBXTargetDependency */,
				4146E18F76EF45FB9E651CFF /* PBXTargetDependency */,
			);
			name = modes;
			productName = modes;
			productReference = B0559FFFB4284500967741F8 /* modes */;
			productType = "com.apple.product-type.tool";
		};
		CDCFD9CA4AAD418798FE8412 /* fsaa */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 393AD31139524F93BA85DE3B /* Build configuration list for PBXNativeTarget "fsaa" */;
			buildPhases = (
				59ECEB75F05A4DA594A48A0E /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				648E5EAEB1CA49C58FAA8C19 /* PBXTargetDependency */,
				37E3713AE1FA497DAB78E573 /* PBXTargetDependency */,
			);
			name = fsaa;
			productName = fsaa;
			productReference = F90AFA70C6604E64BA0B7D38 /* fsaa */;
			productType = "com.apple.product-type.tool";
		};
		CE714EE188274C6D90A13ABA /* ImmediateTriangles */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F235EF130B2343C9A8A3348D /* Build configuration list for PBXNativeTarget "ImmediateTriangles" */;
			buildPhases = (
				F1B4F54BFFA04F18AFBFC378 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				D848E2D1B1F742ACB639574C /* PBXTargetDependency */,
				6A1DE6C260D54F07B7249EFF /* PBXTargetDependency */,
			);
			name = ImmediateTriangles;
			productName = ImmediateTriangles;
			productReference = 5F9C309A75CD43B4AB865F05 /* ImmediateTriangles */;
			productType = "com.apple.product-type.tool";
		};
		D528548224E446E490444F2B /* Keyboard */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C05AE2DFC3754D43846BFBB4 /* Build configuration list for PBXNativeTarget "Keyboard" */;
			buildPhases = (
				D15386E8697B41C9AC1E13A4 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				99705C865544438FA0F4C76C /* PBXTargetDependency */,
				41F6CF8CB17549748809AA7E /* PBXTargetDependency */,
			);
			name = Keyboard;
			productName = Keyboard;
			productReference = A6B04B40C6AF44FFA57A6B85 /* Keyboard */;
			productType = "com.apple.product-type.tool";
		};
		D72B40DD089A43C8A0F9F133 /* Model */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E3B3AC13D52A49E39FC7C451 /* Build configuration list for PBXNativeTarget "Model" */;
			buildPhases = (
				25D36714DD9F48DF8AD7A940 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				7684F2524AB04E66ADD3B9BF /* PBXTargetDependency */,
				79B550973C1D4AADA8D9213B /* PBXTargetDependency */,
			);
			name = Model;
			productName = Model;
			productReference = 3037BD2D53854CAA9E755FF5 /* Model */;
			productType = "com.apple.product-type.tool";
		};
		F0E968FF5F6A400C93A8E72B /* Lighting */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B62C8FBCCCBA4CC0925BAD3B /* Build configuration list for PBXNativeTarget "Lighting" */;
			buildPhases = (
				FCCA931028BC400F9A778F61 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A796EB799B154CFEAB020CEB /* PBXTargetDependency */,
				AC9B4ABB239F45C7A3931C55 /* PBXTargetDependency */,
			);
			name = Lighting;
			productName = Lighting;
			productReference = 7FA44008E9074306B3E4972B /* Lighting */;
			productType = "com.apple.product-type.tool";
		};
		F2960284CC214E6FA74D2895 /* events */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A266456C828644B2AF41DB23 /* Build configuration list for PBXNativeTarget "events" */;
			buildPhases = (
				CFBBC3915DD24891BE12CC2F /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				B57E59D770504128A32BDD9F /* PBXTargetDependency */,
				BA1719544BBB4C0B93F973DE /* PBXTargetDependency */,
			);
			name = events;
			productName = events;
			productReference = C982FB5D68E34D18B7948754 /* events */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		5F244C22DB7F4AC8BBE81452 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 0720;
			};
			buildConfigurationList = 8E0F9A85B3314C189293FBB8 /* Build configuration list for PBXProject "UaR_OpenGL" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = FB628FCF77DA41E3B00A5692;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				540EEAD33B164800949C3369 /* ALL_BUILD */,
				59D5425F920B480393573315 /* Cube */,
				0AA5D91BC651441D83A26F54 /* DynamicMesh */,
				575184B04B8E426FB53EE1C8 /* Extensions */,
				462688FEC7574BEC9D774299 /* GLFWApp */,
				4C823DD32658444AAA87BD05 /* GLFWwindow */,
				773401E4812F4EBD9BAA845D /* Immediate */,
				CE714EE188274C6D90A13ABA /* ImmediateTriangles */,
				D528548224E446E490444F2B /* Keyboard */,
				F0E968FF5F6A400C93A8E72B /* Lighting */,
				9C8BEF81A08C4A4BBB324FE5 /* LightingAndTexture */,
				D72B40DD089A43C8A0F9F133 /* Model */,
				306523A0D00D40CEA9A7BBB5 /* ModelView */,
				25CEB733B5954EFEAEF6A24B /* Mouse */,
				6F2D973EA403452A92D8CF96 /* Texture */,
				B416FA1947CD45819BE187C7 /* TextureLoader */,
				300BB1EAB7DE4C7E8C74BDA2 /* TriangleBuffer */,
				887D767DDEED465EA8EC3563 /* TriangleColorBuffer */,
				53AC840926C944AEAE34BDC6 /* TriangleOrtho */,
				20A6A4B9E84F4C26B6F56868 /* Version */,
				D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */,
				42FB6CA8663D46C082F0FEBD /* install */,
				80F6DFCB60FF4FB0A2472F7D /* uninstall */,
				471EB8EF9B5A4177BCE746FC /* glfw */,
				07F419B34E5E40D697D84C67 /* accuracy */,
				96888DDCDB5F4E139220BF14 /* clipboard */,
				258920027618482CAA01DAD1 /* defaults */,
				F2960284CC214E6FA74D2895 /* events */,
				CDCFD9CA4AAD418798FE8412 /* fsaa */,
				18AC027805BB4EACADA687D2 /* gamma */,
				2950D2C06FAD436695D73408 /* glfwinfo */,
				0DCCE783ED554631B226CF9E /* iconify */,
				2B75701E8E4643D28427358B /* joysticks */,
				CC9BE52F7C794F929F0648E8 /* modes */,
				A0373984878B47669B504246 /* peter */,
				C5C77BE636C74891BE9038CA /* reopen */,
				BAA1DF3478D542CDB04D621B /* sharing */,
				92A04CC5F59949BBB2F84464 /* tearing */,
				9E5FBCDDCB1B4205B505D1D0 /* threads */,
				898BAF8FB54D4006A5F0534D /* title */,
				00F8E7479BEF43C9A68AC4C4 /* windows */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		5F66369A444346BEBC52A0D1 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode -f /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/CMakeScripts/ZERO_CHECK_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		BC73D2C54A84449B8BF59A6C /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw -f /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/CMakeScripts/uninstall_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		C894500C21DC43918A3FAE3D /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode -f /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		EE51BB84599843ACB4B1C931 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode -f /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		18EF8563F98444C9B4C62800 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B2DDBA2B8859436198C735B3 /* joysticks.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1CEDCF40A4ED4CD183B625BC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				503A4F522CF94E69AF9C29D4 /* clipboard.c in Sources */,
				260BB208CF20400BBA606492 /* cocoa_clipboard.m in Sources */,
				86FF40A2DEFB45A88040F61E /* cocoa_gamma.c in Sources */,
				CDD038604C2045CDACB3C409 /* cocoa_init.m in Sources */,
				E4F888083E9D4381B596426F /* cocoa_joystick.m in Sources */,
				33642B15F48D4C11B29C2EFA /* cocoa_monitor.m in Sources */,
				9A84135AA5504FDD9126130C /* cocoa_time.c in Sources */,
				B86FB916DE6E4AE29C264669 /* cocoa_window.m in Sources */,
				75254241B11A40039FC78814 /* context.c in Sources */,
				F47EB3903E3D4B438DDB87AA /* gamma.c in Sources */,
				FAD7DFAB1E5B491382135F7D /* init.c in Sources */,
				CE367C3F53F54CFAACB1B896 /* input.c in Sources */,
				73A65FD4722F4A8D86BDBBF8 /* joystick.c in Sources */,
				BD4881FEA9454F4497A544F0 /* monitor.c in Sources */,
				B4C1E099A8D7402391177C78 /* nsgl_context.m in Sources */,
				44D5D6C45BC547C8B7B9DBB4 /* time.c in Sources */,
				6D8972E33F724408A37D6924 /* window.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1F00A50E054849478A0152E0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3A26755FA3E04F8EA76ED622 /* title.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2029682B346D43D9A4DB3F2D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				18E9C9C13BFE4AFB93AD8E7A /* TriangleColorBuffer.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25D36714DD9F48DF8AD7A940 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CA35E4A5407440469A217DCF /* Model.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		266B4DFEF69B402BABD1829A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B7CD0DBDC7844C63A7635913 /* Cube.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		31E8675E676A4A13B2DDD8CC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9FB9A2CB9F4B4FF58EB1C80A /* Extensions.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		358BD83440F3422DA3AE8251 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4E4D69668D5C4CE884B06580 /* getopt.c in Sources */,
				5C2D3B2E956C4937BD93D575 /* clipboard.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		38E40A5A50A744CF8AED2206 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				983306981C8932C60028B36A /* GLFW_Window.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		42B1AE3A5E0B4BCFA707D900 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A168ED9319594D86BF64C223 /* windows.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		44D0E821210F4FC6ADCD9846 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3C62B8B4AD4449DAAAABFA41 /* Texture.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		44F5AEDEF632461A968429D1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				33A21674A374441EB47BB8FC /* getopt.c in Sources */,
				FD892FED92C44E9CA742C030 /* glfwinfo.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4B6B1FFBF1524697BEED3368 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				ACC17DAC6E33444A914D16E6 /* Immediate.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		54515CEA8EC74681B5E685F9 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FDE7EEDB36D74E9B807EC69B /* DynamicMesh.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		55DD89D6FFA34388B6C6F25C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9D739ADA83814DE595A5458E /* TextureLoader.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		59ECEB75F05A4DA594A48A0E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9203159E33504DEEBEEE426E /* getopt.c in Sources */,
				E531F049D44B4D4AB82B3A17 /* fsaa.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5A9FF988FD304E938CD51FE6 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FEDA4BB9959A4C2B8B279295 /* getopt.c in Sources */,
				3E73A18A7EEC45388702C1F7 /* iconify.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5E64A953FC4746E99E320389 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DC0F3F8831CF4D3D8412BADD /* peter.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8351E34E3680424CABE70358 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6B9D79C5F7444BFCB98CB691 /* accuracy.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		85DB893B19C6465BBAF2B9D5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				983306961C87F8770028B36A /* GL_Version.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		89E7C5F75DA54B0BB51B1F92 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				582289E16147498DB16275A0 /* GLFWApp.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		96D503D72B804EDEBE2665AD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39E1D6414B37429C92A00579 /* Mouse.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A43DE42B4BB24C808739ADE4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				20D867EF629A4EC3A7DD569A /* reopen.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A66A7966A6FD4B87A18D99CD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C5EAD881EB8C41EE829F3FA7 /* sharing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A6C68CCDEC074B4D81FC3FD4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				61D1332F202642ACB0A40BF5 /* getopt.c in Sources */,
				568F9C61952C4256A657A86C /* gamma.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AC8B9CE01EE24656BE564D4D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				465CD1D58F5149E89671C520 /* TriangleBuffer.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B28CF540C8EB483980FF6E9F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C17C0FBBC344443FBD282F05 /* tearing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B2F4C883356840FAA0A63983 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EBEC64A2EF3443E29A04732A /* getopt.c in Sources */,
				C8EE3CDCC2514255A9180C26 /* modes.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C6E2EBF77750404B9566B1AE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				627D5FE650CD46F2ADD08D0D /* TriangleOrtho.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CF7B946917D043FE8C84FCAD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AD987CF4DF2946698AEF6874 /* tinycthread.c in Sources */,
				9DC88B609AF64704B0D7F0E3 /* threads.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CFBBC3915DD24891BE12CC2F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3AA9EDD8A82D436A8D32F868 /* getopt.c in Sources */,
				DCE0ABC914444276ADD8B67D /* events.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D15386E8697B41C9AC1E13A4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E69E26B947BC4C2BB5D21040 /* Keyboard.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D7D78F31B8CC45979DAA005E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1475F6FA1D7D47C7AFEC86DF /* LightingAndTexture.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EE2166B870D240B085740BEF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AAE8A1053C8346C98B2DC1B5 /* defaults.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F13AD83BB20D4322B47620AB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0E2B999016B74D8BA1FEA4A2 /* ModelView.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F1B4F54BFFA04F18AFBFC378 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				92657F53F8E44FC9814DCE89 /* ImmediateTriangles.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FCCA931028BC400F9A778F61 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C2EC25258A944F1889B44377 /* Lighting.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		02784360ECD549C8B0D9F741 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = AF77094316B0416991231FC2 /* PBXContainerItemProxy */;
		};
		078988FDA3744CA09E085B4B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 6F6DF7DF535349478918AFC5 /* PBXContainerItemProxy */;
		};
		0AB097B3E0074ED985CA883A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 898BAF8FB54D4006A5F0534D /* title */;
			targetProxy = EEE514C4E59B4509B5E5A0FC /* PBXContainerItemProxy */;
		};
		0C227815585D4D10B869244D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B416FA1947CD45819BE187C7 /* TextureLoader */;
			targetProxy = DCAA09A426F14A0AB835310E /* PBXContainerItemProxy */;
		};
		0CCB599590384ACE811EDFBD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CE714EE188274C6D90A13ABA /* ImmediateTriangles */;
			targetProxy = 761413768E5542FE9842A649 /* PBXContainerItemProxy */;
		};
		1627716C2E4A423BB5AC0541 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = D653B828F44C48908FDFDE96 /* PBXContainerItemProxy */;
		};
		16F5A0FA5BB049A88A0189AF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 3BAB9EC9321646BAA354A546 /* PBXContainerItemProxy */;
		};
		17CFF0A62A784B14A61C9895 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = CD7DF2EF77D1404396B852C9 /* PBXContainerItemProxy */;
		};
		182C6B97C3A840E7AA3F06CE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20A6A4B9E84F4C26B6F56868 /* Version */;
			targetProxy = C7AE869ED7BD43F7A17A325B /* PBXContainerItemProxy */;
		};
		1BD61538420D4BE28BC1A84D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = CEAB8E7D174C467182178914 /* PBXContainerItemProxy */;
		};
		1BD69E4BEC124113AC081765 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = C6D4014C6398489BB886D237 /* PBXContainerItemProxy */;
		};
		1DFCA228F2874F6B8D3D9F79 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 4C823DD32658444AAA87BD05 /* GLFWwindow */;
			targetProxy = 0EE2C0621BB742D8A2E06078 /* PBXContainerItemProxy */;
		};
		1E45443AF6974EFDA3FD9C78 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 96888DDCDB5F4E139220BF14 /* clipboard */;
			targetProxy = FBFB31080C114AD4BA4F2146 /* PBXContainerItemProxy */;
		};
		246F47709DE9406783CC9121 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0DCCE783ED554631B226CF9E /* iconify */;
			targetProxy = 65C1A57B735C4046B6612A79 /* PBXContainerItemProxy */;
		};
		295AAE5908814A08BD34E0A0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 20F645FEBE9441F9B602C287 /* PBXContainerItemProxy */;
		};
		2A27E1EAE7D84A1ABEFAE2EA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 72F28882948C497F92CB30C3 /* PBXContainerItemProxy */;
		};
		2B9631602B8D4F59BC2A8616 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = DD8C8B1DDF6B4D47B62F9E7A /* PBXContainerItemProxy */;
		};
		2CD28DFD376B4D9CA778C775 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = DBECF0C2C1A5444392985D70 /* PBXContainerItemProxy */;
		};
		3005C24AB8DB444FA9BC7DA7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 9E5FBCDDCB1B4205B505D1D0 /* threads */;
			targetProxy = E9FC29FA4D6A4B459EDA2444 /* PBXContainerItemProxy */;
		};
		324561C065A549E281EA4983 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F2D973EA403452A92D8CF96 /* Texture */;
			targetProxy = 92EDFC6C9E0745EAAEC3A535 /* PBXContainerItemProxy */;
		};
		3502BA164F6E49EA913E8EF8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 53AC840926C944AEAE34BDC6 /* TriangleOrtho */;
			targetProxy = 8F135EB1C09D46A8BD357BB9 /* PBXContainerItemProxy */;
		};
		37347834224C468D8F664E71 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = C409E47CB8854A66ADB051A3 /* PBXContainerItemProxy */;
		};
		37BBBAF12D9043A4A62A4815 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F2960284CC214E6FA74D2895 /* events */;
			targetProxy = 0BB57850B4234FC299FFCA80 /* PBXContainerItemProxy */;
		};
		37E3713AE1FA497DAB78E573 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = C20BE560528D411696D2887E /* PBXContainerItemProxy */;
		};
		3EC668AB3E394F839447E2E0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 8B1733B9C8A342BA9DFDDF98 /* PBXContainerItemProxy */;
		};
		3F2FC7351B634551960AA13B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 2946D92279DC4189B522AF6B /* PBXContainerItemProxy */;
		};
		4146E18F76EF45FB9E651CFF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 9C5E29A305B44119A2E5C1B4 /* PBXContainerItemProxy */;
		};
		41F6CF8CB17549748809AA7E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 3ACBC769A977445E9854F824 /* PBXContainerItemProxy */;
		};
		43441390A4534416ABBB15C8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 997BC971603847A3A93D8262 /* PBXContainerItemProxy */;
		};
		4363A1DCE50242B08DB88D5D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 1645E459FF034B2AAA7DA8F7 /* PBXContainerItemProxy */;
		};
		4363B02DF7D74936A327D65C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 575184B04B8E426FB53EE1C8 /* Extensions */;
			targetProxy = BC22F45BFFF74462B6F70F2C /* PBXContainerItemProxy */;
		};
		450C3223121B409990424877 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 07F419B34E5E40D697D84C67 /* accuracy */;
			targetProxy = 01B8ACC3DF5449B8B2035B7E /* PBXContainerItemProxy */;
		};
		4608A171C2C24BBABC412D7F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = ED688B38B28240D2B62E7A0E /* PBXContainerItemProxy */;
		};
		4A2C14ABF6D94E75B5EBFDE2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 7C134EB6995D47669301E1CB /* PBXContainerItemProxy */;
		};
		4A4FC26FAEF343FFBFD98BBA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 1A9817F1BEA14E55A93A2A4B /* PBXContainerItemProxy */;
		};
		4E7E212838A44CCCAD1B8F13 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 972E064BDCC74AEFAC94A312 /* PBXContainerItemProxy */;
		};
		4F4334FFD1B74F10B8ECD832 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = B6EBE7C3377D479CB7274C07 /* PBXContainerItemProxy */;
		};
		50A300746B03453890F5A18E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 92A04CC5F59949BBB2F84464 /* tearing */;
			targetProxy = 2A044C9E3515434A9DACB377 /* PBXContainerItemProxy */;
		};
		514283AF46374C929C16B472 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 18AC027805BB4EACADA687D2 /* gamma */;
			targetProxy = C28DC9FE6175479BB81C4DB6 /* PBXContainerItemProxy */;
		};
		5352F7CCDDB34DB5BEABC684 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = BD2796482AF84DBCACA6AFDF /* PBXContainerItemProxy */;
		};
		5C49161D7E9A4BC385577F30 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 7DD3F121A49A46A8823EB16E /* PBXContainerItemProxy */;
		};
		648E5EAEB1CA49C58FAA8C19 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 187E5D1EE95E4346BC5C0D9E /* PBXContainerItemProxy */;
		};
		67DCD6E2ED2B4244926AA914 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25CEB733B5954EFEAEF6A24B /* Mouse */;
			targetProxy = FA8FDD8F7B29483DA7AB44A1 /* PBXContainerItemProxy */;
		};
		680DB9D3327846EBAB78C33A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 8F494B1E1A5D4AABBC2641F1 /* PBXContainerItemProxy */;
		};
		6991472C3799421290A4952A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C5C77BE636C74891BE9038CA /* reopen */;
			targetProxy = 0B7B2B5018F44391B60A930D /* PBXContainerItemProxy */;
		};
		6A1DE6C260D54F07B7249EFF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 043A616D610F450D8EF364D7 /* PBXContainerItemProxy */;
		};
		6CC4D74A6BD545D497D992DE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 7CF84FCF25DF4B53AB5074DA /* PBXContainerItemProxy */;
		};
		6D3102A3B2C94A7D947767EB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BAA1DF3478D542CDB04D621B /* sharing */;
			targetProxy = 348E80D493874BF7AB8C8378 /* PBXContainerItemProxy */;
		};
		7549A1B5C816416494F4B3B3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 95360ADB83B04A6D8D4DFFCA /* PBXContainerItemProxy */;
		};
		7587ADC11DB34A0784DF515F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = F71A9DD5BFFA4C7D93EE453F /* PBXContainerItemProxy */;
		};
		76089CFDE57A455692E05D2E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = CF87D7216428412FBFCB8ABF /* PBXContainerItemProxy */;
		};
		7684F2524AB04E66ADD3B9BF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = BBE993961FAB4CEA8342DCFB /* PBXContainerItemProxy */;
		};
		79B550973C1D4AADA8D9213B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = B2A158DAF43C4CB583E3B7D5 /* PBXContainerItemProxy */;
		};
		7DDADED849B645FEB039B1E8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = C7B7124F7C174128B93BDD6D /* PBXContainerItemProxy */;
		};
		80DD4868E13049EABF71BD72 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = B338600CFF2B4637BDE42E65 /* PBXContainerItemProxy */;
		};
		8226D5FEC3934497B0E4681B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 306523A0D00D40CEA9A7BBB5 /* ModelView */;
			targetProxy = 4E92FA1970944D20B1A0C5AB /* PBXContainerItemProxy */;
		};
		8471C47DC30B4A96906D44AF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F0E968FF5F6A400C93A8E72B /* Lighting */;
			targetProxy = 3B074DF31CFD49AD90855DAE /* PBXContainerItemProxy */;
		};
		849A290E970943F3878F263D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 906D0681BA344FC6BAA191EC /* PBXContainerItemProxy */;
		};
		85B23E1F699646EB86582B29 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 197124891EC0459A8807A276 /* PBXContainerItemProxy */;
		};
		86E14C22B6B44A59BAB7211D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 49B87E0D4AC846D79D9918ED /* PBXContainerItemProxy */;
		};
		8C606F396FDF44F1B8D73105 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 04A7A9A4DB994FD0ABEA10DC /* PBXContainerItemProxy */;
		};
		8CFFD9FBBE044C8CB8F168B9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = BF0E39E1C2074804BE9F8BCD /* PBXContainerItemProxy */;
		};
		8E5B0B2B905445399397ED2D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 46356E1BA4D343038840BD0C /* PBXContainerItemProxy */;
		};
		939A66D96C2E45A09E96F554 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 9E095790B8BF4A3EB49BF243 /* PBXContainerItemProxy */;
		};
		96FB4383848147C2840B0117 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 00F8E7479BEF43C9A68AC4C4 /* windows */;
			targetProxy = A61AD19BD97D445B99182327 /* PBXContainerItemProxy */;
		};
		973C257296D34EA2B7A05AE3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = ED761DC05A8241C1A9A28777 /* PBXContainerItemProxy */;
		};
		9951CF2E70724134947F0B2E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 462688FEC7574BEC9D774299 /* GLFWApp */;
			targetProxy = 84227DF9FF914795A5EC8C60 /* PBXContainerItemProxy */;
		};
		99705C865544438FA0F4C76C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = F3A520437C604EDE8386A5F4 /* PBXContainerItemProxy */;
		};
		A75286E99F1642DEA42E6C41 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A0373984878B47669B504246 /* peter */;
			targetProxy = C5864AD23F0C4344A49DE9BC /* PBXContainerItemProxy */;
		};
		A796EB799B154CFEAB020CEB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 4C51202347BF47F3A4FBD186 /* PBXContainerItemProxy */;
		};
		A8DDA24A7339407F943CA7CF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = A923C36D7DEF470195579DB4 /* PBXContainerItemProxy */;
		};
		A9EC1EB658E5424DBAEA75E1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 680EBADFDFA24165AA16C48D /* PBXContainerItemProxy */;
		};
		AA5A1337890F4274B334402A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 5CDC0B6C6D6545C8A9D82BB8 /* PBXContainerItemProxy */;
		};
		AC9B4ABB239F45C7A3931C55 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 0F2B7B3B258A4FFC879BE782 /* PBXContainerItemProxy */;
		};
		AD56AA19C469462DAC54E0BB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CDCFD9CA4AAD418798FE8412 /* fsaa */;
			targetProxy = 50A5F80357094054BF6393FA /* PBXContainerItemProxy */;
		};
		AD963CE26742471C85332A83 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 59D5425F920B480393573315 /* Cube */;
			targetProxy = F3EBCB8046C94687A75D52B6 /* PBXContainerItemProxy */;
		};
		ADB9736707834F9ABD6293F8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 300BB1EAB7DE4C7E8C74BDA2 /* TriangleBuffer */;
			targetProxy = CCF229B9E63E4274AC260D16 /* PBXContainerItemProxy */;
		};
		AE88CFC1F6094120B352D6AA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0AA5D91BC651441D83A26F54 /* DynamicMesh */;
			targetProxy = 74517775476B46CBB44E5E4A /* PBXContainerItemProxy */;
		};
		B53800CF24E145DB86B68805 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = A534DFCDDAD342FB9D7FCB2F /* PBXContainerItemProxy */;
		};
		B57E59D770504128A32BDD9F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 5D259AE381EF436B87A4CDDE /* PBXContainerItemProxy */;
		};
		B7A86B5AB1AB4F4794CC3CAB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D72B40DD089A43C8A0F9F133 /* Model */;
			targetProxy = 4100D7ED7D6E4C97A972E1E7 /* PBXContainerItemProxy */;
		};
		B84294D8A5AD4C1FB74397DB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 00FC529B844944AAB433C18E /* PBXContainerItemProxy */;
		};
		BA1719544BBB4C0B93F973DE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 8F8CCECCA9AA465DADB1551F /* PBXContainerItemProxy */;
		};
		BAB934CD4B9446A092F153D0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 09A2F6077C4F4FF79ABA0C94 /* PBXContainerItemProxy */;
		};
		BCA2813B195E4296B99BA320 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 8DE8E04FFC5A40938783E08E /* PBXContainerItemProxy */;
		};
		C4237E944F254DE4A2EDB10A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D528548224E446E490444F2B /* Keyboard */;
			targetProxy = 08EBC9588B0A48E9864F4553 /* PBXContainerItemProxy */;
		};
		C69CD1738769410B890CE444 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 2B7C80D4047040DBB654472A /* PBXContainerItemProxy */;
		};
		C6ED47AEC0644E0E9406D68C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = DDD8D5C06DEF4A5E857245B4 /* PBXContainerItemProxy */;
		};
		CB1E3F89F5F748BEBC565342 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = C67A0A993AA449BEB8DCFA26 /* PBXContainerItemProxy */;
		};
		CCB3DFEF5C5A42CE969B9DD9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 9C8BEF81A08C4A4BBB324FE5 /* LightingAndTexture */;
			targetProxy = E35BE41492AA4113995C16B2 /* PBXContainerItemProxy */;
		};
		D0FC4A5B11DA46C19BEAAF1F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = D1C7937E67914C36AD1F8452 /* PBXContainerItemProxy */;
		};
		D114438AF8814421A4C2033F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 887D767DDEED465EA8EC3563 /* TriangleColorBuffer */;
			targetProxy = 9B63B15A28BF46A1B5586011 /* PBXContainerItemProxy */;
		};
		D382FA3ED1A0498C91D47B20 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 7E64976BD69C4C919FB20667 /* PBXContainerItemProxy */;
		};
		D848E2D1B1F742ACB639574C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 113990F0D0F5412884683A95 /* PBXContainerItemProxy */;
		};
		DB9C0A3D0837496C9E26DF4C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = C6D00D6D612E4ADE88352EA2 /* PBXContainerItemProxy */;
		};
		DD05315FCBFC40E7A4FE6688 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2B75701E8E4643D28427358B /* joysticks */;
			targetProxy = 421DB9DFB0B942B3A3CA123B /* PBXContainerItemProxy */;
		};
		DFA2A31743F343CBB25D4109 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 34CACE1BCFED42FDBD9A3811 /* PBXContainerItemProxy */;
		};
		E1B8BBDFAEA14CBAA9C78F61 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 52EC178F678A4C1DAFBD870F /* PBXContainerItemProxy */;
		};
		E319CE407C6B4CCDBC7E3E05 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = A2C9A14CE3274F78B03A0302 /* PBXContainerItemProxy */;
		};
		E3A96E594BFC464585E7A87D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2950D2C06FAD436695D73408 /* glfwinfo */;
			targetProxy = E91283871D0E446980386C30 /* PBXContainerItemProxy */;
		};
		E3DA03728EED4DE7BC8DB04A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 258920027618482CAA01DAD1 /* defaults */;
			targetProxy = 3E199E7EFD984004A14EC77F /* PBXContainerItemProxy */;
		};
		E3FF25751D534CA08B7A1B7B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = A1907F49B8B6420BA8966BDD /* PBXContainerItemProxy */;
		};
		E900A1CF2CD74877BACEFFF8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CC9BE52F7C794F929F0648E8 /* modes */;
			targetProxy = 365CA5128A0D406F89DA462D /* PBXContainerItemProxy */;
		};
		E95B5CFC8D604E42BFD6F127 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = CF8256C9F26A4AD0A44E2A56 /* PBXContainerItemProxy */;
		};
		E96E4EF3A3C74C4B9CBF360E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 540EEAD33B164800949C3369 /* ALL_BUILD */;
			targetProxy = 123558B9D79046A883855206 /* PBXContainerItemProxy */;
		};
		EFFE5C28DA764EDBAE29018A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 6B60FF7763684BF89ABFBE2E /* PBXContainerItemProxy */;
		};
		F1339CE4DA6C4EBBA437A8A5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 53BC09DD2E5747AAA4CF432D /* PBXContainerItemProxy */;
		};
		F193B181607040669B545FDB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = 7C16B61F54874D10AEA0BCF9 /* PBXContainerItemProxy */;
		};
		F1C96917AE3B424F8E7B3B2A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 471EB8EF9B5A4177BCE746FC /* glfw */;
			targetProxy = B570D2CD926B4FBCB93D08EB /* PBXContainerItemProxy */;
		};
		F261F98C333E4174842FEE5F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 773401E4812F4EBD9BAA845D /* Immediate */;
			targetProxy = BCA1F39A5D754FBC9E8FDB4F /* PBXContainerItemProxy */;
		};
		F5188333D1004599837EBDF8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 33A3E9656B5D4C73AF630A40 /* PBXContainerItemProxy */;
		};
		FEE547DDE7A848008327CF40 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D58D78FD40DB4D1FA92F7F54 /* ZERO_CHECK */;
			targetProxy = 2272C797C3C74F0097054FC2 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		00ED070FC0CE4181B25E8AA1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		015F52C5D26944468E85F119 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		019A1E80A1494795857D5928 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		0235F68EC1CB4D6490956C32 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		02B2869B2D184A6BA74DC0CA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		032EEB104F2C458A9F675335 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk;
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/build;
			};
			name = MinSizeRel;
		};
		06DCD5E6EBAC4DC6AEA1AA9E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		07AE5C1E253640B298051BCF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		09977085832040E687692CE6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		0D6147BFF03F4D13A178EE13 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		101DF0FF3DCC4910BF48DCDF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		13D8E47E8D9C4A5E84C3D75B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		14276586CD8A45F7A5440234 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		156979864F014AB3824E7739 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		19A4EBF6EBCA4A24B9C13F15 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		1DA02B1EE83E46169167578B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		210B6847F0CD4BE3A3F172D8 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		2444D49E8180482798B1B859 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		245E6A4C694146B1AF74F0CD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		2593CE1C058C4A3383C9AB1B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		28D08A96A0534A1E8DB7973A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		2966D2FA19C14AECA354A4F0 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		29C873A60C1544559A6F6B50 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		29F517B67B044F6187F6116C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		2A5CF28DF8D8462284492029 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		2AD532F4D2094823B0C1C628 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/src,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		2B22198D58E94384AB53AA04 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		2B4E5E2A3C9443AC9741D287 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		2DDE2B87A5434B1693D4C21D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		2E453CB7796A407F8D46DC5A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		2F533C31E40D48D6976C7D14 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		2F62F1C1532544139984F835 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		31C15F12B8EC4B5888E358B1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		32D450E439EB45E3929A4788 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		33325E8BFE4E4B4C82838AAA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		33BDCACFB3EA47DA9819CB33 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		39468FF5CF7743C7960A5023 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		39ED4E6241C14CF3B2118D14 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		3C014FD2629D4A968C5E2CFA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		3D93B088187247A3B75033B6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		40427E6F175545898B548E34 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		4083C53339F34EA1A7374C29 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		40BAD29E546743539C460A0B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		415863A06AC44C22AB33E208 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		429D67B7519842569364E8CF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		44458BAB6975419AB8361324 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		460D5A869B304F249441342D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		48653D8F187243EBA5E08A7C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		49FDF73594864583A6AD411D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		4A550FE29DB74D59A0C33DD5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		4B7B83473A804C8A8BB66CBE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		4EC445FA2B554744A0DA7AD0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		50999949F0C4465BADC14BC3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		523FD71BDAA149A18074A2A6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		524C00B450204A2186340531 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		52D51BE92A5A44C9B0817B95 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		52D6645CB1904E17B8B3AF89 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		52FC773B8BA641A9AD50C728 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		545C2142B3CC40089ED05F7B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		5493D4A3BE0B4495A080FED6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		54E9EA5AE9DE4363AB928257 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		55E85CB940EA44BAA1B201BE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		5729F9A06FC24208A657CD3C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		576E5D9845EC45F3B6E045FB /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		5AE70D6A87CA45C19E0DDC2D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		5B437BC89A42481C93746043 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		5CBD9C1C4AFC4D68B28D8C2D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		5D6851A4B9CA45E78731A45C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		607A6DF7BDD345819B277483 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		6328265D6BC941D387A4DA08 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		643FA330F13C462CBFB4E442 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		6442D94CF43D45F8981D64B7 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		64AEC973303C435F8D499CF3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		666876303D2B4B05A46DB31B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		69B9F9C434484563A3267F89 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		6A15ACD61F254CA8BA612CB5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		6A1EF464D0F24AD3AE28CBA9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		6B13A1238BDA475883A1AADD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		6CD58DB091814A5881E903D2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		6E97E1CCE6C0416CAC817C74 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		6F58FCFE5B8844E0B7DDC256 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		710E23DEBBB74C3F925C45C5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		71956DDAFAE84EFC8A2D2383 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		7507B57DED0249E9AA980476 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		781D36FDE1E04E05B104DCC6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		799F3620219D41FA80CA5D34 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		79C5D97A8C0D43539B4B7E3D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Immediate;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		7A561F200B50412CBB9C27C1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		7F75800820544DA1AB3CAC70 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		81BFEA8371ED4A5187CEED2D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		84AD37DFDA5F4C9687BFA1DE /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		84D2B67D52564DF0BF6F8730 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		8964C38731FA4E29A3879C6B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		89DA9957AFE14E64B77608CF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		8A7BB406D6824E73BC0B90AB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		8BD95CE57EDE45A88B91A2D2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		8C3AC2591B2E43ABA009DCC4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		8D0CCF2D69A145C9AD67A65B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		8DF7FD62D4444D67B6D2279E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TextureLoader;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		8EB9999F2FC64C5CA3F4426B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		9285ED52DDAB4CEA9B72EF6D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		929D25C30B6D47EB870A786B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		98D71FE22FB047F5814D13B1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		9A87321CEB154568B59B71E3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		9B2BEE23996D4834BFE2C097 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		9B32A6CCCA1D4A6EBFBEFDB4 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		9C5C227524BD4F93B89B9BD7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		9F469A5147004C0CA28F455D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A18308A368E94C9AA71BEBCA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A3BDE6AE262C418C982C3A8D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWApp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A66870620AB347BFB9954480 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A719A940068C4F96A33BEE52 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk;
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/build;
			};
			name = Debug;
		};
		A78548190FD74B9E871062EA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Mouse;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A7CF7032CA0A4D55B69A2848 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		AAA986FE24AC4DBAADAB9C1C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		AADD29DECD6A4E82BEEFCCAC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleColorBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		AB7173C4EC384FB28A57FA8D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		AD551DB5B52E436FB3AB177F /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		B124684BEF2746A396538B21 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Keyboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		B1C7871757FB4201A551EEBD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Model;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		B2FC9D82F8BF41B59F897570 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		B59CEFD7905743A1817EB69F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		B6A4FAB2B48948FEB29E7E9D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		BCCDC1D1807C4CABB48A0887 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk;
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/build;
			};
			name = RelWithDebInfo;
		};
		BD01717990A945DC957B0C28 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		BE4FD6B1D58D4383A9C52DE0 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		C10F8CF3FF904E3781AA6657 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		C1787F1B59BD4904BAC10F04 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		C2FF65737A0A4C5AB3C9882C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Cube;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		C4EBDA3B3CBA4EB2862A8691 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ImmediateTriangles;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		C524B5552E354288933AC0DB /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		C99F3FFD4E884B2E881575E4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		CCEAD075584F45FFA84FBD8D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		CDFFFB4BEFBB45D286210E67 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		CE9F8DBE7C5840C8BD2A68E1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		D140719ADC9F4F3681A0BF00 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		D1D45316031B4640B4465A54 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		D49F866BB2F04C598AC7AD9B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/src,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		D64D40C88D6643C993AC0575 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/src,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = "     -Wall";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		D7E1B2B1057647DD8920D05C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		D7EFD8309F254344978222EC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		DFF993E58A54479AAF0F7380 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		E0C6B3E399E04C4ABC3A9513 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Extensions;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		E0E06E7EE1E445F4BBE89601 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		E21DC0C946FE461EBC291DB2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleBuffer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		E426CF0FACA8488C8B51072C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		E5FDB736CD744EBAA01631FB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		E62B7ED5ADD4431691527A29 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ModelView;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		E829C46455714DD180392886 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = TriangleOrtho;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		E9471DE48C7B4E3F95E3F27F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		EA11C1F7162643D6BC832B07 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		EC7638035A064F6E9C65EA21 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Texture;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		ED66DCEBBB19439B82F82AD6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		EE24BACEDE6A49EC93EE5A11 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Version;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		EF8F774EF8914D4FA17F44D8 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		EFC94786CEA94119998065D7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Lighting;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		EFEC6E44B4184147ACABC7BB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk;
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/build;
			};
			name = Release;
		};
		F0205B196C5A4FC288ABE515 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = " -I/usr/local/include     ";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		F2493251843D4612A713A683 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		F283F4604C8A43F6B66787ED /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		F530F7C99BC8481D9EA3D972 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		F77087ADA2444CC1B02E582D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DynamicMesh;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		F7B9A374118343FF8074C9DB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		F8D395FCD1324AE9AB830E62 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GLFWwindow;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		F91E28D7ABF642BABC506841 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/src,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		FA9CE4CC62B94124BADE9AA1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		FD6FB7772EE147C0BE59AFFD /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = "/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw";
				LIBRARY_SEARCH_PATHS = (
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode,
					"/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw,
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-I/usr/local/include",
					"-DNDEBUG",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					/usr/local/lib/libGLEW.dylib,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LightingAndTexture;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		FEEFDD0130C74D658B0A71E1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		0C5B29F60CED4F3589D8CEB5 /* Build configuration list for PBXNativeTarget "clipboard" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4EC445FA2B554744A0DA7AD0 /* Debug */,
				7F75800820544DA1AB3CAC70 /* Release */,
				B59CEFD7905743A1817EB69F /* MinSizeRel */,
				C524B5552E354288933AC0DB /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1409F34C7A144663AA185CEF /* Build configuration list for PBXNativeTarget "Version" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				52D6645CB1904E17B8B3AF89 /* Debug */,
				44458BAB6975419AB8361324 /* Release */,
				EE24BACEDE6A49EC93EE5A11 /* MinSizeRel */,
				9F469A5147004C0CA28F455D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1E1A207F534D45C7A8A14BC6 /* Build configuration list for PBXNativeTarget "Immediate" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2B22198D58E94384AB53AA04 /* Debug */,
				79C5D97A8C0D43539B4B7E3D /* Release */,
				5729F9A06FC24208A657CD3C /* MinSizeRel */,
				6CD58DB091814A5881E903D2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24EF0364F1D04EFB885AABA1 /* Build configuration list for PBXNativeTarget "sharing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B2FC9D82F8BF41B59F897570 /* Debug */,
				1DA02B1EE83E46169167578B /* Release */,
				9B32A6CCCA1D4A6EBFBEFDB4 /* MinSizeRel */,
				2F62F1C1532544139984F835 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		34594DABE74A4B11B3778A25 /* Build configuration list for PBXNativeTarget "DynamicMesh" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8BD95CE57EDE45A88B91A2D2 /* Debug */,
				E5FDB736CD744EBAA01631FB /* Release */,
				49FDF73594864583A6AD411D /* MinSizeRel */,
				F77087ADA2444CC1B02E582D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		393AD31139524F93BA85DE3B /* Build configuration list for PBXNativeTarget "fsaa" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9B2BEE23996D4834BFE2C097 /* Debug */,
				545C2142B3CC40089ED05F7B /* Release */,
				39468FF5CF7743C7960A5023 /* MinSizeRel */,
				13D8E47E8D9C4A5E84C3D75B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3E83A8094EC04D979C315FA0 /* Build configuration list for PBXNativeTarget "defaults" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6A1EF464D0F24AD3AE28CBA9 /* Debug */,
				5B437BC89A42481C93746043 /* Release */,
				AB7173C4EC384FB28A57FA8D /* MinSizeRel */,
				2966D2FA19C14AECA354A4F0 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3F73924A69B64DF4BF471D8B /* Build configuration list for PBXNativeTarget "windows" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4B7B83473A804C8A8BB66CBE /* Debug */,
				F2493251843D4612A713A683 /* Release */,
				31C15F12B8EC4B5888E358B1 /* MinSizeRel */,
				64AEC973303C435F8D499CF3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		44A7F74C218048E6B459784E /* Build configuration list for PBXNativeTarget "iconify" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				55E85CB940EA44BAA1B201BE /* Debug */,
				781D36FDE1E04E05B104DCC6 /* Release */,
				9C5C227524BD4F93B89B9BD7 /* MinSizeRel */,
				33BDCACFB3EA47DA9819CB33 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5414886560DB462CB3A6268A /* Build configuration list for PBXNativeTarget "Extensions" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6B13A1238BDA475883A1AADD /* Debug */,
				E0C6B3E399E04C4ABC3A9513 /* Release */,
				D140719ADC9F4F3681A0BF00 /* MinSizeRel */,
				29F517B67B044F6187F6116C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		57C9E3982892413C8C2AC188 /* Build configuration list for PBXNativeTarget "GLFWApp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				19A4EBF6EBCA4A24B9C13F15 /* Debug */,
				52D51BE92A5A44C9B0817B95 /* Release */,
				81BFEA8371ED4A5187CEED2D /* MinSizeRel */,
				A3BDE6AE262C418C982C3A8D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5A63ACFAE36644618792A40A /* Build configuration list for PBXNativeTarget "title" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				71956DDAFAE84EFC8A2D2383 /* Debug */,
				89DA9957AFE14E64B77608CF /* Release */,
				2593CE1C058C4A3383C9AB1B /* MinSizeRel */,
				84AD37DFDA5F4C9687BFA1DE /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6395D6151AEC497EBB430111 /* Build configuration list for PBXNativeTarget "glfw" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D64D40C88D6643C993AC0575 /* Debug */,
				D49F866BB2F04C598AC7AD9B /* Release */,
				F91E28D7ABF642BABC506841 /* MinSizeRel */,
				2AD532F4D2094823B0C1C628 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		670444B51FB842969BAB2D23 /* Build configuration list for PBXNativeTarget "TextureLoader" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29C873A60C1544559A6F6B50 /* Debug */,
				8DF7FD62D4444D67B6D2279E /* Release */,
				2A5CF28DF8D8462284492029 /* MinSizeRel */,
				429D67B7519842569364E8CF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		687F18E77F76469BBF15D9F7 /* Build configuration list for PBXNativeTarget "TriangleOrtho" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				50999949F0C4465BADC14BC3 /* Debug */,
				E829C46455714DD180392886 /* Release */,
				8964C38731FA4E29A3879C6B /* MinSizeRel */,
				6442D94CF43D45F8981D64B7 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		72F2628CCF3B44829C342B84 /* Build configuration list for PBXNativeTarget "tearing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D7EFD8309F254344978222EC /* Debug */,
				C99F3FFD4E884B2E881575E4 /* Release */,
				40BAD29E546743539C460A0B /* MinSizeRel */,
				39ED4E6241C14CF3B2118D14 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		782E336770FD4879BA405F2C /* Build configuration list for PBXNativeTarget "Mouse" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				07AE5C1E253640B298051BCF /* Debug */,
				8A7BB406D6824E73BC0B90AB /* Release */,
				666876303D2B4B05A46DB31B /* MinSizeRel */,
				A78548190FD74B9E871062EA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8E0F9A85B3314C189293FBB8 /* Build configuration list for PBXProject "UaR_OpenGL" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A719A940068C4F96A33BEE52 /* Debug */,
				EFEC6E44B4184147ACABC7BB /* Release */,
				032EEB104F2C458A9F675335 /* MinSizeRel */,
				BCCDC1D1807C4CABB48A0887 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8EABF21273B849679AF3BDDE /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				54E9EA5AE9DE4363AB928257 /* Debug */,
				ED66DCEBBB19439B82F82AD6 /* Release */,
				40427E6F175545898B548E34 /* MinSizeRel */,
				14276586CD8A45F7A5440234 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		914D752CA36F4C32BDF4F6B4 /* Build configuration list for PBXNativeTarget "reopen" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4083C53339F34EA1A7374C29 /* Debug */,
				F283F4604C8A43F6B66787ED /* Release */,
				015F52C5D26944468E85F119 /* MinSizeRel */,
				5AE70D6A87CA45C19E0DDC2D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9E927C9AEEDE441592DF695F /* Build configuration list for PBXNativeTarget "TriangleBuffer" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DFF993E58A54479AAF0F7380 /* Debug */,
				E21DC0C946FE461EBC291DB2 /* Release */,
				BE4FD6B1D58D4383A9C52DE0 /* MinSizeRel */,
				A18308A368E94C9AA71BEBCA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A266456C828644B2AF41DB23 /* Build configuration list for PBXNativeTarget "events" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				643FA330F13C462CBFB4E442 /* Debug */,
				CDFFFB4BEFBB45D286210E67 /* Release */,
				6328265D6BC941D387A4DA08 /* MinSizeRel */,
				33325E8BFE4E4B4C82838AAA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A6BDA0CA7DE84DAFBBD8A909 /* Build configuration list for PBXNativeTarget "modes" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0235F68EC1CB4D6490956C32 /* Debug */,
				BD01717990A945DC957B0C28 /* Release */,
				EA11C1F7162643D6BC832B07 /* MinSizeRel */,
				8C3AC2591B2E43ABA009DCC4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B2A434C292FD483FB8E16153 /* Build configuration list for PBXNativeTarget "Cube" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				98D71FE22FB047F5814D13B1 /* Debug */,
				C2FF65737A0A4C5AB3C9882C /* Release */,
				C1787F1B59BD4904BAC10F04 /* MinSizeRel */,
				AD551DB5B52E436FB3AB177F /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B62C8FBCCCBA4CC0925BAD3B /* Build configuration list for PBXNativeTarget "Lighting" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EFC94786CEA94119998065D7 /* Debug */,
				69B9F9C434484563A3267F89 /* Release */,
				3D93B088187247A3B75033B6 /* MinSizeRel */,
				48653D8F187243EBA5E08A7C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BA8D208BC72D4AF4B1BD9319 /* Build configuration list for PBXNativeTarget "threads" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E0E06E7EE1E445F4BBE89601 /* Debug */,
				6E97E1CCE6C0416CAC817C74 /* Release */,
				710E23DEBBB74C3F925C45C5 /* MinSizeRel */,
				3C014FD2629D4A968C5E2CFA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BC62A9832CB646D085BC56ED /* Build configuration list for PBXAggregateTarget "uninstall" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				799F3620219D41FA80CA5D34 /* Debug */,
				C10F8CF3FF904E3781AA6657 /* Release */,
				06DCD5E6EBAC4DC6AEA1AA9E /* MinSizeRel */,
				EF8F774EF8914D4FA17F44D8 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C05AE2DFC3754D43846BFBB4 /* Build configuration list for PBXNativeTarget "Keyboard" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				84D2B67D52564DF0BF6F8730 /* Debug */,
				09977085832040E687692CE6 /* Release */,
				B124684BEF2746A396538B21 /* MinSizeRel */,
				8EB9999F2FC64C5CA3F4426B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CFAE38EC039A47398BE983C2 /* Build configuration list for PBXNativeTarget "GLFWwindow" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2F533C31E40D48D6976C7D14 /* Debug */,
				F8D395FCD1324AE9AB830E62 /* Release */,
				9285ED52DDAB4CEA9B72EF6D /* MinSizeRel */,
				9A87321CEB154568B59B71E3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D74FA98B9317486586ABDD23 /* Build configuration list for PBXNativeTarget "Texture" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E426CF0FACA8488C8B51072C /* Debug */,
				EC7638035A064F6E9C65EA21 /* Release */,
				CCEAD075584F45FFA84FBD8D /* MinSizeRel */,
				A66870620AB347BFB9954480 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D8F92662A509427EAF8AC99C /* Build configuration list for PBXNativeTarget "ModelView" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D1D45316031B4640B4465A54 /* Debug */,
				CE9F8DBE7C5840C8BD2A68E1 /* Release */,
				E62B7ED5ADD4431691527A29 /* MinSizeRel */,
				5CBD9C1C4AFC4D68B28D8C2D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DC26520C7430449DA6994FCF /* Build configuration list for PBXNativeTarget "gamma" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				245E6A4C694146B1AF74F0CD /* Debug */,
				101DF0FF3DCC4910BF48DCDF /* Release */,
				156979864F014AB3824E7739 /* MinSizeRel */,
				2444D49E8180482798B1B859 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DDE596C1B84C47F5973AF6F2 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6F58FCFE5B8844E0B7DDC256 /* Debug */,
				F7B9A374118343FF8074C9DB /* Release */,
				D7E1B2B1057647DD8920D05C /* MinSizeRel */,
				7A561F200B50412CBB9C27C1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E06EC8D832F94681A65577B8 /* Build configuration list for PBXNativeTarget "peter" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				460D5A869B304F249441342D /* Debug */,
				6A15ACD61F254CA8BA612CB5 /* Release */,
				28D08A96A0534A1E8DB7973A /* MinSizeRel */,
				02B2869B2D184A6BA74DC0CA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E305D58BA58649B6ABA5B91F /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FA9CE4CC62B94124BADE9AA1 /* Debug */,
				929D25C30B6D47EB870A786B /* Release */,
				B6A4FAB2B48948FEB29E7E9D /* MinSizeRel */,
				607A6DF7BDD345819B277483 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E3B3AC13D52A49E39FC7C451 /* Build configuration list for PBXNativeTarget "Model" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AAA986FE24AC4DBAADAB9C1C /* Debug */,
				5D6851A4B9CA45E78731A45C /* Release */,
				2DDE2B87A5434B1693D4C21D /* MinSizeRel */,
				B1C7871757FB4201A551EEBD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E50EDACC51EC41CCA4F1970A /* Build configuration list for PBXNativeTarget "TriangleColorBuffer" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AADD29DECD6A4E82BEEFCCAC /* Debug */,
				2B4E5E2A3C9443AC9741D287 /* Release */,
				019A1E80A1494795857D5928 /* MinSizeRel */,
				8D0CCF2D69A145C9AD67A65B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E58B1BD96C6249E5BDB11747 /* Build configuration list for PBXNativeTarget "accuracy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FEEFDD0130C74D658B0A71E1 /* Debug */,
				A7CF7032CA0A4D55B69A2848 /* Release */,
				0D6147BFF03F4D13A178EE13 /* MinSizeRel */,
				576E5D9845EC45F3B6E045FB /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E59272588DB24AE584F7B62D /* Build configuration list for PBXNativeTarget "joysticks" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				524C00B450204A2186340531 /* Debug */,
				00ED070FC0CE4181B25E8AA1 /* Release */,
				210B6847F0CD4BE3A3F172D8 /* MinSizeRel */,
				52FC773B8BA641A9AD50C728 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EE0BA2105C174C3CBC863B7F /* Build configuration list for PBXNativeTarget "LightingAndTexture" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F0205B196C5A4FC288ABE515 /* Debug */,
				FD6FB7772EE147C0BE59AFFD /* Release */,
				2E453CB7796A407F8D46DC5A /* MinSizeRel */,
				F530F7C99BC8481D9EA3D972 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F235EF130B2343C9A8A3348D /* Build configuration list for PBXNativeTarget "ImmediateTriangles" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5493D4A3BE0B4495A080FED6 /* Debug */,
				C4EBDA3B3CBA4EB2862A8691 /* Release */,
				7507B57DED0249E9AA980476 /* MinSizeRel */,
				415863A06AC44C22AB33E208 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F39CC8D675F241FBBD24F357 /* Build configuration list for PBXNativeTarget "glfwinfo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				523FD71BDAA149A18074A2A6 /* Debug */,
				32D450E439EB45E3929A4788 /* Release */,
				E9471DE48C7B4E3F95E3F27F /* MinSizeRel */,
				4A550FE29DB74D59A0C33DD5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 5F244C22DB7F4AC8BBE81452 /* Project object */;
}
