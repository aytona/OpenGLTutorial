// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		3A151A1A7592416485A18122 /* uninstall */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 4711FAB1D81941D5AF2759F5 /* Build configuration list for PBXAggregateTarget "uninstall" */;
			buildPhases = (
				4A340B9F6F764BF9B2EFF7D3 /* CMake Rules */,
			);
			dependencies = (
			);
			name = uninstall;
			productName = uninstall;
		};
		6F1F21A2496A4748AA733948 /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 3FFA65A327F541F8BF1728E5 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				458371B46E0847A79AA9CF46 /* CMake Rules */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		8D3123BE21E34D9588EACCA5 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = B9A0301631A443939213B4EA /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				1CC0C59F74FF439CBC46D03E /* CMake Rules */,
			);
			dependencies = (
				C3C5A93A7CB542728C981F6C /* PBXTargetDependency */,
				B02E7134F693406DB182F648 /* PBXTargetDependency */,
				0D5F7338CBD7446CA5D83C58 /* PBXTargetDependency */,
				665AD6C62A7545DBB4050E69 /* PBXTargetDependency */,
				28412BF892374ED7A390BCBF /* PBXTargetDependency */,
				7751FBFE0B88472F83B29E79 /* PBXTargetDependency */,
				52B78E6B23654E8484011C2D /* PBXTargetDependency */,
				C62C301CC3454A1896DBA482 /* PBXTargetDependency */,
				C154CF2AAC7B46A093D9225E /* PBXTargetDependency */,
				BD3B57331F9040BB817E9EAF /* PBXTargetDependency */,
				0D8A7E0C9BBE409BB36C39E3 /* PBXTargetDependency */,
				D351765DEED348C2B19604DD /* PBXTargetDependency */,
				0E1FB8A8526049058E337E45 /* PBXTargetDependency */,
				1CDD3A6D355243019218B9FD /* PBXTargetDependency */,
				38A69A013F9B4BE19E845699 /* PBXTargetDependency */,
				0B81CDF3CDB74ECEB7B9C9A6 /* PBXTargetDependency */,
				F38322F0FFE348AFBC0C8083 /* PBXTargetDependency */,
				0B1444E4CB9644E3B11D51E0 /* PBXTargetDependency */,
				EF4D0AFDB6EF45CEAB505E58 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		C7B8107C32964FA68B5EC570 /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 9A0709128BC246A8895CDA72 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				8EB739A272FB40B4887E409D /* CMake PostBuild Rules */,
			);
			dependencies = (
				2F0DE6D301474E1E90FC8B08 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		12B85B3286CD467E82A24F5F /* defaults.c in Sources */ = {isa = PBXBuildFile; fileRef = F056A05EA8314FB0836BA682 /* defaults.c */; settings = {COMPILER_FLAGS = ""; }; };
		157ACF8D39D74FF489201F63 /* nsgl_context.m in Sources */ = {isa = PBXBuildFile; fileRef = 58FF0CB06B1B46DBBF4D070E /* nsgl_context.m */; settings = {COMPILER_FLAGS = ""; }; };
		1B173AD8D7494F95B6CB713C /* title.c in Sources */ = {isa = PBXBuildFile; fileRef = BCD37CF13912470DB4CA45F3 /* title.c */; settings = {COMPILER_FLAGS = ""; }; };
		1E1E816C36C1405290A152F4 /* gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = DE6BADF5951E46C59CF5C98F /* gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		25F11E08C6294CADBCC417A9 /* peter.c in Sources */ = {isa = PBXBuildFile; fileRef = 3C67AC9A99CC48D7A1A5D6AF /* peter.c */; settings = {COMPILER_FLAGS = ""; }; };
		2ADE4680781C412084E7114E /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = ADB2BCD3D38D4003A1CB5C3C /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		2FC4A8BDCF0941C7A1391F14 /* events.c in Sources */ = {isa = PBXBuildFile; fileRef = E7D3A689724A49DC92E9A569 /* events.c */; settings = {COMPILER_FLAGS = ""; }; };
		2FDB88F3011A47D28AC3181A /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = C1630D2CE29E4DF0839B8310 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		331AB309F0A34C289A8D6C57 /* threads.c in Sources */ = {isa = PBXBuildFile; fileRef = 6A37B2CE3BEC4A10A07DF10A /* threads.c */; settings = {COMPILER_FLAGS = ""; }; };
		354DE5216BD5434698BE7967 /* clipboard.c in Sources */ = {isa = PBXBuildFile; fileRef = 1ABFE525E3D1410BB01C94F5 /* clipboard.c */; settings = {COMPILER_FLAGS = ""; }; };
		3CBFECC6A9BA4C45B4C5F337 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = D0A32BDCD71E40168B040B06 /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		3DC750D92A4345DDBEA10990 /* cocoa_clipboard.m in Sources */ = {isa = PBXBuildFile; fileRef = 055A2B8EDCE44E259C8EDB49 /* cocoa_clipboard.m */; settings = {COMPILER_FLAGS = ""; }; };
		440797FD6F4D4E37835CCFE4 /* tinycthread.c in Sources */ = {isa = PBXBuildFile; fileRef = 589610B40746428E9D3F7D9C /* tinycthread.c */; settings = {COMPILER_FLAGS = ""; }; };
		502497F53F1746CCB12A4705 /* window.c in Sources */ = {isa = PBXBuildFile; fileRef = F7ABBDF43D0247A3BA972B22 /* window.c */; settings = {COMPILER_FLAGS = ""; }; };
		6C228173492D4AF28DCBC3D3 /* windows.c in Sources */ = {isa = PBXBuildFile; fileRef = 0B952F884D974FB1851A7EE7 /* windows.c */; settings = {COMPILER_FLAGS = ""; }; };
		7347028A417B4DF289EA9201 /* cocoa_joystick.m in Sources */ = {isa = PBXBuildFile; fileRef = 601CF47817DA4F0395C75030 /* cocoa_joystick.m */; settings = {COMPILER_FLAGS = ""; }; };
		74ADA7F986CF4BA6B55D0B0E /* cocoa_time.c in Sources */ = {isa = PBXBuildFile; fileRef = 5C4F8D5CED97462291A372BB /* cocoa_time.c */; settings = {COMPILER_FLAGS = ""; }; };
		7FA1229E70AE4711BC818C24 /* input.c in Sources */ = {isa = PBXBuildFile; fileRef = A1C57A65C1E54467858263E3 /* input.c */; settings = {COMPILER_FLAGS = ""; }; };
		86D705B578FB49E6B4805C8B /* glfwinfo.c in Sources */ = {isa = PBXBuildFile; fileRef = 789EE33D84A44884845AEE06 /* glfwinfo.c */; settings = {COMPILER_FLAGS = ""; }; };
		8C1F00BF3C6143C486929AB1 /* clipboard.c in Sources */ = {isa = PBXBuildFile; fileRef = BBAB96EEDBE94D909649702C /* clipboard.c */; settings = {COMPILER_FLAGS = ""; }; };
		98DBA69B1C869B0400C677D5 /* Opengl_Version.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 98DBA69A1C869ABB00C677D5 /* Opengl_Version.cpp */; };
		9A5D8C2859E24D95B71BD92D /* joystick.c in Sources */ = {isa = PBXBuildFile; fileRef = 9F45A3FC7DA64CD38AC16442 /* joystick.c */; settings = {COMPILER_FLAGS = ""; }; };
		9B43CC8F7EAF40D8B0BEB813 /* fsaa.c in Sources */ = {isa = PBXBuildFile; fileRef = E9358C1BD6624BC9B45117C5 /* fsaa.c */; settings = {COMPILER_FLAGS = ""; }; };
		9EDB21AA18E141A59B5D1487 /* joysticks.c in Sources */ = {isa = PBXBuildFile; fileRef = 945345BF2D8D49E5B94B7AC5 /* joysticks.c */; settings = {COMPILER_FLAGS = ""; }; };
		9F3E49D415B24F838A742E9E /* cocoa_init.m in Sources */ = {isa = PBXBuildFile; fileRef = 0DE34EC1FBF344DC89374814 /* cocoa_init.m */; settings = {COMPILER_FLAGS = ""; }; };
		A4EEA72E938C4ECEA58F59F9 /* accuracy.c in Sources */ = {isa = PBXBuildFile; fileRef = 0BA331DCA9AF4DD8A90210F7 /* accuracy.c */; settings = {COMPILER_FLAGS = ""; }; };
		A688E230C6944812A3A8CB64 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = E8545181E3364EC2A5C9213F /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		AE204C9165454EAC8DF14D0B /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 1E35D7AE278145C5BB995D0B /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		B2534D6082444A5CB1FFE21C /* tearing.c in Sources */ = {isa = PBXBuildFile; fileRef = 4C8489C392BC4B8C9B63F724 /* tearing.c */; settings = {COMPILER_FLAGS = ""; }; };
		B730C9F37DCE40BCA5177110 /* cocoa_window.m in Sources */ = {isa = PBXBuildFile; fileRef = 2CC7D5B5448B4153B61F6924 /* cocoa_window.m */; settings = {COMPILER_FLAGS = ""; }; };
		B846CCC557814096B479FB8B /* time.c in Sources */ = {isa = PBXBuildFile; fileRef = F64454590A604863A2EF9EFB /* time.c */; settings = {COMPILER_FLAGS = ""; }; };
		BF8C8E4E4AA9419CA89AEB44 /* gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = DBCDF9D83BDD42089DE77385 /* gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		CAEE9678D59E4A5E99492683 /* monitor.c in Sources */ = {isa = PBXBuildFile; fileRef = 3ADB65DF8A524087AFB3EDA0 /* monitor.c */; settings = {COMPILER_FLAGS = ""; }; };
		CE134754D5C74930848DE034 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = 93A45F83034A46EBB24550BB /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		CE7B7F4042894D29B07318FB /* context.c in Sources */ = {isa = PBXBuildFile; fileRef = BC1E654B149342D09D1D6B12 /* context.c */; settings = {COMPILER_FLAGS = ""; }; };
		D2D45FC447A94E16A5A07F76 /* modes.c in Sources */ = {isa = PBXBuildFile; fileRef = CA49C9E361A84A94A9205994 /* modes.c */; settings = {COMPILER_FLAGS = ""; }; };
		D3342057BF7546C581FF70B6 /* reopen.c in Sources */ = {isa = PBXBuildFile; fileRef = FF1AB60DC2084686A9223F24 /* reopen.c */; settings = {COMPILER_FLAGS = ""; }; };
		E27E5E801DD143B48BEE85C9 /* getopt.c in Sources */ = {isa = PBXBuildFile; fileRef = B614E2A2C4F7470E92C53E2F /* getopt.c */; settings = {COMPILER_FLAGS = ""; }; };
		E63DA1169AA541779C650416 /* iconify.c in Sources */ = {isa = PBXBuildFile; fileRef = A277B1841CCE466E9CEA1B80 /* iconify.c */; settings = {COMPILER_FLAGS = ""; }; };
		EB6E4AAAF297446C8760A4F3 /* cocoa_monitor.m in Sources */ = {isa = PBXBuildFile; fileRef = C4968CED62274D6FB0756E78 /* cocoa_monitor.m */; settings = {COMPILER_FLAGS = ""; }; };
		EF27CB8FAC934481B2A34ED6 /* sharing.c in Sources */ = {isa = PBXBuildFile; fileRef = C0947C50D29C42C8B602812B /* sharing.c */; settings = {COMPILER_FLAGS = ""; }; };
		F0499E15BCF5484C9EF0800C /* cocoa_gamma.c in Sources */ = {isa = PBXBuildFile; fileRef = 5DBB11CEF2014AEF9662CAB6 /* cocoa_gamma.c */; settings = {COMPILER_FLAGS = ""; }; };
		F26731495E8049F7A74400E6 /* init.c in Sources */ = {isa = PBXBuildFile; fileRef = 6EE5AA8D040A4FFEAA0FA2D2 /* init.c */; settings = {COMPILER_FLAGS = ""; }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		072F12C8AEBE403FB3F0CC27 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BF1C3E2250AB4D9DBCF13EFD;
			remoteInfo = gamma;
		};
		08288C66FD964BD4A2D171E5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2B8E57A3FF6348869871E9DD;
			remoteInfo = threads;
		};
		085DDBBD80E54ED7AE6BD00A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0EF04DE4E6F34F52BC5B5523;
			remoteInfo = windows;
		};
		10BBDC98BDAD4F1281E15B7F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		21A5943C0D424D6880CFD8F9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		231799A1430F4202B82425E1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 34DF5061136B42A3979FAA93;
			remoteInfo = sharing;
		};
		244CEC60721D42D0BAC4F165 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		274FD55A08E7470B9250D33E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		2796C8C5189143F8A9644225 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		282DA73ACA874B7D800A9BB4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		2AB4ED5C52144DFD8AA6F4F3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		336A31F1D8F74BE08DBB299B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		3393CD5BB9604F2BB8A86435 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		39B6B5824DA74B788205FEEA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1239216D21544BDDA125A609;
			remoteInfo = title;
		};
		3B5BB07D8D424C0EB6F75931 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C4C3F15AEFF2412CB7E63417;
			remoteInfo = iconify;
		};
		3B5F7E170F184C0092C62583 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		43067DDB62844661BDF9B98A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		487D6A727C744022B7D89C98 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		4AFAFCD471494944B67C0326 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8D3123BE21E34D9588EACCA5;
			remoteInfo = ALL_BUILD;
		};
		527EF267E1FA4232AC7E40D6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		571CFC444C614B099A613B2B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 884FD0C21EBB4B1BAB268D06;
			remoteInfo = accuracy;
		};
		5E0CB66F2FB74AC5AF6EBFFB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		5E84B9177BC54C3991C28A25 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5E289C6187C648A1BCA0C764;
			remoteInfo = joysticks;
		};
		6598950C318F4E5885328075 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C419C7B6C436431D98505DF1;
			remoteInfo = peter;
		};
		678EED1579574FE397C0E3D2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		689432F78C0D41AEA68082F4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		68AAF01B99334465BD17A6AC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		6EF558AA98C746B8892A5DCB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		7868C1C967FE4466BCFF57ED /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		7D145CDE5F974D458E7964D4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		809CA010EDEE4B73A01682F2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 3CA6AD0ABCB34DDEAD177380;
			remoteInfo = clipboard;
		};
		835AFB3C3D544E4EA495B7D4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		88EAACA6720B4DFFAFDD5A8C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		907FFCFB47AD4A06A0958962 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 297FC99FE01644DFB923C86D;
			remoteInfo = modes;
		};
		951D819DCF7B4ACC93C0CD90 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		9B1CB49276BC43358072F1D0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 711DE5E8E8824C9987A18AD0;
			remoteInfo = glfwinfo;
		};
		A6F29638F68748D08FACB0E1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		A73269D4A9BF497D9621E3F7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		A86CBE7570C542FE8285FFCA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		ABC47E29384D4B5789D8AF71 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		B15860B5875B4455AE91B1B4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1D45713426554033AF07DBF6;
			remoteInfo = tearing;
		};
		CA85792F12274E84B6784F90 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		CB3464B9A3D146EC8B551AB3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2AAF3C3436AE412A8268750C;
			remoteInfo = defaults;
		};
		CF9CE0E070A140F5A6B598A2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		D25C269BA8704673B8085524 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		DC086280D49B4407B65B2046 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = EBAB4622B16F4C3BB45A4B0D;
			remoteInfo = fsaa;
		};
		E1B0C013C403471FB2BBBF17 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		E9DC1F5E775C43BBAE682142 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		EDB82860C1B146D49533B70D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		EE7B4CDF038240479A567285 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		EF92E53E8CF040FCB665614F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		F02722809D044C23A04ACEF9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8638A9A2FC0547188B19BA48;
			remoteInfo = events;
		};
		F42BB345D8B444FDBDB90218 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CF6070445AB04FD498EB775A;
			remoteInfo = glfw;
		};
		F6A13310ABCC4C46B9B1F3A1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F1F21A2496A4748AA733948;
			remoteInfo = ZERO_CHECK;
		};
		FB9A5081D79A4AF0825FF1AE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 30DDA88620EE494A8DF0633A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D45A0DEB306740BA8DF9E1D6;
			remoteInfo = reopen;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		009F70A531624AF7894BCA25 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		01D376AF310D4160ACCC5A53 /* threads.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = threads.app; sourceTree = BUILT_PRODUCTS_DIR; };
		055A2B8EDCE44E259C8EDB49 /* cocoa_clipboard.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_clipboard.m; path = glfw/src/cocoa_clipboard.m; sourceTree = SOURCE_ROOT; };
		0A89B13BCD554E14A6A0E452 /* joysticks */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = joysticks; sourceTree = BUILT_PRODUCTS_DIR; };
		0B952F884D974FB1851A7EE7 /* windows.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = windows.c; path = glfw/tests/windows.c; sourceTree = SOURCE_ROOT; };
		0BA331DCA9AF4DD8A90210F7 /* accuracy.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = accuracy.c; path = glfw/tests/accuracy.c; sourceTree = SOURCE_ROOT; };
		0DE34EC1FBF344DC89374814 /* cocoa_init.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_init.m; path = glfw/src/cocoa_init.m; sourceTree = SOURCE_ROOT; };
		0EF0E57FB83E4E70AEACE3D2 /* glfw_config.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw_config.h; path = xcode/glfw/src/glfw_config.h; sourceTree = SOURCE_ROOT; };
		0F9AD8ADDA2B4BB89381E967 /* events */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = events; sourceTree = BUILT_PRODUCTS_DIR; };
		1ABFE525E3D1410BB01C94F5 /* clipboard.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = clipboard.c; path = glfw/tests/clipboard.c; sourceTree = SOURCE_ROOT; };
		1C4EFE22C9394B9B924404DD /* reopen */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = reopen; sourceTree = BUILT_PRODUCTS_DIR; };
		1E35D7AE278145C5BB995D0B /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		2050BAD8A7C047D1813DC6A0 /* title.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = title.app; sourceTree = BUILT_PRODUCTS_DIR; };
		25CBA948C9E743D9ADCD3F81 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		26F136C1DBAF45BA93E92A64 /* glfwinfo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = glfwinfo; sourceTree = BUILT_PRODUCTS_DIR; };
		2CC7D5B5448B4153B61F6924 /* cocoa_window.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_window.m; path = glfw/src/cocoa_window.m; sourceTree = SOURCE_ROOT; };
		2F7CF4680F7A4623BEC6CAE0 /* clipboard */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = clipboard; sourceTree = BUILT_PRODUCTS_DIR; };
		317F87F3CBA04332861C7620 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		345EC49F6C994893AFE68642 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		35C884BEE7A34766855270A3 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		3ADB65DF8A524087AFB3EDA0 /* monitor.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = monitor.c; path = glfw/src/monitor.c; sourceTree = SOURCE_ROOT; };
		3C67AC9A99CC48D7A1A5D6AF /* peter.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = peter.c; path = glfw/tests/peter.c; sourceTree = SOURCE_ROOT; };
		40B3ED6693D744C9AAE92FAB /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		4C8489C392BC4B8C9B63F724 /* tearing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tearing.c; path = glfw/tests/tearing.c; sourceTree = SOURCE_ROOT; };
		529E58E6E6ED400CB1235252 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		53210BEA05654DB0B5373FE3 /* defaults */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = defaults; sourceTree = BUILT_PRODUCTS_DIR; };
		589610B40746428E9D3F7D9C /* tinycthread.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = tinycthread.c; path = glfw/deps/tinycthread.c; sourceTree = SOURCE_ROOT; };
		58FF0CB06B1B46DBBF4D070E /* nsgl_context.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = nsgl_context.m; path = glfw/src/nsgl_context.m; sourceTree = SOURCE_ROOT; };
		5C4F8D5CED97462291A372BB /* cocoa_time.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cocoa_time.c; path = glfw/src/cocoa_time.c; sourceTree = SOURCE_ROOT; };
		5CB908327F054374873A1AFA /* cocoa_platform.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = cocoa_platform.h; path = glfw/src/cocoa_platform.h; sourceTree = SOURCE_ROOT; };
		5DBB11CEF2014AEF9662CAB6 /* cocoa_gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cocoa_gamma.c; path = glfw/src/cocoa_gamma.c; sourceTree = SOURCE_ROOT; };
		601CF47817DA4F0395C75030 /* cocoa_joystick.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_joystick.m; path = glfw/src/cocoa_joystick.m; sourceTree = SOURCE_ROOT; };
		6469B94B9618458188FAE3CC /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6A37B2CE3BEC4A10A07DF10A /* threads.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = threads.c; path = glfw/tests/threads.c; sourceTree = SOURCE_ROOT; };
		6BD66C6C58654AEB834DEE2C /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		6EE5AA8D040A4FFEAA0FA2D2 /* init.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = init.c; path = glfw/src/init.c; sourceTree = SOURCE_ROOT; };
		6FB2A87781554C19B82C2683 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		701D487E7EA64581A8F8424F /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		708F610716AB401DAC4A7161 /* sharing.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = sharing.app; sourceTree = BUILT_PRODUCTS_DIR; };
		764B52CE2677417EBC45A8CE /* iconify */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = iconify; sourceTree = BUILT_PRODUCTS_DIR; };
		789EE33D84A44884845AEE06 /* glfwinfo.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = glfwinfo.c; path = glfw/tests/glfwinfo.c; sourceTree = SOURCE_ROOT; };
		8851BAFF9FA34A8982FAD608 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8A17FDBC90BE4FD6BAC8C910 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9294F9FF9FAA4B11B12E50F4 /* modes */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = modes; sourceTree = BUILT_PRODUCTS_DIR; };
		93A45F83034A46EBB24550BB /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		945345BF2D8D49E5B94B7AC5 /* joysticks.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = joysticks.c; path = glfw/tests/joysticks.c; sourceTree = SOURCE_ROOT; };
		958AC634BC5A4226ACE5DB01 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		98DBA69A1C869ABB00C677D5 /* Opengl_Version.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Opengl_Version.cpp; path = source/Opengl_Version.cpp; sourceTree = "<group>"; };
		996A32546C16405AB0AFCEFE /* tearing.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = tearing.app; sourceTree = BUILT_PRODUCTS_DIR; };
		9BC90D6AB01A4099A47AE53F /* tinycthread.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = tinycthread.h; path = glfw/deps/tinycthread.h; sourceTree = SOURCE_ROOT; };
		9F45A3FC7DA64CD38AC16442 /* joystick.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = joystick.c; path = glfw/src/joystick.c; sourceTree = SOURCE_ROOT; };
		A1C57A65C1E54467858263E3 /* input.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = input.c; path = glfw/src/input.c; sourceTree = SOURCE_ROOT; };
		A277B1841CCE466E9CEA1B80 /* iconify.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = iconify.c; path = glfw/tests/iconify.c; sourceTree = SOURCE_ROOT; };
		A91C3560FA8548C48D939280 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AB39ED5C33274412BBE69A47 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		ADB2BCD3D38D4003A1CB5C3C /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		AF9C085FA22042B181146C51 /* nsgl_platform.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = nsgl_platform.h; path = glfw/src/nsgl_platform.h; sourceTree = SOURCE_ROOT; };
		AFEF94213EFD403899A7FB16 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		B46DF47F99AA463A94084049 /* internal.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = internal.h; path = glfw/src/internal.h; sourceTree = SOURCE_ROOT; };
		B614E2A2C4F7470E92C53E2F /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		B7F3FC5DBC9A46C0B81BB566 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B99BE7BEB6804956A662E434 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BBAB96EEDBE94D909649702C /* clipboard.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = clipboard.c; path = glfw/src/clipboard.c; sourceTree = SOURCE_ROOT; };
		BBE9C6D414CB4DAF830B5782 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BC1E654B149342D09D1D6B12 /* context.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = context.c; path = glfw/src/context.c; sourceTree = SOURCE_ROOT; };
		BCD37CF13912470DB4CA45F3 /* title.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = title.c; path = glfw/tests/title.c; sourceTree = SOURCE_ROOT; };
		BEB4CC2D38BD49E5AA124A88 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BFFA9D661B8748F68EB865A7 /* fsaa */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = fsaa; sourceTree = BUILT_PRODUCTS_DIR; };
		C0947C50D29C42C8B602812B /* sharing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = sharing.c; path = glfw/tests/sharing.c; sourceTree = SOURCE_ROOT; };
		C0E89CBF0C034283B4608783 /* accuracy.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = accuracy.app; sourceTree = BUILT_PRODUCTS_DIR; };
		C11E763EC3CC49D39BB68773 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/title.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		C1630D2CE29E4DF0839B8310 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		C2CF0CE57E704749A3D9CA13 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		C4968CED62274D6FB0756E78 /* cocoa_monitor.m */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.objc; fileEncoding = 4; name = cocoa_monitor.m; path = glfw/src/cocoa_monitor.m; sourceTree = SOURCE_ROOT; };
		CA49C9E361A84A94A9205994 /* modes.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = modes.c; path = glfw/tests/modes.c; sourceTree = SOURCE_ROOT; };
		CC8140A75C2F4087B6BFB3ED /* libglfw3.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libglfw3.a; sourceTree = BUILT_PRODUCTS_DIR; };
		CF0374B5EDC94CEC8914FA85 /* gamma */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gamma; sourceTree = BUILT_PRODUCTS_DIR; };
		CF8ECCDD7E6249008425AEDA /* glfw3native.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw3native.h; path = glfw/include/GLFW/glfw3native.h; sourceTree = SOURCE_ROOT; };
		D0A32BDCD71E40168B040B06 /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		D0E3EEEC8E5E4A9A8371E5CC /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		D11D0BFB47644B3A8E1809F5 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		D12E979FB6A14720965198CF /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		D49AAD6550F644AEAC5A4FFE /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DBCDF9D83BDD42089DE77385 /* gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gamma.c; path = glfw/tests/gamma.c; sourceTree = SOURCE_ROOT; };
		DCA1531E87864282AAE89933 /* getopt.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = getopt.h; path = glfw/deps/getopt.h; sourceTree = SOURCE_ROOT; };
		DE6BADF5951E46C59CF5C98F /* gamma.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gamma.c; path = glfw/src/gamma.c; sourceTree = SOURCE_ROOT; };
		DEC7F7167FD841C09669AE78 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DEEE68C5877242609E1EFC47 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		E10F62E4C6D940A292363672 /* Info.plist */ = {isa = PBXFileReference; explicitFileType = sourcecode.text.plist; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist; sourceTree = SOURCE_ROOT; };
		E3B2477657AF4CEABBC1C0B6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E539C89799914E23A9E15203 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E72129A745C34B3F8630101D /* glfw3.h */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.h; fileEncoding = 4; name = glfw3.h; path = glfw/include/GLFW/glfw3.h; sourceTree = SOURCE_ROOT; };
		E77ED6A6A6F74878B104E58F /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = glfw/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E7D3A689724A49DC92E9A569 /* events.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = events.c; path = glfw/tests/events.c; sourceTree = SOURCE_ROOT; };
		E8545181E3364EC2A5C9213F /* getopt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = getopt.c; path = glfw/deps/getopt.c; sourceTree = SOURCE_ROOT; };
		E9358C1BD6624BC9B45117C5 /* fsaa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = fsaa.c; path = glfw/tests/fsaa.c; sourceTree = SOURCE_ROOT; };
		EB10B2C5757B4D48A08465D6 /* peter */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = peter; sourceTree = BUILT_PRODUCTS_DIR; };
		EDF5EC798CB044BB8C671E0C /* windows.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; path = windows.app; sourceTree = BUILT_PRODUCTS_DIR; };
		F056A05EA8314FB0836BA682 /* defaults.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = defaults.c; path = glfw/tests/defaults.c; sourceTree = SOURCE_ROOT; };
		F64454590A604863A2EF9EFB /* time.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = time.c; path = glfw/src/time.c; sourceTree = SOURCE_ROOT; };
		F7ABBDF43D0247A3BA972B22 /* window.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = window.c; path = glfw/src/window.c; sourceTree = SOURCE_ROOT; };
		FF1AB60DC2084686A9223F24 /* reopen.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = reopen.c; path = glfw/tests/reopen.c; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		059E52C77C744D39A3EB8637 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FF1AB60DC2084686A9223F24 /* reopen.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		079EFF0D5D634A9CA1F806FC /* Sources */ = {
			isa = PBXGroup;
			children = (
				9024110260604039BDD20887 /* ALL_BUILD */,
				09F4834106C04E83AD29D0AB /* ZERO_CHECK */,
				CF6EACCB0FA640BA921102D6 /* uninstall */,
				F7A200E9F05744528C42A2BD /* glfw */,
				339A7287FA044C0EA6C567F5 /* windows */,
				31B98CE764FA4B6C9AF77278 /* title */,
				F62B7FC83FD84EBC91023941 /* threads */,
				93B09885DBE8440EA56E31D8 /* tearing */,
				89C7F82D606E4728B5425423 /* sharing */,
				0AF7AC6A656345989DC24F88 /* peter */,
				1DF646FDD41F41CE9A3E53C4 /* glfwinfo */,
				E5C1D2154EE349E294F6D046 /* reopen */,
				47A7CB62D1084876B450B2AB /* clipboard */,
				EC3542911690483D848DAAFE /* modes */,
				A2500789FF6546E780DC9C89 /* joysticks */,
				27C4A54247AE41528D3F8030 /* events */,
				A23E534CC2FE445DAFD2BCC3 /* iconify */,
				5DFAADB140984704B65545F9 /* accuracy */,
				E2DEAC6E2AF342F3B2ABD990 /* gamma */,
				B4D6C41EDEFA45B69C4FE5B2 /* fsaa */,
				5CF5EA5DAFC447FB8ECEF031 /* defaults */,
				98DBA69A1C869ABB00C677D5 /* Opengl_Version.cpp */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		097EDE51BFD64DFCBC5784D3 /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		09F4834106C04E83AD29D0AB /* ZERO_CHECK */ = {
			isa = PBXGroup;
			children = (
				14A3FF57802F402AB1BD6BBC /* CMake Rules */,
				D11D0BFB47644B3A8E1809F5 /* CMakeLists.txt */,
			);
			name = ZERO_CHECK;
			sourceTree = "<group>";
		};
		0AF7AC6A656345989DC24F88 /* peter */ = {
			isa = PBXGroup;
			children = (
				B761F6EEB2C64B2FB9C40881 /* Source Files */,
				958AC634BC5A4226ACE5DB01 /* CMakeLists.txt */,
			);
			name = peter;
			sourceTree = "<group>";
		};
		14A3FF57802F402AB1BD6BBC /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		19658C53FDE64D589BD08705 /* Resources */ = {
			isa = PBXGroup;
			children = (
				D0E3EEEC8E5E4A9A8371E5CC /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		1B4F9CADAE8149088DFA9C47 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0B952F884D974FB1851A7EE7 /* windows.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1C78AF45FFDF4B6E845F21AF /* Header Files */ = {
			isa = PBXGroup;
			children = (
				701D487E7EA64581A8F8424F /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		1DF646FDD41F41CE9A3E53C4 /* glfwinfo */ = {
			isa = PBXGroup;
			children = (
				CC848B69CF234B9E8F2767A9 /* Source Files */,
				464127585BD04DA8995EE8F4 /* Header Files */,
				D49AAD6550F644AEAC5A4FFE /* CMakeLists.txt */,
			);
			name = glfwinfo;
			sourceTree = "<group>";
		};
		219BF3561AB941F3864556FE /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1E35D7AE278145C5BB995D0B /* getopt.c */,
				E7D3A689724A49DC92E9A569 /* events.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		27C4A54247AE41528D3F8030 /* events */ = {
			isa = PBXGroup;
			children = (
				219BF3561AB941F3864556FE /* Source Files */,
				1C78AF45FFDF4B6E845F21AF /* Header Files */,
				E539C89799914E23A9E15203 /* CMakeLists.txt */,
			);
			name = events;
			sourceTree = "<group>";
		};
		2AB7B5357B7649758AE0B005 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B614E2A2C4F7470E92C53E2F /* getopt.c */,
				CA49C9E361A84A94A9205994 /* modes.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		31B98CE764FA4B6C9AF77278 /* title */ = {
			isa = PBXGroup;
			children = (
				56F836DC9130451CB3930341 /* Source Files */,
				8B3C5BDC562F41A3A67E8349 /* Resources */,
				529E58E6E6ED400CB1235252 /* CMakeLists.txt */,
			);
			name = title;
			sourceTree = "<group>";
		};
		339A7287FA044C0EA6C567F5 /* windows */ = {
			isa = PBXGroup;
			children = (
				1B4F9CADAE8149088DFA9C47 /* Source Files */,
				503ABA7E4404464A814B1C45 /* Resources */,
				DEC7F7167FD841C09669AE78 /* CMakeLists.txt */,
			);
			name = windows;
			sourceTree = "<group>";
		};
		35BB4DA12CB64029BC302D45 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				6FB2A87781554C19B82C2683 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		37D74B1AFC104D96971D0D0E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D0A32BDCD71E40168B040B06 /* getopt.c */,
				E9358C1BD6624BC9B45117C5 /* fsaa.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		43CC60BF827E42289D9E8C7C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				ADB2BCD3D38D4003A1CB5C3C /* getopt.c */,
				1ABFE525E3D1410BB01C94F5 /* clipboard.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		464127585BD04DA8995EE8F4 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				DCA1531E87864282AAE89933 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		47A7CB62D1084876B450B2AB /* clipboard */ = {
			isa = PBXGroup;
			children = (
				43CC60BF827E42289D9E8C7C /* Source Files */,
				F21D95CD61C54BEE8C2B07C6 /* Header Files */,
				317F87F3CBA04332861C7620 /* CMakeLists.txt */,
			);
			name = clipboard;
			sourceTree = "<group>";
		};
		4809E43914FD4B73BA4602CC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C0947C50D29C42C8B602812B /* sharing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4A86090242834D6D93191073 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		503ABA7E4404464A814B1C45 /* Resources */ = {
			isa = PBXGroup;
			children = (
				AFEF94213EFD403899A7FB16 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		56F836DC9130451CB3930341 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BCD37CF13912470DB4CA45F3 /* title.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5CF5EA5DAFC447FB8ECEF031 /* defaults */ = {
			isa = PBXGroup;
			children = (
				7653924A7C284C3A91CB5765 /* Source Files */,
				E77ED6A6A6F74878B104E58F /* CMakeLists.txt */,
			);
			name = defaults;
			sourceTree = "<group>";
		};
		5DFAADB140984704B65545F9 /* accuracy */ = {
			isa = PBXGroup;
			children = (
				F043AFEA6F554B339542DCCA /* Source Files */,
				86C6F7AE05CD4FE498FB59B6 /* Resources */,
				AB39ED5C33274412BBE69A47 /* CMakeLists.txt */,
			);
			name = accuracy;
			sourceTree = "<group>";
		};
		61178CB4EA074E6EADB53F7A /* Header Files */ = {
			isa = PBXGroup;
			children = (
				E72129A745C34B3F8630101D /* glfw3.h */,
				CF8ECCDD7E6249008425AEDA /* glfw3native.h */,
				5CB908327F054374873A1AFA /* cocoa_platform.h */,
				B46DF47F99AA463A94084049 /* internal.h */,
				AF9C085FA22042B181146C51 /* nsgl_platform.h */,
				0EF0E57FB83E4E70AEACE3D2 /* glfw_config.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		66E32E4239A244FBBBBA1905 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				945345BF2D8D49E5B94B7AC5 /* joysticks.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7292CE0739394D8E921A2AA2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BBAB96EEDBE94D909649702C /* clipboard.c */,
				055A2B8EDCE44E259C8EDB49 /* cocoa_clipboard.m */,
				5DBB11CEF2014AEF9662CAB6 /* cocoa_gamma.c */,
				0DE34EC1FBF344DC89374814 /* cocoa_init.m */,
				601CF47817DA4F0395C75030 /* cocoa_joystick.m */,
				C4968CED62274D6FB0756E78 /* cocoa_monitor.m */,
				5C4F8D5CED97462291A372BB /* cocoa_time.c */,
				2CC7D5B5448B4153B61F6924 /* cocoa_window.m */,
				BC1E654B149342D09D1D6B12 /* context.c */,
				DE6BADF5951E46C59CF5C98F /* gamma.c */,
				6EE5AA8D040A4FFEAA0FA2D2 /* init.c */,
				A1C57A65C1E54467858263E3 /* input.c */,
				9F45A3FC7DA64CD38AC16442 /* joystick.c */,
				3ADB65DF8A524087AFB3EDA0 /* monitor.c */,
				58FF0CB06B1B46DBBF4D070E /* nsgl_context.m */,
				F64454590A604863A2EF9EFB /* time.c */,
				F7ABBDF43D0247A3BA972B22 /* window.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		75BCD3E95DD944199DC661CF /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		7653924A7C284C3A91CB5765 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F056A05EA8314FB0836BA682 /* defaults.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		77768263B5394CBC8E9E6737 /* Resources */ = {
			isa = PBXGroup;
			children = (
				DEEE68C5877242609E1EFC47 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		7F27A051345C4A82928A5FE4 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				6BD66C6C58654AEB834DEE2C /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		80B99558169D487D9EC79E26 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				93A45F83034A46EBB24550BB /* getopt.c */,
				DBCDF9D83BDD42089DE77385 /* gamma.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		86C6F7AE05CD4FE498FB59B6 /* Resources */ = {
			isa = PBXGroup;
			children = (
				C2CF0CE57E704749A3D9CA13 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		89C7F82D606E4728B5425423 /* sharing */ = {
			isa = PBXGroup;
			children = (
				4809E43914FD4B73BA4602CC /* Source Files */,
				77768263B5394CBC8E9E6737 /* Resources */,
				E3B2477657AF4CEABBC1C0B6 /* CMakeLists.txt */,
			);
			name = sharing;
			sourceTree = "<group>";
		};
		8B3C5BDC562F41A3A67E8349 /* Resources */ = {
			isa = PBXGroup;
			children = (
				C11E763EC3CC49D39BB68773 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		9024110260604039BDD20887 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				75BCD3E95DD944199DC661CF /* CMake Rules */,
				009F70A531624AF7894BCA25 /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		93B09885DBE8440EA56E31D8 /* tearing */ = {
			isa = PBXGroup;
			children = (
				DE70F54CF691452C915B15A2 /* Source Files */,
				19658C53FDE64D589BD08705 /* Resources */,
				B7F3FC5DBC9A46C0B81BB566 /* CMakeLists.txt */,
			);
			name = tearing;
			sourceTree = "<group>";
		};
		9918396F77F3490A87A7A6ED /* Header Files */ = {
			isa = PBXGroup;
			children = (
				35C884BEE7A34766855270A3 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		99EA2CE994514E8D8FF2DF82 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				589610B40746428E9D3F7D9C /* tinycthread.c */,
				6A37B2CE3BEC4A10A07DF10A /* threads.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A23E534CC2FE445DAFD2BCC3 /* iconify */ = {
			isa = PBXGroup;
			children = (
				E783C3A93F85441CA9513641 /* Source Files */,
				7F27A051345C4A82928A5FE4 /* Header Files */,
				8851BAFF9FA34A8982FAD608 /* CMakeLists.txt */,
			);
			name = iconify;
			sourceTree = "<group>";
		};
		A2500789FF6546E780DC9C89 /* joysticks */ = {
			isa = PBXGroup;
			children = (
				66E32E4239A244FBBBBA1905 /* Source Files */,
				BBE9C6D414CB4DAF830B5782 /* CMakeLists.txt */,
			);
			name = joysticks;
			sourceTree = "<group>";
		};
		A283CEC0BCD246DBB49FD905 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				9BC90D6AB01A4099A47AE53F /* tinycthread.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		AA76588B61584AD59DDAE8AD = {
			isa = PBXGroup;
			children = (
				079EFF0D5D634A9CA1F806FC /* Sources */,
				097EDE51BFD64DFCBC5784D3 /* Resources */,
				E58BF0F8952545BCA60D40CC /* Products */,
			);
			sourceTree = "<group>";
		};
		B4D6C41EDEFA45B69C4FE5B2 /* fsaa */ = {
			isa = PBXGroup;
			children = (
				37D74B1AFC104D96971D0D0E /* Source Files */,
				9918396F77F3490A87A7A6ED /* Header Files */,
				B99BE7BEB6804956A662E434 /* CMakeLists.txt */,
			);
			name = fsaa;
			sourceTree = "<group>";
		};
		B761F6EEB2C64B2FB9C40881 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				3C67AC9A99CC48D7A1A5D6AF /* peter.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		CC848B69CF234B9E8F2767A9 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C1630D2CE29E4DF0839B8310 /* getopt.c */,
				789EE33D84A44884845AEE06 /* glfwinfo.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		CF6EACCB0FA640BA921102D6 /* uninstall */ = {
			isa = PBXGroup;
			children = (
				4A86090242834D6D93191073 /* CMake Rules */,
				BEB4CC2D38BD49E5AA124A88 /* CMakeLists.txt */,
			);
			name = uninstall;
			sourceTree = "<group>";
		};
		D027125C63B04251BC9F4AA3 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				345EC49F6C994893AFE68642 /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		DE70F54CF691452C915B15A2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4C8489C392BC4B8C9B63F724 /* tearing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E2DEAC6E2AF342F3B2ABD990 /* gamma */ = {
			isa = PBXGroup;
			children = (
				80B99558169D487D9EC79E26 /* Source Files */,
				D027125C63B04251BC9F4AA3 /* Header Files */,
				6469B94B9618458188FAE3CC /* CMakeLists.txt */,
			);
			name = gamma;
			sourceTree = "<group>";
		};
		E58BF0F8952545BCA60D40CC /* Products */ = {
			isa = PBXGroup;
			children = (
				CC8140A75C2F4087B6BFB3ED /* libglfw3.a */,
				C0E89CBF0C034283B4608783 /* accuracy.app */,
				2F7CF4680F7A4623BEC6CAE0 /* clipboard */,
				53210BEA05654DB0B5373FE3 /* defaults */,
				0F9AD8ADDA2B4BB89381E967 /* events */,
				BFFA9D661B8748F68EB865A7 /* fsaa */,
				CF0374B5EDC94CEC8914FA85 /* gamma */,
				26F136C1DBAF45BA93E92A64 /* glfwinfo */,
				764B52CE2677417EBC45A8CE /* iconify */,
				0A89B13BCD554E14A6A0E452 /* joysticks */,
				9294F9FF9FAA4B11B12E50F4 /* modes */,
				EB10B2C5757B4D48A08465D6 /* peter */,
				1C4EFE22C9394B9B924404DD /* reopen */,
				708F610716AB401DAC4A7161 /* sharing.app */,
				996A32546C16405AB0AFCEFE /* tearing.app */,
				01D376AF310D4160ACCC5A53 /* threads.app */,
				2050BAD8A7C047D1813DC6A0 /* title.app */,
				EDF5EC798CB044BB8C671E0C /* windows.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E5C1D2154EE349E294F6D046 /* reopen */ = {
			isa = PBXGroup;
			children = (
				059E52C77C744D39A3EB8637 /* Source Files */,
				8A17FDBC90BE4FD6BAC8C910 /* CMakeLists.txt */,
			);
			name = reopen;
			sourceTree = "<group>";
		};
		E737D5357753468181AF2A8A /* Resources */ = {
			isa = PBXGroup;
			children = (
				E10F62E4C6D940A292363672 /* Info.plist */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		E783C3A93F85441CA9513641 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E8545181E3364EC2A5C9213F /* getopt.c */,
				A277B1841CCE466E9CEA1B80 /* iconify.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EC3542911690483D848DAAFE /* modes */ = {
			isa = PBXGroup;
			children = (
				2AB7B5357B7649758AE0B005 /* Source Files */,
				35BB4DA12CB64029BC302D45 /* Header Files */,
				25CBA948C9E743D9ADCD3F81 /* CMakeLists.txt */,
			);
			name = modes;
			sourceTree = "<group>";
		};
		F043AFEA6F554B339542DCCA /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0BA331DCA9AF4DD8A90210F7 /* accuracy.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		F21D95CD61C54BEE8C2B07C6 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				D12E979FB6A14720965198CF /* getopt.h */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		F62B7FC83FD84EBC91023941 /* threads */ = {
			isa = PBXGroup;
			children = (
				99EA2CE994514E8D8FF2DF82 /* Source Files */,
				A283CEC0BCD246DBB49FD905 /* Header Files */,
				E737D5357753468181AF2A8A /* Resources */,
				A91C3560FA8548C48D939280 /* CMakeLists.txt */,
			);
			name = threads;
			sourceTree = "<group>";
		};
		F7A200E9F05744528C42A2BD /* glfw */ = {
			isa = PBXGroup;
			children = (
				7292CE0739394D8E921A2AA2 /* Source Files */,
				61178CB4EA074E6EADB53F7A /* Header Files */,
				40B3ED6693D744C9AAE92FAB /* CMakeLists.txt */,
			);
			name = glfw;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		0EF04DE4E6F34F52BC5B5523 /* windows */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B4A33AA20AAE40A0AA6958FB /* Build configuration list for PBXNativeTarget "windows" */;
			buildPhases = (
				2F47B5DE851B4B1492A5C566 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				14075D9A614D459CA496EDEF /* PBXTargetDependency */,
				779438EFD88C4A6796297D1D /* PBXTargetDependency */,
			);
			name = windows;
			productName = windows;
			productReference = EDF5EC798CB044BB8C671E0C /* windows.app */;
			productType = "com.apple.product-type.application";
		};
		1239216D21544BDDA125A609 /* title */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 416726A7E291412999E5DE32 /* Build configuration list for PBXNativeTarget "title" */;
			buildPhases = (
				C0E11A9F4BBA44C39FC727F8 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				8CBA24FFA5064C1795591DFB /* PBXTargetDependency */,
				323218710127430B9BAA8B93 /* PBXTargetDependency */,
			);
			name = title;
			productName = title;
			productReference = 2050BAD8A7C047D1813DC6A0 /* title.app */;
			productType = "com.apple.product-type.application";
		};
		1D45713426554033AF07DBF6 /* tearing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FA0127A4CC7644829447CBF9 /* Build configuration list for PBXNativeTarget "tearing" */;
			buildPhases = (
				4ADCA8E4CD154774B5F400DB /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				2085EB9E77104ECE990F1F69 /* PBXTargetDependency */,
				8A200D1974984EE29E2DDB44 /* PBXTargetDependency */,
			);
			name = tearing;
			productName = tearing;
			productReference = 996A32546C16405AB0AFCEFE /* tearing.app */;
			productType = "com.apple.product-type.application";
		};
		297FC99FE01644DFB923C86D /* modes */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 67FF2D4C49674289ADA95915 /* Build configuration list for PBXNativeTarget "modes" */;
			buildPhases = (
				9E550331038447D3A7C6590A /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				8FA299E9C8DC4DD3BB68F31E /* PBXTargetDependency */,
				468EDF9514F2445492471D0F /* PBXTargetDependency */,
			);
			name = modes;
			productName = modes;
			productReference = 9294F9FF9FAA4B11B12E50F4 /* modes */;
			productType = "com.apple.product-type.tool";
		};
		2AAF3C3436AE412A8268750C /* defaults */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B6B4200B3E0D4D939433C6F2 /* Build configuration list for PBXNativeTarget "defaults" */;
			buildPhases = (
				9F93A0E5E9D64F3D83127416 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				7F4361D74E6848C1A192AECB /* PBXTargetDependency */,
				A5DA192E2BC0426D8454CA11 /* PBXTargetDependency */,
			);
			name = defaults;
			productName = defaults;
			productReference = 53210BEA05654DB0B5373FE3 /* defaults */;
			productType = "com.apple.product-type.tool";
		};
		2B8E57A3FF6348869871E9DD /* threads */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F67A8ABFB56E4AA6B9B47205 /* Build configuration list for PBXNativeTarget "threads" */;
			buildPhases = (
				D443E0F7D45642799A9E09AB /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				00683B53E47D404BA57AB9D7 /* PBXTargetDependency */,
				9A4ABA82A3A14B75BA29ABBD /* PBXTargetDependency */,
			);
			name = threads;
			productName = threads;
			productReference = 01D376AF310D4160ACCC5A53 /* threads.app */;
			productType = "com.apple.product-type.application";
		};
		34DF5061136B42A3979FAA93 /* sharing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F6E9086A234A4C4ABA013D08 /* Build configuration list for PBXNativeTarget "sharing" */;
			buildPhases = (
				C151EAFFDEA94D4B921587AB /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				01F02A0C56404A4AB1AC31FE /* PBXTargetDependency */,
				6DC76328EEFF4021B6C25ACC /* PBXTargetDependency */,
			);
			name = sharing;
			productName = sharing;
			productReference = 708F610716AB401DAC4A7161 /* sharing.app */;
			productType = "com.apple.product-type.application";
		};
		3CA6AD0ABCB34DDEAD177380 /* clipboard */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 21D332C2FC6E46E3B2FE42FE /* Build configuration list for PBXNativeTarget "clipboard" */;
			buildPhases = (
				8A54DCD17A9E41BCA7E4DA3F /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				CD91AC96F3484F378E8344F6 /* PBXTargetDependency */,
				4C407BE7A84448F69388D259 /* PBXTargetDependency */,
			);
			name = clipboard;
			productName = clipboard;
			productReference = 2F7CF4680F7A4623BEC6CAE0 /* clipboard */;
			productType = "com.apple.product-type.tool";
		};
		5E289C6187C648A1BCA0C764 /* joysticks */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E954F766B17E454DB8E4A641 /* Build configuration list for PBXNativeTarget "joysticks" */;
			buildPhases = (
				1601D81E00CF4526B0B3B158 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				152AD3424544428EB100166E /* PBXTargetDependency */,
				6AEFEFCE09AB4F6A9B183C02 /* PBXTargetDependency */,
			);
			name = joysticks;
			productName = joysticks;
			productReference = 0A89B13BCD554E14A6A0E452 /* joysticks */;
			productType = "com.apple.product-type.tool";
		};
		711DE5E8E8824C9987A18AD0 /* glfwinfo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E81743F9FFBE47B59E549940 /* Build configuration list for PBXNativeTarget "glfwinfo" */;
			buildPhases = (
				F6613A53CCEF485A940D552D /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				282ED1A21A1C4E188E2554E1 /* PBXTargetDependency */,
				2CCFE484D47F4EC9B482F759 /* PBXTargetDependency */,
			);
			name = glfwinfo;
			productName = glfwinfo;
			productReference = 26F136C1DBAF45BA93E92A64 /* glfwinfo */;
			productType = "com.apple.product-type.tool";
		};
		8638A9A2FC0547188B19BA48 /* events */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = AC40FC216BB44355BDCA0D67 /* Build configuration list for PBXNativeTarget "events" */;
			buildPhases = (
				DAF76188C657430FB9CA4CD1 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				2B8222CCE25B451B8FA17ECF /* PBXTargetDependency */,
				0E465F7BC75D4AC2871BC54C /* PBXTargetDependency */,
			);
			name = events;
			productName = events;
			productReference = 0F9AD8ADDA2B4BB89381E967 /* events */;
			productType = "com.apple.product-type.tool";
		};
		884FD0C21EBB4B1BAB268D06 /* accuracy */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 31F6DA5A6F0C4BE484B38C71 /* Build configuration list for PBXNativeTarget "accuracy" */;
			buildPhases = (
				E9AC56C4F0D941A4B5DCEC12 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				4A3BA952E2DB475E8E7BE38F /* PBXTargetDependency */,
				06C2D6EB515D4CCEA6BFE3DA /* PBXTargetDependency */,
			);
			name = accuracy;
			productName = accuracy;
			productReference = C0E89CBF0C034283B4608783 /* accuracy.app */;
			productType = "com.apple.product-type.application";
		};
		BF1C3E2250AB4D9DBCF13EFD /* gamma */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 05E69BA1F38E45B5B91003BD /* Build configuration list for PBXNativeTarget "gamma" */;
			buildPhases = (
				D6081054BBB0445CA10D5C1B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				46F3845082C64D9C86A8104B /* PBXTargetDependency */,
				5CEC3A76A2044F09940D79B1 /* PBXTargetDependency */,
			);
			name = gamma;
			productName = gamma;
			productReference = CF0374B5EDC94CEC8914FA85 /* gamma */;
			productType = "com.apple.product-type.tool";
		};
		C419C7B6C436431D98505DF1 /* peter */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6D5DDB080E60485EADB05774 /* Build configuration list for PBXNativeTarget "peter" */;
			buildPhases = (
				2ED2BE728AB548E8A20E1A04 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				49232848C8084D4587970AB3 /* PBXTargetDependency */,
				48E34B5F4FCB449FA3D41138 /* PBXTargetDependency */,
			);
			name = peter;
			productName = peter;
			productReference = EB10B2C5757B4D48A08465D6 /* peter */;
			productType = "com.apple.product-type.tool";
		};
		C4C3F15AEFF2412CB7E63417 /* iconify */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0D1B266DF86847CF8FE41A89 /* Build configuration list for PBXNativeTarget "iconify" */;
			buildPhases = (
				8B62056D8E08443F8B1CBF10 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				73FDE1BBF2D24D67A2FFC8D7 /* PBXTargetDependency */,
				3B04CE6BF94C422DAB0A1476 /* PBXTargetDependency */,
			);
			name = iconify;
			productName = iconify;
			productReference = 764B52CE2677417EBC45A8CE /* iconify */;
			productType = "com.apple.product-type.tool";
		};
		CF6070445AB04FD498EB775A /* glfw */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2AF2FF6E1EEB4B97A9EA9A24 /* Build configuration list for PBXNativeTarget "glfw" */;
			buildPhases = (
				3B1DAC86D5FE43F1BED061BA /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				B46E0DAFA849410785B19FB6 /* PBXTargetDependency */,
			);
			name = glfw;
			productName = glfw;
			productReference = CC8140A75C2F4087B6BFB3ED /* libglfw3.a */;
			productType = "com.apple.product-type.library.static";
		};
		D45A0DEB306740BA8DF9E1D6 /* reopen */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A1335D5389CF43CC80B4D7C2 /* Build configuration list for PBXNativeTarget "reopen" */;
			buildPhases = (
				AFC9CA2175C6406C9703F00E /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				2116AEB68EDC431B8A3692EC /* PBXTargetDependency */,
				E4BC3EFB1DFD4725992426BF /* PBXTargetDependency */,
			);
			name = reopen;
			productName = reopen;
			productReference = 1C4EFE22C9394B9B924404DD /* reopen */;
			productType = "com.apple.product-type.tool";
		};
		EBAB4622B16F4C3BB45A4B0D /* fsaa */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6719E7FEA2F545539495E4D8 /* Build configuration list for PBXNativeTarget "fsaa" */;
			buildPhases = (
				24F6E0AB71E646C5802B3F71 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				608BF6FE663F4E0588E30AFA /* PBXTargetDependency */,
				F64DA9A064764EAC923C3545 /* PBXTargetDependency */,
			);
			name = fsaa;
			productName = fsaa;
			productReference = BFFA9D661B8748F68EB865A7 /* fsaa */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		30DDA88620EE494A8DF0633A /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 0720;
			};
			buildConfigurationList = 8A42296217884F008492129E /* Build configuration list for PBXProject "UaR_OpenGL" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = AA76588B61584AD59DDAE8AD;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				8D3123BE21E34D9588EACCA5 /* ALL_BUILD */,
				6F1F21A2496A4748AA733948 /* ZERO_CHECK */,
				C7B8107C32964FA68B5EC570 /* install */,
				3A151A1A7592416485A18122 /* uninstall */,
				CF6070445AB04FD498EB775A /* glfw */,
				884FD0C21EBB4B1BAB268D06 /* accuracy */,
				3CA6AD0ABCB34DDEAD177380 /* clipboard */,
				2AAF3C3436AE412A8268750C /* defaults */,
				8638A9A2FC0547188B19BA48 /* events */,
				EBAB4622B16F4C3BB45A4B0D /* fsaa */,
				BF1C3E2250AB4D9DBCF13EFD /* gamma */,
				711DE5E8E8824C9987A18AD0 /* glfwinfo */,
				C4C3F15AEFF2412CB7E63417 /* iconify */,
				5E289C6187C648A1BCA0C764 /* joysticks */,
				297FC99FE01644DFB923C86D /* modes */,
				C419C7B6C436431D98505DF1 /* peter */,
				D45A0DEB306740BA8DF9E1D6 /* reopen */,
				34DF5061136B42A3979FAA93 /* sharing */,
				1D45713426554033AF07DBF6 /* tearing */,
				2B8E57A3FF6348869871E9DD /* threads */,
				1239216D21544BDDA125A609 /* title */,
				0EF04DE4E6F34F52BC5B5523 /* windows */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		1CC0C59F74FF439CBC46D03E /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode -f /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		458371B46E0847A79AA9CF46 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode -f /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/CMakeScripts/ZERO_CHECK_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		4A340B9F6F764BF9B2EFF7D3 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw -f /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/CMakeScripts/uninstall_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		8EB739A272FB40B4887E409D /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode -f /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		1601D81E00CF4526B0B3B158 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9EDB21AA18E141A59B5D1487 /* joysticks.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24F6E0AB71E646C5802B3F71 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3CBFECC6A9BA4C45B4C5F337 /* getopt.c in Sources */,
				9B43CC8F7EAF40D8B0BEB813 /* fsaa.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2ED2BE728AB548E8A20E1A04 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				25F11E08C6294CADBCC417A9 /* peter.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2F47B5DE851B4B1492A5C566 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6C228173492D4AF28DCBC3D3 /* windows.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3B1DAC86D5FE43F1BED061BA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8C1F00BF3C6143C486929AB1 /* clipboard.c in Sources */,
				3DC750D92A4345DDBEA10990 /* cocoa_clipboard.m in Sources */,
				F0499E15BCF5484C9EF0800C /* cocoa_gamma.c in Sources */,
				9F3E49D415B24F838A742E9E /* cocoa_init.m in Sources */,
				7347028A417B4DF289EA9201 /* cocoa_joystick.m in Sources */,
				EB6E4AAAF297446C8760A4F3 /* cocoa_monitor.m in Sources */,
				74ADA7F986CF4BA6B55D0B0E /* cocoa_time.c in Sources */,
				B730C9F37DCE40BCA5177110 /* cocoa_window.m in Sources */,
				CE7B7F4042894D29B07318FB /* context.c in Sources */,
				1E1E816C36C1405290A152F4 /* gamma.c in Sources */,
				F26731495E8049F7A74400E6 /* init.c in Sources */,
				7FA1229E70AE4711BC818C24 /* input.c in Sources */,
				9A5D8C2859E24D95B71BD92D /* joystick.c in Sources */,
				CAEE9678D59E4A5E99492683 /* monitor.c in Sources */,
				157ACF8D39D74FF489201F63 /* nsgl_context.m in Sources */,
				98DBA69B1C869B0400C677D5 /* Opengl_Version.cpp in Sources */,
				B846CCC557814096B479FB8B /* time.c in Sources */,
				502497F53F1746CCB12A4705 /* window.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4ADCA8E4CD154774B5F400DB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B2534D6082444A5CB1FFE21C /* tearing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8A54DCD17A9E41BCA7E4DA3F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2ADE4680781C412084E7114E /* getopt.c in Sources */,
				354DE5216BD5434698BE7967 /* clipboard.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8B62056D8E08443F8B1CBF10 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A688E230C6944812A3A8CB64 /* getopt.c in Sources */,
				E63DA1169AA541779C650416 /* iconify.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9E550331038447D3A7C6590A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E27E5E801DD143B48BEE85C9 /* getopt.c in Sources */,
				D2D45FC447A94E16A5A07F76 /* modes.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9F93A0E5E9D64F3D83127416 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				12B85B3286CD467E82A24F5F /* defaults.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AFC9CA2175C6406C9703F00E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D3342057BF7546C581FF70B6 /* reopen.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C0E11A9F4BBA44C39FC727F8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1B173AD8D7494F95B6CB713C /* title.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C151EAFFDEA94D4B921587AB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EF27CB8FAC934481B2A34ED6 /* sharing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D443E0F7D45642799A9E09AB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				440797FD6F4D4E37835CCFE4 /* tinycthread.c in Sources */,
				331AB309F0A34C289A8D6C57 /* threads.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D6081054BBB0445CA10D5C1B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CE134754D5C74930848DE034 /* getopt.c in Sources */,
				BF8C8E4E4AA9419CA89AEB44 /* gamma.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DAF76188C657430FB9CA4CD1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AE204C9165454EAC8DF14D0B /* getopt.c in Sources */,
				2FC4A8BDCF0941C7A1391F14 /* events.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E9AC56C4F0D941A4B5DCEC12 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A4EEA72E938C4ECEA58F59F9 /* accuracy.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F6613A53CCEF485A940D552D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2FDB88F3011A47D28AC3181A /* getopt.c in Sources */,
				86D705B578FB49E6B4805C8B /* glfwinfo.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		00683B53E47D404BA57AB9D7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = F42BB345D8B444FDBDB90218 /* PBXContainerItemProxy */;
		};
		01F02A0C56404A4AB1AC31FE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 88EAACA6720B4DFFAFDD5A8C /* PBXContainerItemProxy */;
		};
		06C2D6EB515D4CCEA6BFE3DA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = CF9CE0E070A140F5A6B598A2 /* PBXContainerItemProxy */;
		};
		0B1444E4CB9644E3B11D51E0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2AAF3C3436AE412A8268750C /* defaults */;
			targetProxy = CB3464B9A3D146EC8B551AB3 /* PBXContainerItemProxy */;
		};
		0B81CDF3CDB74ECEB7B9C9A6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0EF04DE4E6F34F52BC5B5523 /* windows */;
			targetProxy = 085DDBBD80E54ED7AE6BD00A /* PBXContainerItemProxy */;
		};
		0D5F7338CBD7446CA5D83C58 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1D45713426554033AF07DBF6 /* tearing */;
			targetProxy = B15860B5875B4455AE91B1B4 /* PBXContainerItemProxy */;
		};
		0D8A7E0C9BBE409BB36C39E3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8638A9A2FC0547188B19BA48 /* events */;
			targetProxy = F02722809D044C23A04ACEF9 /* PBXContainerItemProxy */;
		};
		0E1FB8A8526049058E337E45 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 884FD0C21EBB4B1BAB268D06 /* accuracy */;
			targetProxy = 571CFC444C614B099A613B2B /* PBXContainerItemProxy */;
		};
		0E465F7BC75D4AC2871BC54C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 274FD55A08E7470B9250D33E /* PBXContainerItemProxy */;
		};
		14075D9A614D459CA496EDEF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 678EED1579574FE397C0E3D2 /* PBXContainerItemProxy */;
		};
		152AD3424544428EB100166E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 3393CD5BB9604F2BB8A86435 /* PBXContainerItemProxy */;
		};
		1CDD3A6D355243019218B9FD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BF1C3E2250AB4D9DBCF13EFD /* gamma */;
			targetProxy = 072F12C8AEBE403FB3F0CC27 /* PBXContainerItemProxy */;
		};
		2085EB9E77104ECE990F1F69 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 3B5F7E170F184C0092C62583 /* PBXContainerItemProxy */;
		};
		2116AEB68EDC431B8A3692EC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = EF92E53E8CF040FCB665614F /* PBXContainerItemProxy */;
		};
		282ED1A21A1C4E188E2554E1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 244CEC60721D42D0BAC4F165 /* PBXContainerItemProxy */;
		};
		28412BF892374ED7A390BCBF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C419C7B6C436431D98505DF1 /* peter */;
			targetProxy = 6598950C318F4E5885328075 /* PBXContainerItemProxy */;
		};
		2B8222CCE25B451B8FA17ECF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = A73269D4A9BF497D9621E3F7 /* PBXContainerItemProxy */;
		};
		2CCFE484D47F4EC9B482F759 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 527EF267E1FA4232AC7E40D6 /* PBXContainerItemProxy */;
		};
		2F0DE6D301474E1E90FC8B08 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8D3123BE21E34D9588EACCA5 /* ALL_BUILD */;
			targetProxy = 4AFAFCD471494944B67C0326 /* PBXContainerItemProxy */;
		};
		323218710127430B9BAA8B93 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = E1B0C013C403471FB2BBBF17 /* PBXContainerItemProxy */;
		};
		38A69A013F9B4BE19E845699 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = EBAB4622B16F4C3BB45A4B0D /* fsaa */;
			targetProxy = DC086280D49B4407B65B2046 /* PBXContainerItemProxy */;
		};
		3B04CE6BF94C422DAB0A1476 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = A86CBE7570C542FE8285FFCA /* PBXContainerItemProxy */;
		};
		468EDF9514F2445492471D0F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 689432F78C0D41AEA68082F4 /* PBXContainerItemProxy */;
		};
		46F3845082C64D9C86A8104B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = EE7B4CDF038240479A567285 /* PBXContainerItemProxy */;
		};
		48E34B5F4FCB449FA3D41138 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 10BBDC98BDAD4F1281E15B7F /* PBXContainerItemProxy */;
		};
		49232848C8084D4587970AB3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 7D145CDE5F974D458E7964D4 /* PBXContainerItemProxy */;
		};
		4A3BA952E2DB475E8E7BE38F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = CA85792F12274E84B6784F90 /* PBXContainerItemProxy */;
		};
		4C407BE7A84448F69388D259 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = ABC47E29384D4B5789D8AF71 /* PBXContainerItemProxy */;
		};
		52B78E6B23654E8484011C2D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D45A0DEB306740BA8DF9E1D6 /* reopen */;
			targetProxy = FB9A5081D79A4AF0825FF1AE /* PBXContainerItemProxy */;
		};
		5CEC3A76A2044F09940D79B1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 6EF558AA98C746B8892A5DCB /* PBXContainerItemProxy */;
		};
		608BF6FE663F4E0588E30AFA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = D25C269BA8704673B8085524 /* PBXContainerItemProxy */;
		};
		665AD6C62A7545DBB4050E69 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 34DF5061136B42A3979FAA93 /* sharing */;
			targetProxy = 231799A1430F4202B82425E1 /* PBXContainerItemProxy */;
		};
		6AEFEFCE09AB4F6A9B183C02 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 336A31F1D8F74BE08DBB299B /* PBXContainerItemProxy */;
		};
		6DC76328EEFF4021B6C25ACC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 7868C1C967FE4466BCFF57ED /* PBXContainerItemProxy */;
		};
		73FDE1BBF2D24D67A2FFC8D7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 282DA73ACA874B7D800A9BB4 /* PBXContainerItemProxy */;
		};
		7751FBFE0B88472F83B29E79 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 711DE5E8E8824C9987A18AD0 /* glfwinfo */;
			targetProxy = 9B1CB49276BC43358072F1D0 /* PBXContainerItemProxy */;
		};
		779438EFD88C4A6796297D1D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 835AFB3C3D544E4EA495B7D4 /* PBXContainerItemProxy */;
		};
		7F4361D74E6848C1A192AECB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = A6F29638F68748D08FACB0E1 /* PBXContainerItemProxy */;
		};
		8A200D1974984EE29E2DDB44 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 21A5943C0D424D6880CFD8F9 /* PBXContainerItemProxy */;
		};
		8CBA24FFA5064C1795591DFB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 43067DDB62844661BDF9B98A /* PBXContainerItemProxy */;
		};
		8FA299E9C8DC4DD3BB68F31E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 2796C8C5189143F8A9644225 /* PBXContainerItemProxy */;
		};
		9A4ABA82A3A14B75BA29ABBD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = F6A13310ABCC4C46B9B1F3A1 /* PBXContainerItemProxy */;
		};
		A5DA192E2BC0426D8454CA11 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 2AB4ED5C52144DFD8AA6F4F3 /* PBXContainerItemProxy */;
		};
		B02E7134F693406DB182F648 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2B8E57A3FF6348869871E9DD /* threads */;
			targetProxy = 08288C66FD964BD4A2D171E5 /* PBXContainerItemProxy */;
		};
		B46E0DAFA849410785B19FB6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 487D6A727C744022B7D89C98 /* PBXContainerItemProxy */;
		};
		BD3B57331F9040BB817E9EAF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5E289C6187C648A1BCA0C764 /* joysticks */;
			targetProxy = 5E84B9177BC54C3991C28A25 /* PBXContainerItemProxy */;
		};
		C154CF2AAC7B46A093D9225E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 297FC99FE01644DFB923C86D /* modes */;
			targetProxy = 907FFCFB47AD4A06A0958962 /* PBXContainerItemProxy */;
		};
		C3C5A93A7CB542728C981F6C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1239216D21544BDDA125A609 /* title */;
			targetProxy = 39B6B5824DA74B788205FEEA /* PBXContainerItemProxy */;
		};
		C62C301CC3454A1896DBA482 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 3CA6AD0ABCB34DDEAD177380 /* clipboard */;
			targetProxy = 809CA010EDEE4B73A01682F2 /* PBXContainerItemProxy */;
		};
		CD91AC96F3484F378E8344F6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 951D819DCF7B4ACC93C0CD90 /* PBXContainerItemProxy */;
		};
		D351765DEED348C2B19604DD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C4C3F15AEFF2412CB7E63417 /* iconify */;
			targetProxy = 3B5BB07D8D424C0EB6F75931 /* PBXContainerItemProxy */;
		};
		E4BC3EFB1DFD4725992426BF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = EDB82860C1B146D49533B70D /* PBXContainerItemProxy */;
		};
		EF4D0AFDB6EF45CEAB505E58 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = 5E0CB66F2FB74AC5AF6EBFFB /* PBXContainerItemProxy */;
		};
		F38322F0FFE348AFBC0C8083 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CF6070445AB04FD498EB775A /* glfw */;
			targetProxy = 68AAF01B99334465BD17A6AC /* PBXContainerItemProxy */;
		};
		F64DA9A064764EAC923C3545 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F1F21A2496A4748AA733948 /* ZERO_CHECK */;
			targetProxy = E9DC1F5E775C43BBAE682142 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		0591634A287C45DDBEE9853A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		076B762A4B4240FAB0DE5926 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				HEADER_SEARCH_PATHS = glew;
				"HEADER_SEARCH_PATHS[arch=*]" = glew;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk;
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/build;
			};
			name = Debug;
		};
		08DF6CD428484780A145BA3D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		09075D9E19B74310813D7EE8 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		09C412AEDFC64ECBBDF700D6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		0A8511DB6F8D4B8694A5EFA3 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		12695768362449BA9A96AE88 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/src,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = "     -Wall";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		1CBBFE7E020F4F94A5CD7E2C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				HEADER_SEARCH_PATHS = glew;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk;
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/build;
			};
			name = MinSizeRel;
		};
		1F5CEB6D336E492D866B67E4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		1F8150628E5B4129A5857D90 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/src,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		21778A250483462690A7DAFF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		24465C2465B24D14A62A0DEA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		258298001C6E49EB9C263C98 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		3021D8126E934EDE9307AC64 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		340BD2D0E0184645AF485B1B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		3789CE5CE5DB48D1AA761585 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		3896C6884FC54E7F8D9C1C0F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		3D7209B65E3948D282D4DEE8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		4188DBB3782340928DE8D2D3 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		41A6922339B048E9BA545F02 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		42273D969E294482A64004B2 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		471D61E8472B4270931973D9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		4D447359857D4F0C8C83815F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		4D67114C2CCB4C8AA38C22E5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		5201AB16CAF44B18AA390C2B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		547D9BF46AF9428897C9C737 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		554128BB5C3B440EADAA5CC1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		55E0A7C2E2584440873C0CD1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		58D6454231B440F78EB29947 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		59A7B36FBE8745EEBA50B763 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		5B5EC067490C4482AD213598 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/src,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		5BAA7A48F4BE4B1386F139A2 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		5C1A8AE2F31A4B3EBB8B4884 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		62B1664902304AA68D749843 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		6320A35E88C94B2D9149820D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		63DA90E7ED7946A9A9314804 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		68DDC6A7362B4A6D9E7025DF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		71C64D33300D424D809AD206 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		722FD361488A4B0C86771DD1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		7363ED00E48C4AFCA7439103 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		74A288B2D92E4D2BBDC02459 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = fsaa;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		74A9AB8DFCB94EFDA0E7C9E0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		74BC19D9F5D046F7958C579C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		75968EAE835F45CA93852C55 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		77695B3A0C2F4B97B5AE5D40 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		78892979C4FD44A69549D183 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		7BD757F4CA284755892E48F7 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		7C62799B42FE456DAEE4E0CD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		7F4F8A875ED44E18AB10D2C8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		7F583A3895A0447084921D7E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		850BEEB8839C468A8D47BDB3 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		85BFC97EA25D4BD2ADEE8D86 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		889EEB01E1F54580B4BC8982 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		89F8F8626A53435C940CB51B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/threads.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = threads;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		8CFC95F78FAF482A81361261 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		8DA3EC1F442849969AD5737B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = events;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		921F764C93E9446AA9240ED8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		925B28E27D69495586CF4220 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				HEADER_SEARCH_PATHS = glew;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk;
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/build;
			};
			name = RelWithDebInfo;
		};
		9285AEF5E16D4864AA856C6D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		95009569635B49C1894CBA61 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		955914115DC44CF096E09FC8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		95592B5FF1734C36A49FF7A7 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		9966B01482F54A51AA594B5D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A0246D17800840F982CD33D4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		A03EE5BDA2C84F8B8EE5A69F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = reopen;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		A2FA31FBDCB841E4A430FE56 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		ACEFF4EDB2CD458AA0682225 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		B227105CEB31438C9322FCAF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		B260F6C1E73748E3B3C93D47 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = clipboard;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		B30BF9B559E2423F9C88218C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		B83DF0518DC849A19AB1D7E8 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = joysticks;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		BF0CC4B9CD024C9B83BFD7DF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = modes;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		BF1A0EE7EE054D49BBCF2F38 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/title.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = title;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		C2DFA61B1EF6467A895C82F4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/accuracy.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = accuracy;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		C442CF5D5CC4470590633C62 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					_GLFW_USE_CONFIG_H,
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/src,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfw3;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		C755A5E7009C4E458E78EC9D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		C8E4AF2671CB40B5BC84D9B9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/windows.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = windows;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		CA3806EE0EB0431CAFD6A0F7 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		D4B49901BDDD420A9982FB00 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		D7C98DCF2A6847D3A1A1C889 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
				);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		D966684E1920436E8D3A11CE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/sharing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = sharing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		DAD4B8CAED7E44CE833D9F7A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		E7539262957B493BAA21BF30 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/RelWithDebInfo/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gamma;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = RelWithDebInfo;
		};
		E7766AB0C7BD421A8161042A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				HEADER_SEARCH_PATHS = glew;
				"HEADER_SEARCH_PATHS[arch=*]" = glew;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk;
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/build;
			};
			name = Release;
		};
		EF4E98DB6D384649B70B438A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		F0002DD703C04E6BAA321297 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INFOPLIST_FILE = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests/CMakeFiles/tearing.dir/Info.plist;
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = tearing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		F95A7B2009714D159F66C107 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Release;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Release/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = glfwinfo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		F96FA6C4A5104A27A0703805 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		F9F5856B90314F608C414F18 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = peter;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
		FA14972759194966ABD16B68 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = uninstall;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Release;
		};
		FAA5FBDCBC0F4609A91C7D45 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-Wall",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/MinSizeRel/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = defaults;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = MinSizeRel;
		};
		FE7C40F6A85848BCBA17F9D1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/bin/Debug;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/include,
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/glfw/deps,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = "     -Wall";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/src/Debug/libglfw3.a,
					"-framework",
					OpenGL,
					"-framework",
					Cocoa,
					"-framework",
					OpenGL,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
					"-framework",
					Cocoa,
					"-framework",
					IOKit,
					"-framework",
					CoreFoundation,
					"-framework",
					CoreVideo,
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = iconify;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/Aytona/documents/GitHub/OpenGL_Tutorial/xcode/glfw/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
					"$(inherited)",
				);
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		05E69BA1F38E45B5B91003BD /* Build configuration list for PBXNativeTarget "gamma" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				ACEFF4EDB2CD458AA0682225 /* Debug */,
				DAD4B8CAED7E44CE833D9F7A /* Release */,
				42273D969E294482A64004B2 /* MinSizeRel */,
				E7539262957B493BAA21BF30 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0D1B266DF86847CF8FE41A89 /* Build configuration list for PBXNativeTarget "iconify" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FE7C40F6A85848BCBA17F9D1 /* Debug */,
				D4B49901BDDD420A9982FB00 /* Release */,
				71C64D33300D424D809AD206 /* MinSizeRel */,
				9285AEF5E16D4864AA856C6D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21D332C2FC6E46E3B2FE42FE /* Build configuration list for PBXNativeTarget "clipboard" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				921F764C93E9446AA9240ED8 /* Debug */,
				B260F6C1E73748E3B3C93D47 /* Release */,
				4188DBB3782340928DE8D2D3 /* MinSizeRel */,
				9966B01482F54A51AA594B5D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2AF2FF6E1EEB4B97A9EA9A24 /* Build configuration list for PBXNativeTarget "glfw" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				12695768362449BA9A96AE88 /* Debug */,
				C442CF5D5CC4470590633C62 /* Release */,
				5B5EC067490C4482AD213598 /* MinSizeRel */,
				1F8150628E5B4129A5857D90 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		31F6DA5A6F0C4BE484B38C71 /* Build configuration list for PBXNativeTarget "accuracy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				554128BB5C3B440EADAA5CC1 /* Debug */,
				C2DFA61B1EF6467A895C82F4 /* Release */,
				62B1664902304AA68D749843 /* MinSizeRel */,
				68DDC6A7362B4A6D9E7025DF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3FFA65A327F541F8BF1728E5 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				955914115DC44CF096E09FC8 /* Debug */,
				3D7209B65E3948D282D4DEE8 /* Release */,
				258298001C6E49EB9C263C98 /* MinSizeRel */,
				C755A5E7009C4E458E78EC9D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		416726A7E291412999E5DE32 /* Build configuration list for PBXNativeTarget "title" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6320A35E88C94B2D9149820D /* Debug */,
				BF1A0EE7EE054D49BBCF2F38 /* Release */,
				4D447359857D4F0C8C83815F /* MinSizeRel */,
				41A6922339B048E9BA545F02 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4711FAB1D81941D5AF2759F5 /* Build configuration list for PBXAggregateTarget "uninstall" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B30BF9B559E2423F9C88218C /* Debug */,
				FA14972759194966ABD16B68 /* Release */,
				78892979C4FD44A69549D183 /* MinSizeRel */,
				3789CE5CE5DB48D1AA761585 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6719E7FEA2F545539495E4D8 /* Build configuration list for PBXNativeTarget "fsaa" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				74A288B2D92E4D2BBDC02459 /* Debug */,
				09C412AEDFC64ECBBDF700D6 /* Release */,
				4D67114C2CCB4C8AA38C22E5 /* MinSizeRel */,
				3021D8126E934EDE9307AC64 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		67FF2D4C49674289ADA95915 /* Build configuration list for PBXNativeTarget "modes" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				85BFC97EA25D4BD2ADEE8D86 /* Debug */,
				BF0CC4B9CD024C9B83BFD7DF /* Release */,
				722FD361488A4B0C86771DD1 /* MinSizeRel */,
				5C1A8AE2F31A4B3EBB8B4884 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6D5DDB080E60485EADB05774 /* Build configuration list for PBXNativeTarget "peter" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F9F5856B90314F608C414F18 /* Debug */,
				3896C6884FC54E7F8D9C1C0F /* Release */,
				7363ED00E48C4AFCA7439103 /* MinSizeRel */,
				09075D9E19B74310813D7EE8 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8A42296217884F008492129E /* Build configuration list for PBXProject "UaR_OpenGL" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				076B762A4B4240FAB0DE5926 /* Debug */,
				E7766AB0C7BD421A8161042A /* Release */,
				1CBBFE7E020F4F94A5CD7E2C /* MinSizeRel */,
				925B28E27D69495586CF4220 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9A0709128BC246A8895CDA72 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				75968EAE835F45CA93852C55 /* Debug */,
				21778A250483462690A7DAFF /* Release */,
				7C62799B42FE456DAEE4E0CD /* MinSizeRel */,
				471D61E8472B4270931973D9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A1335D5389CF43CC80B4D7C2 /* Build configuration list for PBXNativeTarget "reopen" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A03EE5BDA2C84F8B8EE5A69F /* Debug */,
				8CFC95F78FAF482A81361261 /* Release */,
				547D9BF46AF9428897C9C737 /* MinSizeRel */,
				77695B3A0C2F4B97B5AE5D40 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AC40FC216BB44355BDCA0D67 /* Build configuration list for PBXNativeTarget "events" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8DA3EC1F442849969AD5737B /* Debug */,
				74BC19D9F5D046F7958C579C /* Release */,
				850BEEB8839C468A8D47BDB3 /* MinSizeRel */,
				63DA90E7ED7946A9A9314804 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B4A33AA20AAE40A0AA6958FB /* Build configuration list for PBXNativeTarget "windows" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C8E4AF2671CB40B5BC84D9B9 /* Debug */,
				95009569635B49C1894CBA61 /* Release */,
				0A8511DB6F8D4B8694A5EFA3 /* MinSizeRel */,
				08DF6CD428484780A145BA3D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B6B4200B3E0D4D939433C6F2 /* Build configuration list for PBXNativeTarget "defaults" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F96FA6C4A5104A27A0703805 /* Debug */,
				EF4E98DB6D384649B70B438A /* Release */,
				FAA5FBDCBC0F4609A91C7D45 /* MinSizeRel */,
				A0246D17800840F982CD33D4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B9A0301631A443939213B4EA /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B227105CEB31438C9322FCAF /* Debug */,
				7F4F8A875ED44E18AB10D2C8 /* Release */,
				0591634A287C45DDBEE9853A /* MinSizeRel */,
				D7C98DCF2A6847D3A1A1C889 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E81743F9FFBE47B59E549940 /* Build configuration list for PBXNativeTarget "glfwinfo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7F583A3895A0447084921D7E /* Debug */,
				F95A7B2009714D159F66C107 /* Release */,
				5BAA7A48F4BE4B1386F139A2 /* MinSizeRel */,
				55E0A7C2E2584440873C0CD1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E954F766B17E454DB8E4A641 /* Build configuration list for PBXNativeTarget "joysticks" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5201AB16CAF44B18AA390C2B /* Debug */,
				A2FA31FBDCB841E4A430FE56 /* Release */,
				889EEB01E1F54580B4BC8982 /* MinSizeRel */,
				B83DF0518DC849A19AB1D7E8 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F67A8ABFB56E4AA6B9B47205 /* Build configuration list for PBXNativeTarget "threads" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				340BD2D0E0184645AF485B1B /* Debug */,
				74A9AB8DFCB94EFDA0E7C9E0 /* Release */,
				89F8F8626A53435C940CB51B /* MinSizeRel */,
				1F5CEB6D336E492D866B67E4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F6E9086A234A4C4ABA013D08 /* Build configuration list for PBXNativeTarget "sharing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D966684E1920436E8D3A11CE /* Debug */,
				24465C2465B24D14A62A0DEA /* Release */,
				58D6454231B440F78EB29947 /* MinSizeRel */,
				95592B5FF1734C36A49FF7A7 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FA0127A4CC7644829447CBF9 /* Build configuration list for PBXNativeTarget "tearing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				59A7B36FBE8745EEBA50B763 /* Debug */,
				CA3806EE0EB0431CAFD6A0F7 /* Release */,
				F0002DD703C04E6BAA321297 /* MinSizeRel */,
				7BD757F4CA284755892E48F7 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 30DDA88620EE494A8DF0633A /* Project object */;
}
